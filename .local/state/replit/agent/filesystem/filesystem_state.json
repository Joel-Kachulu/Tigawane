{"file_contents":{"LOCATION_FEATURES.md":{"content":"# Location-Based Features for Tigawane\n\n## Overview\nTigawane now includes location-based filtering to help users find items shared by people nearby, reducing logistics problems and making community sharing more practical.\n\n## New Features\n\n### 1. Location Coordinates\n- **Database Changes**: Added `latitude` and `longitude` columns to both `profiles` and `items` tables\n- **GPS Support**: Items and user profiles now store precise GPS coordinates\n- **Geocoding**: Automatic conversion of addresses to coordinates using OpenStreetMap\n\n### 2. Location Context\n- **User Location**: Automatically detects user's current location using browser geolocation\n- **Location Selection**: Users can choose from predefined Malawi cities or use their current location\n- **Radius Filtering**: Configurable search radius (1km to 100km)\n\n### 3. Location Selector Component\n- **Current Location Display**: Shows user's current GPS coordinates\n- **City Selection**: Dropdown with major Malawi cities (Lilongwe, Blantyre, Mzuzu, etc.)\n- **Radius Control**: Adjustable search radius with visual feedback\n- **Location Refresh**: Button to update current location\n\n### 4. Location-Based Item Filtering\n- **Distance Calculation**: Uses Haversine formula to calculate distances between coordinates\n- **Radius Search**: Shows only items within the selected radius\n- **Distance Display**: Each item card shows the distance from user's location\n- **Fallback**: If location filtering fails, falls back to regular item listing\n\n### 5. Database Functions\n- **`calculate_distance()`**: PostgreSQL function to calculate distance between two points\n- **`get_items_within_radius()`**: Function to get items within a specified radius\n- **Indexing**: Database indexes on latitude/longitude for efficient queries\n\n## How It Works\n\n### For Users\n1. **Location Detection**: App automatically requests location permission on first visit\n2. **Location Selection**: Users can choose their city or use current location\n3. **Radius Setting**: Users set how far they're willing to travel (default: 10km)\n4. **Filtered Results**: Items are shown sorted by distance, with distance badges\n\n### For Item Sharing\n1. **Location Capture**: When adding items, location coordinates are automatically captured\n2. **City Mapping**: If user selects a city, coordinates are mapped automatically\n3. **GPS Fallback**: If geolocation fails, uses city center coordinates\n\n## Technical Implementation\n\n### Location Service (`lib/locationService.ts`)\n- Browser geolocation API integration\n- Distance calculation using Haversine formula\n- Geocoding using OpenStreetMap Nominatim\n- Malawi cities with predefined coordinates\n\n### Location Context (`contexts/LocationContext.tsx`)\n- Global state management for user location\n- Location persistence and updates\n- Error handling for geolocation failures\n\n### Database Migration (`scripts/add-location-coordinates.sql`)\n- Adds coordinate columns to existing tables\n- Creates distance calculation functions\n- Adds database indexes for performance\n\n## Benefits\n\n### For Users\n- **Reduced Travel**: Only see items within reasonable distance\n- **Better Planning**: Know exactly how far items are before requesting\n- **Local Community**: Connect with people in your area\n\n### For the Platform\n- **Practical Sharing**: Items are more likely to be collected when nearby\n- **Reduced Logistics**: Less travel means more successful exchanges\n- **Community Building**: Encourages local connections\n\n## Cities Supported\n- Lilongwe (Capital)\n- Blantyre (Commercial Capital)\n- Mzuzu (Northern Region)\n- Zomba (Southern Region)\n- Kasungu (Central Region)\n- Mangochi (Lakeshore)\n- Karonga (Northern Lakeshore)\n- Salima (Central Lakeshore)\n- Nkhotakota (Central Lakeshore)\n- Dedza (Central Highlands)\n\n## Future Enhancements\n- **Real-time Location Updates**: Update location as user moves\n- **Location History**: Remember frequently used locations\n- **Custom Addresses**: Allow users to enter custom addresses\n- **Map Integration**: Visual map showing item locations\n- **Route Planning**: Integration with navigation apps\n","size_bytes":4084},"README.md":{"content":"Tigawane in the Making\n","size_bytes":23},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nconst config: Config = {\n    darkMode: [\"class\"],\n    content: [\n    \"./pages/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./components/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./app/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"*.{js,ts,jsx,tsx,mdx}\"\n  ],\n  theme: {\n  \textend: {\n  \t\tcolors: {\n  \t\t\tbackground: 'hsl(var(--background))',\n  \t\t\tforeground: 'hsl(var(--foreground))',\n  \t\t\tcard: {\n  \t\t\t\tDEFAULT: 'hsl(var(--card))',\n  \t\t\t\tforeground: 'hsl(var(--card-foreground))'\n  \t\t\t},\n  \t\t\tpopover: {\n  \t\t\t\tDEFAULT: 'hsl(var(--popover))',\n  \t\t\t\tforeground: 'hsl(var(--popover-foreground))'\n  \t\t\t},\n  \t\t\tprimary: {\n  \t\t\t\tDEFAULT: 'hsl(var(--primary))',\n  \t\t\t\tforeground: 'hsl(var(--primary-foreground))'\n  \t\t\t},\n  \t\t\tsecondary: {\n  \t\t\t\tDEFAULT: 'hsl(var(--secondary))',\n  \t\t\t\tforeground: 'hsl(var(--secondary-foreground))'\n  \t\t\t},\n  \t\t\tmuted: {\n  \t\t\t\tDEFAULT: 'hsl(var(--muted))',\n  \t\t\t\tforeground: 'hsl(var(--muted-foreground))'\n  \t\t\t},\n  \t\t\taccent: {\n  \t\t\t\tDEFAULT: 'hsl(var(--accent))',\n  \t\t\t\tforeground: 'hsl(var(--accent-foreground))'\n  \t\t\t},\n  \t\t\tdestructive: {\n  \t\t\t\tDEFAULT: 'hsl(var(--destructive))',\n  \t\t\t\tforeground: 'hsl(var(--destructive-foreground))'\n  \t\t\t},\n  \t\t\tborder: 'hsl(var(--border))',\n  \t\t\tinput: 'hsl(var(--input))',\n  \t\t\tring: 'hsl(var(--ring))',\n  \t\t\tchart: {\n  \t\t\t\t'1': 'hsl(var(--chart-1))',\n  \t\t\t\t'2': 'hsl(var(--chart-2))',\n  \t\t\t\t'3': 'hsl(var(--chart-3))',\n  \t\t\t\t'4': 'hsl(var(--chart-4))',\n  \t\t\t\t'5': 'hsl(var(--chart-5))'\n  \t\t\t},\n  \t\t\tsidebar: {\n  \t\t\t\tDEFAULT: 'hsl(var(--sidebar-background))',\n  \t\t\t\tforeground: 'hsl(var(--sidebar-foreground))',\n  \t\t\t\tprimary: 'hsl(var(--sidebar-primary))',\n  \t\t\t\t'primary-foreground': 'hsl(var(--sidebar-primary-foreground))',\n  \t\t\t\taccent: 'hsl(var(--sidebar-accent))',\n  \t\t\t\t'accent-foreground': 'hsl(var(--sidebar-accent-foreground))',\n  \t\t\t\tborder: 'hsl(var(--sidebar-border))',\n  \t\t\t\tring: 'hsl(var(--sidebar-ring))'\n  \t\t\t}\n  \t\t},\n  \t\tborderRadius: {\n  \t\t\tlg: 'var(--radius)',\n  \t\t\tmd: 'calc(var(--radius) - 2px)',\n  \t\t\tsm: 'calc(var(--radius) - 4px)'\n  \t\t},\n  \t\tkeyframes: {\n  \t\t\t'accordion-down': {\n  \t\t\t\tfrom: {\n  \t\t\t\t\theight: '0'\n  \t\t\t\t},\n  \t\t\t\tto: {\n  \t\t\t\t\theight: 'var(--radix-accordion-content-height)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'accordion-up': {\n  \t\t\t\tfrom: {\n  \t\t\t\t\theight: 'var(--radix-accordion-content-height)'\n  \t\t\t\t},\n  \t\t\t\tto: {\n  \t\t\t\t\theight: '0'\n  \t\t\t\t}\n  \t\t\t}\n  \t\t},\n  \t\tanimation: {\n  \t\t\t'accordion-down': 'accordion-down 0.2s ease-out',\n  \t\t\t'accordion-up': 'accordion-up 0.2s ease-out'\n  \t\t}\n  \t}\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n};\nexport default config;\n","size_bytes":2570},"app/globals.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n  font-feature-settings: 'kern' 1, 'liga' 1;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n}\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n    --primary: 222.2 47.4% 11.2%;\n    --primary-foreground: 210 40% 98%;\n    --secondary: 210 40% 96%;\n    --secondary-foreground: 222.2 84% 4.9%;\n    --muted: 210 40% 96%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n    --accent: 210 40% 96%;\n    --accent-foreground: 222.2 84% 4.9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --ring: 222.2 84% 4.9%;\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem;\n    --sidebar-background: 0 0% 98%;\n    --sidebar-foreground: 240 5.3% 26.1%;\n    --sidebar-primary: 240 5.9% 10%;\n    --sidebar-primary-foreground: 0 0% 98%;\n    --sidebar-accent: 240 4.8% 95.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 220 13% 91%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n    --primary: 210 40% 98%;\n    --primary-foreground: 222.2 47.4% 11.2%;\n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 212.7 26.8% 83.9%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n    --sidebar-background: 240 5.9% 10%;\n    --sidebar-foreground: 240 4.8% 95.9%;\n    --sidebar-primary: 224.3 76.3% 48%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 240 4.8% 95.9%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n\n/* Mobile optimization styles */\n@layer utilities {\n  .scrollbar-hide {\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n  }\n  \n  .scrollbar-hide::-webkit-scrollbar {\n    display: none;\n  }\n  \n  /* Mobile-first typography */\n  .mobile-text-lg {\n    font-size: 1.125rem;\n    line-height: 1.6;\n  }\n  \n  .mobile-text-base {\n    font-size: 1rem;\n    line-height: 1.5;\n  }\n  \n  .mobile-text-sm {\n    font-size: 0.875rem;\n    line-height: 1.4;\n  }\n  \n  /* Better touch targets for mobile */\n  .touch-target {\n    min-height: 44px;\n    min-width: 44px;\n  }\n  \n  .touch-target-lg {\n    min-height: 48px;\n    min-width: 48px;\n  }\n  \n  /* Custom scrollbar styles */\n  .custom-scrollbar::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  .custom-scrollbar::-webkit-scrollbar-track {\n    background: #f1f5f9;\n    border-radius: 2px;\n  }\n  \n  .custom-scrollbar::-webkit-scrollbar-thumb {\n    background: #cbd5e1;\n    border-radius: 2px;\n  }\n  \n  .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n    background: #94a3b8;\n  }\n  \n  /* Mobile card optimization */\n  @media (max-width: 1024px) {\n    .mobile-card-grid {\n      display: flex;\n      overflow-x: auto;\n      gap: 1rem;\n      padding-bottom: 1rem;\n      scroll-snap-type: x mandatory;\n    }\n    \n    .mobile-card {\n      flex-shrink: 0;\n      width: 280px;\n      scroll-snap-align: start;\n    }\n  }\n\n  /* Custom animations for landing page */\n  @keyframes fade-in-up {\n    0% {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    100% {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  .animate-fade-in-up {\n    animation: fade-in-up 0.8s ease-out forwards;\n  }\n\n  /* Smooth scroll behavior */\n  html {\n    scroll-behavior: smooth;\n  }\n\n  /* Enhanced hover effects */\n  .hover-lift {\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n  }\n\n  .hover-lift:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n  }\n\n  /* Gradient text animation */\n  .gradient-text {\n    background: linear-gradient(45deg, #10b981, #3b82f6, #8b5cf6);\n    background-size: 200% 200%;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    animation: gradient-shift 3s ease-in-out infinite;\n  }\n\n  @keyframes gradient-shift {\n    0%, 100% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n  }\n\n  /* Floating animation for decorative elements */\n  @keyframes float {\n    0%, 100% {\n      transform: translateY(0px);\n    }\n    50% {\n      transform: translateY(-10px);\n    }\n  }\n\n  .animate-float {\n    animation: float 3s ease-in-out infinite;\n  }\n\n  /* Pulse glow effect */\n  @keyframes pulse-glow {\n    0%, 100% {\n      box-shadow: 0 0 5px rgba(16, 185, 129, 0.3);\n    }\n    50% {\n      box-shadow: 0 0 20px rgba(16, 185, 129, 0.6);\n    }\n  }\n\n  .animate-pulse-glow {\n    animation: pulse-glow 2s ease-in-out infinite;\n  }\n\n  /* Enhanced section transitions */\n  .section-divider {\n    background: linear-gradient(90deg, transparent, rgba(16, 185, 129, 0.1), transparent);\n    height: 1px;\n    margin: 0 auto;\n    width: 100px;\n  }\n\n  /* Improved text shadows */\n  .text-shadow-lg {\n    text-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n\n  .text-shadow-xl {\n    text-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);\n  }\n\n  /* Enhanced card hover effects */\n  .card-hover {\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .card-hover:hover {\n    transform: translateY(-8px) scale(1.02);\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  }\n\n  /* Gradient text effects */\n  .gradient-text-green {\n    background: linear-gradient(135deg, #10b981, #059669);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n\n  .gradient-text-blue {\n    background: linear-gradient(135deg, #3b82f6, #1d4ed8);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n}\n","size_bytes":6782},"app/layout.tsx":{"content":"import type { Metadata } from 'next'\nimport './globals.css'\nimport { AuthProvider } from \"@/contexts/AuthContext\"\nimport { LocationProvider } from \"@/contexts/LocationContext\"\n\nexport const metadata: Metadata = {\n  title: 'tigawane',\n  description: 'Created with v0',\n  generator: 'v0.dev',\n}\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <AuthProvider>\n          <LocationProvider>\n            {children}\n          </LocationProvider>\n        </AuthProvider>\n      </body>\n    </html>\n  )\n}\n","size_bytes":597},"app/page.tsx":{"content":"\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useAuth, AuthProvider } from \"@/contexts/AuthContext\"\nimport Auth from \"@/components/Auth\"\nimport LandingPage from \"@/components/LandingPage\"\nimport ItemList from \"@/components/ItemList\"\nimport AddItem from \"@/components/AddItem\"\nimport ClaimFoodModal from \"@/components/ClaimFoodModal\"\nimport ChatModal from \"@/components/ChatModal\"\nimport CollaborationChatModal from \"@/components/CollaborationChatModal\"\nimport NotificationCenter from \"@/components/NotificationCenter\"\nimport CollaborationCenter from \"@/components/CollaborationCenter\"\nimport LocationSelector from \"@/components/LocationSelector\"\nimport { Button } from \"@/components/ui/button\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { LogOut, Plus, Home, Users, User, Menu, ChevronDown } from \"lucide-react\"\nimport MyItemsManager from \"@/components/MyItemsManager\"\nimport Link from \"next/link\"\n\ninterface Item {\n  id: string\n  title: string\n  description: string | null\n  category: string\n  item_type: \"food\" | \"non-food\"\n  quantity: string\n  condition?: string | null\n  expiry_date: string | null\n  pickup_location: string\n  image_url: string | null\n  status: string\n  created_at: string\n  user_id: string\n  owner_name?: string | null\n}\n\nfunction AppContent() {\n  const { user, signOut } = useAuth()\n  const [currentTab, setCurrentTab] = useState(\"browse-food\")\n  const [showLanding, setShowLanding] = useState(true)\n  const [shareDropdownOpen, setShareDropdownOpen] = useState(false)\n  const [selectedItem, setSelectedItem] = useState<Item | null>(null)\n  const [showClaimModal, setShowClaimModal] = useState(false)\n  const [showChatModal, setShowChatModal] = useState(false)\n  const [chatClaimId, setChatClaimId] = useState(\"\")\n  const [chatOtherUser, setChatOtherUser] = useState(\"\")\n  const [showCollaborationChat, setShowCollaborationChat] = useState(false)\n  const [collaborationChatId, setCollaborationChatId] = useState(\"\")\n  const [collaborationChatTitle, setCollaborationChatTitle] = useState(\"\")\n  const [refreshTrigger, setRefreshTrigger] = useState(0)\n  const [myItemsRefreshTrigger, setMyItemsRefreshTrigger] = useState(0)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Simulate loading\n    const timer = setTimeout(() => setLoading(false), 500)\n    return () => clearTimeout(timer)\n  }, [])\n\n  const handleGetStarted = () => setShowLanding(false)\n  const handleGoHome = () => setShowLanding(true)\n\n  const handleSignOut = async () => {\n    try {\n      await signOut()\n      setShowLanding(true)\n    } catch (error) {\n      console.error(\"Error signing out:\", error)\n    }\n  }\n\n  const handleClaimItem = (item: Item) => {\n    setSelectedItem(item)\n    setShowClaimModal(true)\n  }\n\n  const handleItemAdded = () => {\n    setRefreshTrigger((prev) => prev + 1)\n  }\n\n  const handleItemClaimed = () => {\n    setRefreshTrigger((prev) => prev + 1)\n    setMyItemsRefreshTrigger((prev) => prev + 1)\n  }\n\n  const handleOpenChat = (claimId: string, otherUserName: string) => {\n    setChatClaimId(claimId)\n    setChatOtherUser(otherUserName)\n    setShowChatModal(true)\n  }\n\n  const handleOpenCollaborationChat = (collaborationId: string, title: string) => {\n    setCollaborationChatId(collaborationId)\n    setCollaborationChatTitle(title)\n    setShowCollaborationChat(true)\n  }\n\n  const handleMyItemUpdated = () => {\n    setMyItemsRefreshTrigger((prev) => prev + 1)\n  }\n\n  const handleNavigateToMyItems = () => {\n    setCurrentTab(\"my-items\")\n  }\n\n  // Close share dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element\n      if (!target.closest('.share-dropdown-container')) {\n        setShareDropdownOpen(false)\n      }\n    }\n\n    if (shareDropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [shareDropdownOpen])\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-lg\">Loading...</div>\n      </div>\n    )\n  }\n\n  if (!user) {\n    if (showLanding) {\n      return <LandingPage onGetStarted={handleGetStarted} />\n    }\n    return <Auth onBackToLanding={() => setShowLanding(true)} />\n  }\n\n  if (showLanding) {\n    return <LandingPage onGetStarted={handleGetStarted} />\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <header className=\"fixed top-0 left-0 right-0 z-50 bg-gradient-to-r from-green-600 via-green-500 to-emerald-500 shadow-lg border-b border-green-400/20 backdrop-blur-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            {/* Logo Section with Animation */}\n            <div className=\"flex items-center gap-3 group cursor-pointer\" onClick={handleGoHome}>\n              <div className=\"relative\">\n                <span className=\"text-2xl sm:text-3xl transform group-hover:scale-110 transition-transform duration-300 filter drop-shadow-sm\">\n                  🤝\n                </span>\n                <div className=\"absolute -inset-2 bg-white/10 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300 blur-sm\"></div>\n              </div>\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-white drop-shadow-sm group-hover:text-green-50 transition-colors duration-300\">\n                  Tigawane\n                </h1>\n                <p className=\"text-xs text-green-100 hidden sm:block font-medium\">\n                  Share • Connect • Care\n                </p>\n              </div>\n            </div>\n\n            {/* Navigation Actions - Mobile Optimized */}\n            <div className=\"flex items-center gap-1 sm:gap-3\">\n              {/* Welcome Message - Desktop Only */}\n              <div className=\"hidden lg:flex flex-col items-end mr-3\">\n                <span className=\"text-xs text-green-100 font-medium\">Welcome back</span>\n                <span className=\"text-sm text-white font-semibold truncate max-w-32\">\n                  {user?.email?.split('@')[0] || 'User'}\n                </span>\n              </div>\n\n              {/* Notification Center - Larger Touch Target on Mobile */}\n              <div className=\"relative\">\n                <NotificationCenter onOpenChat={handleOpenChat} onNavigateToMyItems={handleNavigateToMyItems} />\n              </div>\n\n              {/* Mobile: Compact Action Menu */}\n              <div className=\"sm:hidden flex items-center gap-1\">\n                <Button \n                  variant=\"ghost\" \n                  onClick={handleGoHome} \n                  className=\"flex items-center justify-center p-3 bg-white/10 border-white/20 text-white hover:bg-white/20 transition-all duration-300 backdrop-blur-sm rounded-xl min-w-[44px] min-h-[44px]\" \n                  size=\"sm\"\n                  aria-label=\"Go to home page\"\n                >\n                  <Home className=\"h-5 w-5\" />\n                </Button>\n\n                <Button \n                  variant=\"ghost\" \n                  onClick={handleSignOut} \n                  className=\"flex items-center justify-center p-3 bg-red-500/20 border-red-300/30 text-white hover:bg-red-500/30 transition-all duration-300 backdrop-blur-sm rounded-xl min-w-[44px] min-h-[44px]\" \n                  size=\"sm\"\n                  aria-label=\"Sign out of account\"\n                >\n                  <LogOut className=\"h-5 w-5\" />\n                </Button>\n              </div>\n\n              {/* Desktop: Full Buttons with Text */}\n              <div className=\"hidden sm:flex items-center gap-2\">\n                <Button \n                  variant=\"outline\" \n                  onClick={handleGoHome} \n                  className=\"flex items-center gap-2 bg-white/10 border-white/20 text-white hover:bg-white/20 hover:border-white/30 hover:text-green-50 transition-all duration-300 backdrop-blur-sm shadow-lg hover:shadow-xl transform hover:scale-105 min-h-[40px]\" \n                  size=\"sm\"\n                >\n                  <Home className=\"h-4 w-4\" />\n                  <span className=\"font-medium\">Home</span>\n                </Button>\n\n                <Button \n                  variant=\"outline\" \n                  onClick={handleSignOut} \n                  className=\"flex items-center gap-2 bg-red-500/20 border-red-300/30 text-white hover:bg-red-500/30 hover:border-red-300/50 hover:text-red-50 transition-all duration-300 backdrop-blur-sm shadow-lg hover:shadow-xl transform hover:scale-105 min-h-[40px]\" \n                  size=\"sm\"\n                >\n                  <LogOut className=\"h-4 w-4\" />\n                  <span className=\"font-medium\">Sign Out</span>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Subtle Bottom Glow Effect */}\n        <div className=\"h-px bg-gradient-to-r from-transparent via-white/20 to-transparent\"></div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 mt-16\">\n\n        <Tabs value={currentTab} onValueChange={setCurrentTab} className=\"w-full\">\n          {/* Mobile: Enhanced Navigation Menu */}\n          <div className=\"sm:hidden mb-6\">\n            <div className=\"bg-gradient-to-br from-white via-green-50/30 to-emerald-50/40 rounded-2xl shadow-lg border border-green-100/50 p-4 backdrop-blur-sm\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                {/* Main Actions - Top Row */}\n                <div className=\"col-span-2 grid grid-cols-2 gap-3 mb-4\">\n                  <Button\n                    variant={currentTab === \"browse-food\" ? \"default\" : \"outline\"}\n                    className={`group relative flex items-center justify-center gap-3 px-6 py-6 h-auto text-sm font-semibold w-full rounded-2xl transition-all duration-300 overflow-hidden min-h-[64px] ${\n                      currentTab === \"browse-food\" \n                        ? \"bg-gradient-to-br from-blue-600 to-blue-700 text-white shadow-lg transform scale-105 border-blue-500\" \n                        : \"bg-white/90 hover:bg-blue-50 hover:border-blue-300 hover:shadow-md hover:scale-102 border-blue-200\"\n                    }`}\n                    onClick={() => setCurrentTab(\"browse-food\")}\n                  >\n                    {currentTab === \"browse-food\" && (\n                      <div className=\"absolute inset-0 bg-gradient-to-r from-blue-400/20 to-blue-600/20 animate-pulse\"></div>\n                    )}\n                    <span className=\"text-2xl transform group-hover:scale-110 transition-transform duration-300 relative z-10\">🍚</span>\n                    <span className=\"text-sm font-bold relative z-10\">Browse Food</span>\n                  </Button>\n                  <Button\n                    variant={currentTab === \"browse-items\" ? \"default\" : \"outline\"}\n                    className={`group relative flex items-center justify-center gap-3 px-6 py-6 h-auto text-sm font-semibold w-full rounded-2xl transition-all duration-300 overflow-hidden min-h-[64px] ${\n                      currentTab === \"browse-items\" \n                        ? \"bg-gradient-to-br from-blue-600 to-blue-700 text-white shadow-lg transform scale-105 border-blue-500\" \n                        : \"bg-white/90 hover:bg-blue-50 hover:border-blue-300 hover:shadow-md hover:scale-102 border-blue-200\"\n                    }`}\n                    onClick={() => setCurrentTab(\"browse-items\")}\n                  >\n                    {currentTab === \"browse-items\" && (\n                      <div className=\"absolute inset-0 bg-gradient-to-r from-blue-400/20 to-blue-600/20 animate-pulse\"></div>\n                    )}\n                    <span className=\"text-2xl transform group-hover:scale-110 transition-transform duration-300 relative z-10\">👕</span>\n                    <span className=\"text-sm font-bold relative z-10\">Browse Items</span>\n                  </Button>\n                </div>\n                \n                {/* Share Section */}\n                <div className=\"flex flex-col items-center gap-3\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <div className=\"w-4 h-0.5 bg-gradient-to-r from-orange-400 to-orange-600 rounded-full\"></div>\n                    <span className=\"text-xs font-bold text-orange-700 uppercase tracking-wider\">Share</span>\n                    <div className=\"w-4 h-0.5 bg-gradient-to-r from-orange-600 to-orange-400 rounded-full\"></div>\n                  </div>\n                  <div className=\"flex flex-col gap-3 w-full\">\n                    <Button\n                      variant={currentTab === \"share-food\" ? \"default\" : \"outline\"}\n                      className={`group relative flex items-center justify-center gap-2 px-4 py-5 h-auto text-sm w-full rounded-xl transition-all duration-300 overflow-hidden min-h-[56px] ${\n                        currentTab === \"share-food\" \n                          ? \"bg-gradient-to-br from-orange-600 to-orange-700 text-white shadow-lg transform scale-105 border-orange-500\" \n                          : \"bg-white/90 hover:bg-orange-50 hover:border-orange-300 hover:shadow-md hover:scale-102 border-orange-200\"\n                      }`}\n                      onClick={() => setCurrentTab(\"share-food\")}\n                    >\n                      {currentTab === \"share-food\" && (\n                        <div className=\"absolute inset-0 bg-gradient-to-r from-orange-400/20 to-orange-600/20 animate-pulse\"></div>\n                      )}\n                      <Plus className=\"h-5 w-5 transform group-hover:rotate-90 transition-all duration-300 relative z-10\" />\n                      <span className=\"text-sm font-semibold relative z-10\">Food</span>\n                    </Button>\n                    <Button\n                      variant={currentTab === \"share-items\" ? \"default\" : \"outline\"}\n                      className={`group relative flex items-center justify-center gap-2 px-4 py-5 h-auto text-sm w-full rounded-xl transition-all duration-300 overflow-hidden min-h-[56px] ${\n                        currentTab === \"share-items\" \n                          ? \"bg-gradient-to-br from-orange-600 to-orange-700 text-white shadow-lg transform scale-105 border-orange-500\" \n                          : \"bg-white/90 hover:bg-orange-50 hover:border-orange-300 hover:shadow-md hover:scale-102 border-orange-200\"\n                      }`}\n                      onClick={() => setCurrentTab(\"share-items\")}\n                    >\n                      {currentTab === \"share-items\" && (\n                        <div className=\"absolute inset-0 bg-gradient-to-r from-orange-400/20 to-orange-600/20 animate-pulse\"></div>\n                      )}\n                      <Plus className=\"h-5 w-5 transform group-hover:rotate-90 transition-all duration-300 relative z-10\" />\n                      <span className=\"text-sm font-semibold relative z-10\">Items</span>\n                    </Button>\n                  </div>\n                </div>\n\n                {/* Community Section */}\n                <div className=\"flex flex-col items-center gap-3\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <div className=\"w-4 h-0.5 bg-gradient-to-r from-purple-400 to-purple-600 rounded-full\"></div>\n                    <span className=\"text-xs font-bold text-purple-700 uppercase tracking-wider\">Community</span>\n                    <div className=\"w-4 h-0.5 bg-gradient-to-r from-purple-600 to-purple-400 rounded-full\"></div>\n                  </div>\n                  <div className=\"flex flex-col gap-3 w-full\">\n                    <Button\n                      variant={currentTab === \"collaborate\" ? \"default\" : \"outline\"}\n                      className={`group relative flex items-center justify-center gap-2 px-4 py-5 h-auto text-sm w-full rounded-xl transition-all duration-300 overflow-hidden min-h-[56px] ${\n                        currentTab === \"collaborate\" \n                          ? \"bg-gradient-to-br from-purple-600 to-purple-700 text-white shadow-lg transform scale-105 border-purple-500\" \n                          : \"bg-white/90 hover:bg-purple-50 hover:border-purple-300 hover:shadow-md hover:scale-102 border-purple-200\"\n                      }`}\n                      onClick={() => setCurrentTab(\"collaborate\")}\n                    >\n                      {currentTab === \"collaborate\" && (\n                        <div className=\"absolute inset-0 bg-gradient-to-r from-purple-400/20 to-purple-600/20 animate-pulse\"></div>\n                      )}\n                      <Users className=\"h-5 w-5 transform group-hover:scale-110 transition-transform duration-300 relative z-10\" />\n                      <span className=\"text-sm font-semibold relative z-10\">Collaborate</span>\n                    </Button>\n                    <Button\n                      variant={currentTab === \"my-items\" ? \"default\" : \"outline\"}\n                      className={`group relative flex items-center justify-center gap-2 px-4 py-5 h-auto text-sm w-full rounded-xl transition-all duration-300 overflow-hidden min-h-[56px] ${\n                        currentTab === \"my-items\" \n                          ? \"bg-gradient-to-br from-purple-600 to-purple-700 text-white shadow-lg transform scale-105 border-purple-500\" \n                          : \"bg-white/90 hover:bg-purple-50 hover:border-purple-300 hover:shadow-md hover:scale-102 border-purple-200\"\n                      }`}\n                      onClick={() => setCurrentTab(\"my-items\")}\n                    >\n                      {currentTab === \"my-items\" && (\n                        <div className=\"absolute inset-0 bg-gradient-to-r from-purple-400/20 to-purple-600/20 animate-pulse\"></div>\n                      )}\n                      <User className=\"h-5 w-5 transform group-hover:scale-110 transition-transform duration-300 relative z-10\" />\n                      <span className=\"text-sm font-semibold relative z-10\">My Items</span>\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Desktop: Enhanced Tab Navigation */}\n          <div className=\"hidden sm:block mb-12\">\n            <div className=\"max-w-6xl mx-auto\">\n              {/* Main Navigation Cards */}\n              <div className=\"grid grid-cols-6 gap-4 bg-gradient-to-br from-white via-green-50/30 to-emerald-50/40 rounded-2xl shadow-xl border border-green-100/50 p-6 backdrop-blur-sm\">\n                {/* Browse Food Tab */}\n                <div \n                  className={`group relative flex flex-col items-center gap-3 px-6 py-5 rounded-xl cursor-pointer transition-all duration-300 overflow-hidden ${\n                    currentTab === \"browse-food\" \n                      ? \"bg-gradient-to-br from-blue-600 to-blue-700 text-white shadow-lg transform scale-105 border border-blue-500\" \n                      : \"bg-white/70 hover:bg-blue-50 hover:shadow-lg hover:scale-102 border border-blue-200/50\"\n                  }`}\n                  onClick={() => setCurrentTab(\"browse-food\")}\n                >\n                  {currentTab === \"browse-food\" && (\n                    <>\n                      <div className=\"absolute inset-0 bg-gradient-to-r from-blue-400/20 to-blue-600/20 animate-pulse\"></div>\n                      <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full animate-bounce\"></div>\n                    </>\n                  )}\n                  <span className=\"text-2xl transform group-hover:scale-110 transition-transform duration-300 relative z-10\">🍚</span>\n                  <span className=\"text-sm font-bold relative z-10 text-center\">Browse Food</span>\n                  <div className={`h-1 w-12 rounded-full transition-all duration-300 ${\n                    currentTab === \"browse-food\" ? \"bg-white/50\" : \"bg-blue-300 group-hover:bg-blue-400\"\n                  }`}></div>\n                </div>\n\n                {/* Browse Items Tab */}\n                <div \n                  className={`group relative flex flex-col items-center gap-3 px-6 py-5 rounded-xl cursor-pointer transition-all duration-300 overflow-hidden ${\n                    currentTab === \"browse-items\" \n                      ? \"bg-gradient-to-br from-blue-600 to-blue-700 text-white shadow-lg transform scale-105 border border-blue-500\" \n                      : \"bg-white/70 hover:bg-blue-50 hover:shadow-lg hover:scale-102 border border-blue-200/50\"\n                  }`}\n                  onClick={() => setCurrentTab(\"browse-items\")}\n                >\n                  {currentTab === \"browse-items\" && (\n                    <>\n                      <div className=\"absolute inset-0 bg-gradient-to-r from-blue-400/20 to-blue-600/20 animate-pulse\"></div>\n                      <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full animate-bounce\"></div>\n                    </>\n                  )}\n                  <span className=\"text-2xl transform group-hover:scale-110 transition-transform duration-300 relative z-10\">👕</span>\n                  <span className=\"text-sm font-bold relative z-10 text-center\">Browse Items</span>\n                  <div className={`h-1 w-12 rounded-full transition-all duration-300 ${\n                    currentTab === \"browse-items\" ? \"bg-white/50\" : \"bg-blue-300 group-hover:bg-blue-400\"\n                  }`}></div>\n                </div>\n\n                {/* Share Food Tab */}\n                <div \n                  className={`group relative flex flex-col items-center gap-3 px-6 py-5 rounded-xl cursor-pointer transition-all duration-300 overflow-hidden ${\n                    currentTab === \"share-food\" \n                      ? \"bg-gradient-to-br from-orange-600 to-orange-700 text-white shadow-lg transform scale-105 border border-orange-500\" \n                      : \"bg-white/70 hover:bg-orange-50 hover:shadow-lg hover:scale-102 border border-orange-200/50\"\n                  }`}\n                  onClick={() => setCurrentTab(\"share-food\")}\n                >\n                  {currentTab === \"share-food\" && (\n                    <>\n                      <div className=\"absolute inset-0 bg-gradient-to-r from-orange-400/20 to-orange-600/20 animate-pulse\"></div>\n                      <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full animate-bounce\"></div>\n                    </>\n                  )}\n                  <div className=\"relative z-10\">\n                    <Plus className=\"h-6 w-6 transform group-hover:rotate-90 transition-all duration-300\" />\n                  </div>\n                  <span className=\"text-sm font-bold relative z-10 text-center\">Share Food</span>\n                  <div className={`h-1 w-12 rounded-full transition-all duration-300 ${\n                    currentTab === \"share-food\" ? \"bg-white/50\" : \"bg-orange-300 group-hover:bg-orange-400\"\n                  }`}></div>\n                </div>\n\n                {/* Share Items Tab */}\n                <div \n                  className={`group relative flex flex-col items-center gap-3 px-6 py-5 rounded-xl cursor-pointer transition-all duration-300 overflow-hidden ${\n                    currentTab === \"share-items\" \n                      ? \"bg-gradient-to-br from-orange-600 to-orange-700 text-white shadow-lg transform scale-105 border border-orange-500\" \n                      : \"bg-white/70 hover:bg-orange-50 hover:shadow-lg hover:scale-102 border border-orange-200/50\"\n                  }`}\n                  onClick={() => setCurrentTab(\"share-items\")}\n                >\n                  {currentTab === \"share-items\" && (\n                    <>\n                      <div className=\"absolute inset-0 bg-gradient-to-r from-orange-400/20 to-orange-600/20 animate-pulse\"></div>\n                      <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full animate-bounce\"></div>\n                    </>\n                  )}\n                  <div className=\"relative z-10\">\n                    <Plus className=\"h-6 w-6 transform group-hover:rotate-90 transition-all duration-300\" />\n                  </div>\n                  <span className=\"text-sm font-bold relative z-10 text-center\">Share Items</span>\n                  <div className={`h-1 w-12 rounded-full transition-all duration-300 ${\n                    currentTab === \"share-items\" ? \"bg-white/50\" : \"bg-orange-300 group-hover:bg-orange-400\"\n                  }`}></div>\n                </div>\n\n                {/* Collaborate Tab */}\n                <div \n                  className={`group relative flex flex-col items-center gap-3 px-6 py-5 rounded-xl cursor-pointer transition-all duration-300 overflow-hidden ${\n                    currentTab === \"collaborate\" \n                      ? \"bg-gradient-to-br from-purple-600 to-purple-700 text-white shadow-lg transform scale-105 border border-purple-500\" \n                      : \"bg-white/70 hover:bg-purple-50 hover:shadow-lg hover:scale-102 border border-purple-200/50\"\n                  }`}\n                  onClick={() => setCurrentTab(\"collaborate\")}\n                >\n                  {currentTab === \"collaborate\" && (\n                    <>\n                      <div className=\"absolute inset-0 bg-gradient-to-r from-purple-400/20 to-purple-600/20 animate-pulse\"></div>\n                      <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full animate-bounce\"></div>\n                    </>\n                  )}\n                  <Users className=\"h-6 w-6 transform group-hover:scale-110 transition-transform duration-300 relative z-10\" />\n                  <span className=\"text-sm font-bold relative z-10 text-center\">Collaborate</span>\n                  <div className={`h-1 w-12 rounded-full transition-all duration-300 ${\n                    currentTab === \"collaborate\" ? \"bg-white/50\" : \"bg-purple-300 group-hover:bg-purple-400\"\n                  }`}></div>\n                </div>\n\n                {/* My Items Tab */}\n                <div \n                  className={`group relative flex flex-col items-center gap-3 px-6 py-5 rounded-xl cursor-pointer transition-all duration-300 overflow-hidden ${\n                    currentTab === \"my-items\" \n                      ? \"bg-gradient-to-br from-purple-600 to-purple-700 text-white shadow-lg transform scale-105 border border-purple-500\" \n                      : \"bg-white/70 hover:bg-purple-50 hover:shadow-lg hover:scale-102 border border-purple-200/50\"\n                  }`}\n                  onClick={() => setCurrentTab(\"my-items\")}\n                >\n                  {currentTab === \"my-items\" && (\n                    <>\n                      <div className=\"absolute inset-0 bg-gradient-to-r from-purple-400/20 to-purple-600/20 animate-pulse\"></div>\n                      <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full animate-bounce\"></div>\n                    </>\n                  )}\n                  <User className=\"h-6 w-6 transform group-hover:scale-110 transition-transform duration-300 relative z-10\" />\n                  <span className=\"text-sm font-bold relative z-10 text-center\">My Items</span>\n                  <div className={`h-1 w-12 rounded-full transition-all duration-300 ${\n                    currentTab === \"my-items\" ? \"bg-white/50\" : \"bg-purple-300 group-hover:bg-purple-400\"\n                  }`}></div>\n                </div>\n              </div>\n\n              {/* Active Tab Indicator */}\n              <div className=\"flex justify-center mt-4\">\n                <div className=\"flex gap-2\">\n                  {[\"browse-food\", \"browse-items\", \"share-food\", \"share-items\", \"collaborate\", \"my-items\"].map((tab) => (\n                    <div\n                      key={tab}\n                      className={`h-2 rounded-full transition-all duration-300 ${\n                        currentTab === tab ? \"w-8 bg-green-500\" : \"w-2 bg-gray-300\"\n                      }`}\n                    ></div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <TabsContent value=\"browse-food\">\n            <div className=\"space-y-6\">\n              <div className=\"text-center\">\n                <p className=\"text-sm sm:text-base lg:text-lg text-gray-600\">Find food shared by your community</p>\n              </div>\n              <div className=\"grid grid-cols-1 lg:grid-cols-5 gap-4 lg:gap-6\">\n                <div className=\"lg:col-span-1 order-2 lg:order-1\">\n                  <LocationSelector />\n                </div>\n                <div className=\"lg:col-span-4 order-1 lg:order-2\">\n                  <ItemList key={`food-${refreshTrigger}`} itemType=\"food\" collaborationId={null} />\n                </div>\n              </div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"browse-items\">\n            <div className=\"space-y-6\">\n              <div className=\"text-center\">\n                <p className=\"text-sm sm:text-base lg:text-lg text-gray-600\">Find clothes, shoes, and household items</p>\n              </div>\n              <div className=\"grid grid-cols-1 lg:grid-cols-5 gap-4 lg:gap-6\">\n                <div className=\"lg:col-span-1 order-2 lg:order-1\">\n                  <LocationSelector />\n                </div>\n                <div className=\"lg:col-span-4 order-1 lg:order-2\">\n                  <ItemList key={`items-${refreshTrigger}`} itemType=\"non-food\" collaborationId={null} />\n                </div>\n              </div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"share-food\">\n            <div className=\"space-y-6\">\n              <div className=\"text-center\">\n                <h2 className=\"text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900 mb-2\">Share Food</h2>\n                <p className=\"text-sm sm:text-base lg:text-lg text-gray-600\">Help reduce waste by sharing surplus food</p>\n              </div>\n              <AddItem itemType=\"food\" onItemAdded={handleItemAdded} />\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"share-items\">\n            <div className=\"space-y-6\">\n              <div className=\"text-center\">\n                <h2 className=\"text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900 mb-2\">Share Items</h2>\n                <p className=\"text-sm sm:text-base lg:text-lg text-gray-600\">Give away clothes, shoes, and household items</p>\n              </div>\n              <AddItem itemType=\"non-food\" onItemAdded={handleItemAdded} />\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"collaborate\">\n            <CollaborationCenter onOpenCollaborationChat={handleOpenCollaborationChat} />\n          </TabsContent>\n\n          <TabsContent value=\"my-items\">\n            <MyItemsManager key={`my-items-${myItemsRefreshTrigger}`} onItemUpdated={handleMyItemUpdated} />\n          </TabsContent>\n        </Tabs>\n      </main>\n\n      {/* Footer with Navigation Shortcuts */}\n      <footer className=\"bg-white border-t border-gray-200 mt-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n            {/* Browse Section */}\n            <div className=\"space-y-3\">\n              <h3 className=\"text-sm font-semibold text-gray-900 uppercase tracking-wide\">Browse</h3>\n              <div className=\"space-y-2\">\n                <button \n                  onClick={() => setCurrentTab(\"browse-food\")}\n                  className=\"text-sm text-gray-600 hover:text-green-600 transition-colors duration-200 flex items-center gap-2\"\n                >\n                  🍚 Food Items\n                </button>\n                <button \n                  onClick={() => setCurrentTab(\"browse-items\")}\n                  className=\"text-sm text-gray-600 hover:text-green-600 transition-colors duration-200 flex items-center gap-2\"\n                >\n                  👕 Other Items\n                </button>\n              </div>\n            </div>\n\n            {/* Share Section */}\n            <div className=\"space-y-3\">\n              <h3 className=\"text-sm font-semibold text-gray-900 uppercase tracking-wide\">Share</h3>\n              <div className=\"space-y-2\">\n                <button \n                  onClick={() => setCurrentTab(\"share-food\")}\n                  className=\"text-sm text-gray-600 hover:text-green-600 transition-colors duration-200 flex items-center gap-2\"\n                >\n                  🍽️ Share Food\n                </button>\n                <button \n                  onClick={() => setCurrentTab(\"share-items\")}\n                  className=\"text-sm text-gray-600 hover:text-green-600 transition-colors duration-200 flex items-center gap-2\"\n                >\n                  📦 Share Items\n                </button>\n              </div>\n            </div>\n\n            {/* Community Section */}\n            <div className=\"space-y-3\">\n              <h3 className=\"text-sm font-semibold text-gray-900 uppercase tracking-wide\">Community</h3>\n              <div className=\"space-y-2\">\n                <button \n                  onClick={() => setCurrentTab(\"collaborate\")}\n                  className=\"text-sm text-gray-600 hover:text-green-600 transition-colors duration-200 flex items-center gap-2\"\n                >\n                  🤝 Collaborate\n                </button>\n                <button \n                  onClick={() => setCurrentTab(\"my-items\")}\n                  className=\"text-sm text-gray-600 hover:text-green-600 transition-colors duration-200 flex items-center gap-2\"\n                >\n                  📋 My Items\n                </button>\n              </div>\n            </div>\n\n            {/* Quick Actions */}\n            <div className=\"space-y-3\">\n              <h3 className=\"text-sm font-semibold text-gray-900 uppercase tracking-wide\">Quick Actions</h3>\n              <div className=\"space-y-2\">\n                <button \n                  onClick={handleGoHome}\n                  className=\"text-sm text-gray-600 hover:text-green-600 transition-colors duration-200 flex items-center gap-2\"\n                >\n                  🏠 Go Home\n                </button>\n                <button \n                  onClick={handleSignOut}\n                  className=\"text-sm text-gray-600 hover:text-red-600 transition-colors duration-200 flex items-center gap-2\"\n                >\n                  🚪 Sign Out\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mt-8 pt-6 border-t border-gray-200 text-center\">\n            <p className=\"text-sm text-gray-500\">\n              © 2025 Tigawane. Share • Connect • Care\n            </p>\n          </div>\n        </div>\n      </footer>\n\n      <ClaimFoodModal\n        foodItem={selectedItem}\n        isOpen={showClaimModal}\n        onClose={() => setShowClaimModal(false)}\n        onClaimed={handleItemClaimed}\n      />\n\n      <ChatModal\n        claimId={chatClaimId}\n        isOpen={showChatModal}\n        onClose={() => setShowChatModal(false)}\n        otherUserName={chatOtherUser}\n      />\n\n      <CollaborationChatModal\n        collaborationId={collaborationChatId}\n        collaborationTitle={collaborationChatTitle}\n        isOpen={showCollaborationChat}\n        onClose={() => setShowCollaborationChat(false)}\n      />\n    </div>\n  )\n}\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <AppContent />\n    </AuthProvider>\n  )\n}","size_bytes":35828},"components/AddFood.tsx":{"content":"\"use client\"\n\nimport type React from \"react\"\nimport React, { useState } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n\ninterface AddFoodProps {\n  onFoodAdded: () => void\n}\n\nexport default function AddFood({ onFoodAdded }: AddFoodProps) {\n  const { user } = useAuth()\n  const [loading, setLoading] = useState(false)\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    quantity: \"\",\n    expiry_date: \"\",\n    pickup_location: \"\",\n  })\n  const [imageFile, setImageFile] = useState<File | null>(null)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!user) return\n\n    setLoading(true)\n\n    try {\n      let imageUrl = null\n\n      // Upload image if provided\n      if (imageFile) {\n        const fileExt = imageFile.name.split(\".\").pop()\n        const fileName = `${user.id}/${Date.now()}.${fileExt}`\n\n        const { error: uploadError } = await supabase.storage.from(\"food-images\").upload(fileName, imageFile)\n\n        if (uploadError) {\n          console.error(\"Upload error:\", uploadError)\n          // Continue without image if upload fails\n        } else {\n          const {\n            data: { publicUrl },\n          } = supabase.storage.from(\"food-images\").getPublicUrl(fileName)\n          imageUrl = publicUrl\n        }\n      }\n\n      // Insert food item\n      const { error } = await supabase.from(\"food_items\").insert({\n        title: formData.title,\n        description: formData.description || null,\n        category: formData.category,\n        quantity: formData.quantity,\n        expiry_date: formData.expiry_date || null,\n        pickup_location: formData.pickup_location,\n        image_url: imageUrl,\n        user_id: user.id,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      // Reset form\n      setFormData({\n        title: \"\",\n        description: \"\",\n        category: \"\",\n        quantity: \"\",\n        expiry_date: \"\",\n        pickup_location: \"\",\n      })\n      setImageFile(null)\n\n      onFoodAdded()\n      alert(\"Food item shared successfully!\")\n    } catch (error: any) {\n      console.error(\"Error adding food item:\", error)\n      alert(`Error sharing food item: ${error.message}`)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const categories = [\"fruits\", \"vegetables\", \"grains\", \"dairy\", \"meat\", \"prepared\", \"other\"]\n\n  return (\n    <Card className=\"max-w-2xl mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl text-green-700\">Share Food</CardTitle>\n        <CardDescription>Help reduce waste by sharing food with your community</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"title\">Food Title *</Label>\n            <Input\n              id=\"title\"\n              value={formData.title}\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n              placeholder=\"e.g., Fresh tomatoes, Cooked rice\"\n              required\n            />\n          </div>\n\n          <div>\n            <Label htmlFor=\"category\">Category *</Label>\n            <Select\n              value={formData.category}\n              onValueChange={(value) => setFormData({ ...formData, category: value })}\n              required\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select category\" />\n              </SelectTrigger>\n              <SelectContent>\n                {categories.map((category) => (\n                  <SelectItem key={category} value={category}>\n                    {category.charAt(0).toUpperCase() + category.slice(1)}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div>\n            <Label htmlFor=\"quantity\">Quantity *</Label>\n            <Input\n              id=\"quantity\"\n              value={formData.quantity}\n              onChange={(e) => setFormData({ ...formData, quantity: e.target.value })}\n              placeholder=\"e.g., 2 kg, 5 pieces, 1 bowl\"\n              required\n            />\n          </div>\n\n          <div>\n            <Label htmlFor=\"pickup_location\">Pickup Location *</Label>\n            <Input\n              id=\"pickup_location\"\n              value={formData.pickup_location}\n              onChange={(e) => setFormData({ ...formData, pickup_location: e.target.value })}\n              placeholder=\"e.g., Area 25, Lilongwe\"\n              required\n            />\n          </div>\n\n          <div>\n            <Label htmlFor=\"expiry_date\">Expiry Date (optional)</Label>\n            <Input\n              id=\"expiry_date\"\n              type=\"date\"\n              value={formData.expiry_date}\n              onChange={(e) => setFormData({ ...formData, expiry_date: e.target.value })}\n            />\n          </div>\n\n          <div>\n            <Label htmlFor=\"description\">Description</Label>\n            <Textarea\n              id=\"description\"\n              value={formData.description}\n              onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n              placeholder=\"Additional details about the food...\"\n              rows={3}\n            />\n          </div>\n\n          <div>\n            <Label htmlFor=\"image\">Photo (optional)</Label>\n            <Input\n              id=\"image\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={(e) => setImageFile(e.target.files?.[0] || null)}\n            />\n          </div>\n\n          <Button type=\"submit\" className=\"w-full bg-green-600 hover:bg-green-700\" disabled={loading}>\n            {loading ? \"Sharing...\" : \"Share Food\"}\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  )\n}\n","size_bytes":6201},"components/AddItem.tsx":{"content":"\"use client\";\n\nimport type React from \"react\"\nimport React, { useState, useEffect } from \"react\";\nimport { supabase } from \"@/lib/supabase\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { useLocation } from \"@/contexts/LocationContext\";\nimport { geocodeAddress, getCityCoordinates } from \"@/lib/locationService\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport {\n  Camera,\n  Package,\n  MapPin,\n  Heart,\n  ArrowLeft,\n  ArrowRight,\n  CheckCircle,\n  Sparkles,\n  Users,\n  Globe,\n} from \"lucide-react\";\nimport Image from \"next/image\";\n\ninterface AddItemProps {\n  itemType: \"food\" | \"non-food\";\n  onItemAdded: () => void;\n}\n\nconst STEPS = [\n  { id: 1, title: \"Photo\", icon: Camera, description: \"Show your item\" },\n  {\n    id: 2,\n    title: \"Details\",\n    icon: Package,\n    description: \"What are you sharing?\",\n  },\n  { id: 3, title: \"Location\", icon: MapPin, description: \"Where to collect\" },\n  { id: 4, title: \"Impact\", icon: Heart, description: \"Choose destination\" },\n];\n\nexport default function AddItem({ itemType, onItemAdded }: AddItemProps) {\n  const { user } = useAuth();\n  const { selectedLocation } = useLocation();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    quantity: \"\",\n    condition: \"\",\n    expiry_date: \"\",\n    pickup_location: \"\",\n    area: \"\",\n    is_anonymous: false,\n    collaboration_id: null as string | null,\n  });\n  const [collaborations, setCollaborations] = useState<any[]>([]);\n  const [loadingCollaborations, setLoadingCollaborations] = useState(false);\n  const [imageFile, setImageFile] = useState<File | null>(null);\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\n\n  // Fetch collaborations on component mount\n  useEffect(() => {\n    const fetchCollaborations = async () => {\n      setLoadingCollaborations(true);\n      try {\n        const { data, error } = await supabase\n          .from(\"collaboration_requests\")\n          .select(\"id, title, status\")\n          .eq(\"status\", \"active\")\n          .order(\"created_at\", { ascending: false });\n\n        if (error) {\n          console.warn(\"Could not fetch collaborations:\", error);\n          setCollaborations([]);\n        } else {\n          setCollaborations(data || []);\n        }\n      } catch (error) {\n        console.warn(\"Error fetching collaborations:\", error);\n        setCollaborations([]);\n      } finally {\n        setLoadingCollaborations(false);\n      }\n    };\n\n    fetchCollaborations();\n  }, []);\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setImageFile(file);\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImagePreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    const icons: Record<string, string> = {\n      // Food categories\n      fruits: \"🍎\",\n      vegetables: \"🥕\",\n      grains: \"🌾\",\n      dairy: \"🥛\",\n      meat: \"🍖\",\n      prepared: \"🍽️\",\n      // Non-food categories\n      clothing: \"👕\",\n      shoes: \"👟\",\n      household: \"🏠\",\n      electronics: \"📱\",\n      books: \"📚\",\n      toys: \"🧸\",\n      \"baby-items\": \"🍼\",\n      other: \"📦\",\n    };\n    return icons[category] || \"📦\";\n  };\n\n  const getCategories = () => {\n    if (itemType === \"food\") {\n      return [\n        { value: \"fruits\", label: \"Fresh Fruits\", icon: \"🍎\" },\n        { value: \"vegetables\", label: \"Vegetables\", icon: \"🥕\" },\n        { value: \"grains\", label: \"Grains & Rice\", icon: \"🌾\" },\n        { value: \"dairy\", label: \"Dairy Products\", icon: \"🥛\" },\n        { value: \"meat\", label: \"Meat & Fish\", icon: \"🍖\" },\n        { value: \"prepared\", label: \"Prepared Food\", icon: \"🍽️\" },\n        { value: \"other\", label: \"Other Food\", icon: \"🥗\" },\n      ];\n    } else {\n      return [\n        { value: \"clothing\", label: \"Clothing\", icon: \"👕\" },\n        { value: \"shoes\", label: \"Shoes\", icon: \"👟\" },\n        { value: \"household\", label: \"Household Items\", icon: \"🏠\" },\n        { value: \"electronics\", label: \"Electronics\", icon: \"📱\" },\n        { value: \"books\", label: \"Books\", icon: \"📚\" },\n        { value: \"toys\", label: \"Toys & Games\", icon: \"🧸\" },\n        { value: \"baby-items\", label: \"Baby Items\", icon: \"🍼\" },\n        { value: \"other\", label: \"Other Items\", icon: \"📦\" },\n      ];\n    }\n  };\n\n  const conditions = [\n    { value: \"new\", label: \"Brand New\", description: \"Never used\" },\n    {\n      value: \"excellent\",\n      label: \"Excellent\",\n      description: \"Like new condition\",\n    },\n    { value: \"good\", label: \"Good\", description: \"Minor wear\" },\n    { value: \"fair\", label: \"Fair\", description: \"Some wear but functional\" },\n    {\n      value: \"needs-repair\",\n      label: \"Needs Repair\",\n      description: \"Fixable issues\",\n    },\n    { value: \"old\", label: \"Old\", description: \"Well-used but working\" },\n  ];\n\n  const areaOptions = [\n    \"area 18\",\n    \"area 25\",\n    \"area 23\",\n    \"area 43\",\n    \"area 30\",\n    \"area 15\",\n    \"area 14\",\n    \"area 49\",\n    \"Chilinde\",\n    \"Kawale\",\n  ];\n\n  const canProceedToNext = () => {\n    switch (currentStep) {\n      case 1:\n        return true; // Image is optional but encouraged\n      case 2:\n        return (\n          formData.title.trim() &&\n          formData.category &&\n          formData.quantity.trim() &&\n          (itemType === \"food\" || formData.condition)\n        );\n      case 3:\n        return formData.pickup_location.trim() && formData.area;\n      case 4:\n        return true; // Impact step has default values\n      default:\n        return false;\n    }\n  };\n\n  const handleNext = () => {\n    if (canProceedToNext() && currentStep < 4) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleSubmit = async () => {\n    setError(null);\n\n    if (!user) {\n      setError(\"Please sign in to share items\");\n      return;\n    }\n\n    // Final validation\n    if (\n      !formData.title.trim() ||\n      !formData.category ||\n      !formData.quantity.trim() ||\n      !formData.pickup_location.trim() ||\n      !formData.area\n    ) {\n      setError(\"Please fill in all required fields\");\n      return;\n    }\n\n    if (itemType === \"non-food\" && !formData.condition) {\n      setError(\"Please select condition for non-food items\");\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      let imageUrl = null;\n\n      // Upload image if provided\n      if (imageFile) {\n        const fileExt = imageFile.name.split(\".\").pop();\n        const fileName = `${user.id}/${Date.now()}.${fileExt}`;\n\n        try {\n          const { error: uploadError } = await supabase.storage\n            .from(\"item-images\")\n            .upload(fileName, imageFile);\n\n          if (!uploadError) {\n            const {\n              data: { publicUrl },\n            } = supabase.storage.from(\"item-images\").getPublicUrl(fileName);\n            imageUrl = publicUrl;\n          }\n        } catch (uploadErr) {\n          console.warn(\"Image upload error:\", uploadErr);\n        }\n      }\n\n      // Get location coordinates\n      let latitude = null;\n      let longitude = null;\n      \n      if (selectedLocation) {\n        latitude = selectedLocation.latitude;\n        longitude = selectedLocation.longitude;\n      } else if (formData.area) {\n        // Try to get coordinates from the selected area/city\n        const cityLocation = getCityCoordinates(formData.area);\n        if (cityLocation) {\n          latitude = cityLocation.latitude;\n          longitude = cityLocation.longitude;\n        }\n      }\n\n      // Prepare item data\n      const itemData = {\n        title: formData.title.trim(),\n        description: formData.description.trim() || null,\n        category: formData.category,\n        item_type: itemType,\n        quantity: formData.quantity.trim(),\n        pickup_location: formData.pickup_location.trim(),\n        latitude,\n        longitude,\n        user_id: user.id,\n        status: \"available\",\n        collaboration_id: formData.collaboration_id,\n        image_url: imageUrl,\n        expiry_date:\n          itemType === \"food\" && formData.expiry_date\n            ? formData.expiry_date\n            : null,\n        condition:\n          itemType === \"non-food\" && formData.condition\n            ? formData.condition\n            : null,\n        area: formData.area,\n        is_anonymous: formData.is_anonymous,\n      };\n\n      const { data, error: insertError } = await supabase\n        .from(\"items\")\n        .insert(itemData)\n        .select();\n\n      if (insertError) {\n        throw insertError;\n      }\n\n      // Show success animation\n      setShowSuccess(true);\n\n      // Wait for animation then reset\n      setTimeout(() => {\n        setShowSuccess(false);\n        setCurrentStep(1);\n        setFormData({\n          title: \"\",\n          description: \"\",\n          category: \"\",\n          quantity: \"\",\n          condition: \"\",\n          expiry_date: \"\",\n          pickup_location: \"\",\n          area: \"\",\n          is_anonymous: false,\n          collaboration_id: null,\n        });\n        setImageFile(null);\n        setImagePreview(null);\n        onItemAdded();\n      }, 3000);\n    } catch (error: any) {\n      console.error(\"Error adding item:\", error);\n      setError(`Failed to share item: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Success animation overlay\n  if (showSuccess) {\n    return (\n      <div className=\"fixed inset-0 bg-green-50 flex items-center justify-center z-50\">\n        <div className=\"text-center space-y-6 animate-bounce\">\n          <div className=\"w-24 h-24 bg-green-500 rounded-full flex items-center justify-center mx-auto\">\n            <Sparkles className=\"w-12 h-12 text-white animate-pulse\" />\n          </div>\n          <div className=\"space-y-2\">\n            <h2 className=\"text-3xl font-bold text-green-700\">Amazing! 🎉</h2>\n            <p className=\"text-lg text-green-600\">\n              You've helped someone in your neighborhood!\n            </p>\n            <p className=\"text-sm text-green-500\">\n              {itemType === \"food\"\n                ? \"Food rescued from waste\"\n                : \"Item given new life\"}{\" \"}\n              ✨\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-2xl mx-auto bg-white min-h-screen\">\n      {/* Header with Progress */}\n      <div className=\"sticky top-0 bg-white border-b border-gray-100 p-4 z-10\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h1 className=\"text-xl font-bold text-gray-900\">\n            Share {itemType === \"food\" ? \"Food\" : \"Items\"}\n          </h1>\n          <div className=\"text-sm text-gray-500\">{currentStep}/4</div>\n        </div>\n\n        {/* Progress Bar */}\n        <div className=\"flex space-x-2\">\n          {STEPS.map((step, index) => (\n            <div\n              key={step.id}\n              className={`flex-1 h-2 rounded-full transition-all duration-300 ${\n                currentStep > step.id\n                  ? \"bg-green-500\"\n                  : currentStep === step.id\n                    ? \"bg-green-300\"\n                    : \"bg-gray-200\"\n              }`}\n            />\n          ))}\n        </div>\n\n        {/* Current Step Info */}\n        <div className=\"mt-4 text-center\">\n          <div className=\"flex items-center justify-center space-x-2 mb-2\">\n            {React.createElement(STEPS[currentStep - 1].icon, {\n              className: \"w-5 h-5 text-green-600\",\n            })}\n            <h2 className=\"text-lg font-semibold text-gray-900\">\n              {STEPS[currentStep - 1].title}\n            </h2>\n          </div>\n          <p className=\"text-sm text-gray-600\">\n            {STEPS[currentStep - 1].description}\n          </p>\n        </div>\n      </div>\n\n      {/* Form Content */}\n      <div className=\"p-4\">\n        {error && (\n          <div className=\"mb-4 p-4 bg-red-50 border border-red-200 text-red-700 rounded-lg\">\n            <strong>Oops!</strong> {error}\n          </div>\n        )}\n\n        {/* Step 1: Photo */}\n        {currentStep === 1 && (\n          <div className=\"space-y-6 py-6\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-medium mb-2\">Add a photo</h3>\n              <p className=\"text-gray-600 text-sm mb-6\">\n                A good photo helps people connect with your{\" \"}\n                {itemType === \"food\" ? \"food\" : \"item\"}\n              </p>\n            </div>\n\n            <div className=\"relative\">\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleImageChange}\n                className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\n                id=\"image-upload\"\n              />\n              <div\n                className={`border-2 border-dashed rounded-xl p-8 text-center transition-all ${\n                  imagePreview\n                    ? \"border-green-300 bg-green-50\"\n                    : \"border-gray-300 bg-gray-50\"\n                }`}\n              >\n                {imagePreview ? (\n                  <div className=\"space-y-4\">\n                    <Image\n                      src={imagePreview}\n                      alt=\"Preview\"\n                      width={200}\n                      height={200}\n                      className=\"mx-auto rounded-lg object-cover\"\n                    />\n                    <p className=\"text-green-600 font-medium\">Perfect! 📸</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <Camera className=\"w-12 h-12 text-gray-400 mx-auto\" />\n                    <div>\n                      <p className=\"font-medium text-gray-900\">\n                        Tap to add photo\n                      </p>\n                      <p className=\"text-sm text-gray-500\">\n                        Optional but recommended\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 2: Details */}\n        {currentStep === 2 && (\n          <div className=\"space-y-6 py-6\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-medium mb-2\">\n                Tell us about your {itemType}\n              </h3>\n              <p className=\"text-gray-600 text-sm mb-6\">\n                Help others understand what you're sharing\n              </p>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"title\" className=\"text-base font-medium\">\n                  What are you sharing? *\n                </Label>\n                <Input\n                  id=\"title\"\n                  value={formData.title}\n                  onChange={(e) =>\n                    setFormData({ ...formData, title: e.target.value })\n                  }\n                  placeholder={\n                    itemType === \"food\"\n                      ? \"e.g., Fresh tomatoes\"\n                      : \"e.g., Men's running shoes\"\n                  }\n                  className=\"mt-2 text-base h-12\"\n                />\n              </div>\n\n              <div>\n                <Label className=\"text-base font-medium\">Category *</Label>\n                <div className=\"grid grid-cols-2 gap-3 mt-2\">\n                  {getCategories().map((cat) => (\n                    <button\n                      key={cat.value}\n                      type=\"button\"\n                      onClick={() =>\n                        setFormData({ ...formData, category: cat.value })\n                      }\n                      className={`p-4 rounded-xl border-2 text-left transition-all ${\n                        formData.category === cat.value\n                          ? \"border-green-500 bg-green-50\"\n                          : \"border-gray-200 bg-white\"\n                      }`}\n                    >\n                      <div className=\"text-2xl mb-1\">{cat.icon}</div>\n                      <div className=\"text-sm font-medium\">{cat.label}</div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"quantity\" className=\"text-base font-medium\">\n                  Quantity *\n                </Label>\n                <Input\n                  id=\"quantity\"\n                  value={formData.quantity}\n                  onChange={(e) =>\n                    setFormData({ ...formData, quantity: e.target.value })\n                  }\n                  placeholder={\n                    itemType === \"food\"\n                      ? \"e.g., 2 kg, 5 pieces\"\n                      : \"e.g., 1 pair, 3 items\"\n                  }\n                  className=\"mt-2 text-base h-12\"\n                />\n              </div>\n\n              {itemType === \"non-food\" && (\n                <div>\n                  <Label className=\"text-base font-medium\">Condition *</Label>\n                  <div className=\"space-y-2 mt-2\">\n                    {conditions.map((condition) => (\n                      <button\n                        key={condition.value}\n                        type=\"button\"\n                        onClick={() =>\n                          setFormData({\n                            ...formData,\n                            condition: condition.value,\n                          })\n                        }\n                        className={`w-full p-3 rounded-lg border text-left transition-all ${\n                          formData.condition === condition.value\n                            ? \"border-green-500 bg-green-50\"\n                            : \"border-gray-200 bg-white\"\n                        }`}\n                      >\n                        <div className=\"font-medium\">{condition.label}</div>\n                        <div className=\"text-sm text-gray-600\">\n                          {condition.description}\n                        </div>\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {itemType === \"food\" && (\n                <div>\n                  <Label\n                    htmlFor=\"expiry_date\"\n                    className=\"text-base font-medium\"\n                  >\n                    Best before (optional)\n                  </Label>\n                  <Input\n                    id=\"expiry_date\"\n                    type=\"date\"\n                    value={formData.expiry_date}\n                    onChange={(e) =>\n                      setFormData({ ...formData, expiry_date: e.target.value })\n                    }\n                    className=\"mt-2 text-base h-12\"\n                  />\n                </div>\n              )}\n\n              <div>\n                <Label htmlFor=\"description\" className=\"text-base font-medium\">\n                  Additional details (optional)\n                </Label>\n                <Textarea\n                  id=\"description\"\n                  value={formData.description}\n                  onChange={(e) =>\n                    setFormData({ ...formData, description: e.target.value })\n                  }\n                  placeholder=\"Any special notes...\"\n                  rows={3}\n                  className=\"mt-2 text-base\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 3: Location */}\n        {currentStep === 3 && (\n          <div className=\"space-y-6 py-6\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-medium mb-2\">\n                Where can people collect?\n              </h3>\n              <p className=\"text-gray-600 text-sm mb-6\">\n                Help people find you easily\n              </p>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <Label\n                  htmlFor=\"pickup_location\"\n                  className=\"text-base font-medium\"\n                >\n                  Pickup location *\n                </Label>\n                <Input\n                  id=\"pickup_location\"\n                  value={formData.pickup_location}\n                  onChange={(e) =>\n                    setFormData({\n                      ...formData,\n                      pickup_location: e.target.value,\n                    })\n                  }\n                  placeholder=\"e.g., Near Area 25 Market\"\n                  className=\"mt-2 text-base h-12\"\n                />\n              </div>\n\n              <div>\n                <Label className=\"text-base font-medium\">Area/Township *</Label>\n                <Select\n                  value={formData.area}\n                  onValueChange={(value) =>\n                    setFormData({ ...formData, area: value })\n                  }\n                >\n                  <SelectTrigger className=\"mt-2 text-base h-12\">\n                    <SelectValue placeholder=\"Choose your area\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {areaOptions.map((area) => (\n                      <SelectItem key={area} value={area}>\n                        {area.charAt(0).toUpperCase() + area.slice(1)}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"bg-blue-50 p-4 rounded-lg\">\n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"is_anonymous\"\n                    checked={formData.is_anonymous}\n                    onCheckedChange={(checked) =>\n                      setFormData({ ...formData, is_anonymous: checked })\n                    }\n                  />\n                  <Label htmlFor=\"is_anonymous\" className=\"text-base\">\n                    Share anonymously\n                  </Label>\n                </div>\n                <p className=\"text-sm text-blue-600 mt-2\">\n                  Your name won't be shown to others\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 4: Impact */}\n        {currentStep === 4 && (\n          <div className=\"space-y-6 py-6\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-medium mb-2\">Choose your impact</h3>\n              <p className=\"text-gray-600 text-sm mb-6\">\n                Who would you like to help?\n              </p>\n            </div>\n\n            <div className=\"space-y-3\">\n              <button\n                type=\"button\"\n                onClick={() =>\n                  setFormData({ ...formData, collaboration_id: null })\n                }\n                className={`w-full p-4 rounded-xl border-2 text-left transition-all ${\n                  !formData.collaboration_id\n                    ? \"border-green-500 bg-green-50\"\n                    : \"border-gray-200 bg-white\"\n                }`}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <Globe className=\"w-6 h-6 text-blue-500\" />\n                  <div>\n                    <div className=\"font-medium\">Public Donation</div>\n                    <div className=\"text-sm text-gray-600\">\n                      Available to everyone in your area\n                    </div>\n                  </div>\n                </div>\n              </button>\n\n              {collaborations.map((collaboration) => (\n                <button\n                  key={collaboration.id}\n                  type=\"button\"\n                  onClick={() =>\n                    setFormData({\n                      ...formData,\n                      collaboration_id: collaboration.id,\n                    })\n                  }\n                  className={`w-full p-4 rounded-xl border-2 text-left transition-all ${\n                    formData.collaboration_id === collaboration.id\n                      ? \"border-green-500 bg-green-50\"\n                      : \"border-gray-200 bg-white\"\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    <Users className=\"w-6 h-6 text-purple-500\" />\n                    <div>\n                      <div className=\"font-medium\">{collaboration.title}</div>\n                      <div className=\"text-sm text-gray-600\">\n                        Specific cause or community project\n                      </div>\n                    </div>\n                  </div>\n                </button>\n              ))}\n            </div>\n\n            {/* Preview Card */}\n            <div className=\"mt-8\">\n              <h4 className=\"font-medium mb-3\">Preview of your listing:</h4>\n              <Card className=\"border-2 border-green-200\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex space-x-3\">\n                    {imagePreview ? (\n                      <Image\n                        src={imagePreview}\n                        alt=\"Preview\"\n                        width={60}\n                        height={60}\n                        className=\"rounded-lg object-cover\"\n                      />\n                    ) : (\n                      <div className=\"w-15 h-15 bg-gray-200 rounded-lg flex items-center justify-center\">\n                        <span className=\"text-2xl\">\n                          {getCategoryIcon(formData.category)}\n                        </span>\n                      </div>\n                    )}\n                    <div className=\"flex-1\">\n                      <h5 className=\"font-medium\">\n                        {formData.title || \"Your item title\"}\n                      </h5>\n                      <p className=\"text-sm text-gray-600\">\n                        {formData.quantity || \"Quantity\"}\n                      </p>\n                      <p className=\"text-sm text-green-600\">\n                        📍 {formData.area || \"Your area\"}\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Navigation Buttons */}\n      <div className=\"sticky bottom-0 bg-white border-t border-gray-100 p-4\">\n        <div className=\"flex space-x-3\">\n          {currentStep > 1 && (\n            <Button\n              variant=\"outline\"\n              onClick={handlePrevious}\n              className=\"flex-1 h-12 text-base\"\n            >\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Back\n            </Button>\n          )}\n\n          {currentStep < 4 ? (\n            <Button\n              onClick={handleNext}\n              disabled={!canProceedToNext()}\n              className={`h-12 text-base font-medium ${\n                currentStep === 1 ? \"w-full\" : \"flex-1\"\n              } bg-green-600 hover:bg-green-700 disabled:opacity-50`}\n            >\n              Continue\n              <ArrowRight className=\"w-4 h-4 ml-2\" />\n            </Button>\n          ) : (\n            <Button\n              onClick={handleSubmit}\n              disabled={loading || !canProceedToNext()}\n              className=\"flex-1 h-12 text-base font-medium bg-green-600 hover:bg-green-700 disabled:opacity-50\"\n            >\n              {loading ? (\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                  <span>Sharing...</span>\n                </div>\n              ) : (\n                <div className=\"flex items-center space-x-2\">\n                  <Heart className=\"w-4 h-4\" />\n                  <span>Share with Community</span>\n                </div>\n              )}\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":28698},"components/Auth.tsx":{"content":"\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { supabase } from \"@/lib/supabase\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { ArrowLeft } from \"lucide-react\"\nimport { getCityCoordinates } from \"@/lib/locationService\"\n\ninterface AuthProps {\n  onBackToLanding?: () => void\n}\n\nexport default function Auth({ onBackToLanding }: AuthProps) {\n  const [loading, setLoading] = useState(false)\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [fullName, setFullName] = useState(\"\")\n  const [phone, setPhone] = useState(\"\")\n  const [location, setLocation] = useState(\"\")\n  const [activeTab, setActiveTab] = useState(\"signin\")\n\n  const router = useRouter()\n\n  const handleSignUp = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n\n    try {\n      console.log(\"Attempting to sign up user:\", email)\n      \n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          emailRedirectTo: undefined, // Disable email confirmation redirect\n          data: {\n            full_name: fullName,\n            phone,\n            location,\n          },\n        },\n      })\n\n      if (error) {\n        console.error(\"Supabase signup error:\", error)\n        throw error\n      }\n\n      console.log(\"Signup response:\", data)\n\n      // Check if user was created successfully\n      if (data.user) {\n        console.log(\"User created successfully:\", data.user.id)\n        \n        // Wait a moment for the trigger to create the profile\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        \n        // Verify profile was created\n        const { data: profile, error: profileError } = await supabase\n          .from('profiles')\n          .select('*')\n          .eq('id', data.user.id)\n          .single()\n        \n        if (profileError) {\n          console.error(\"Profile creation error:\", profileError)\n          // Get location coordinates if location is provided\n          let latitude = null;\n          let longitude = null;\n          \n          if (location) {\n            const cityLocation = getCityCoordinates(location);\n            if (cityLocation) {\n              latitude = cityLocation.latitude;\n              longitude = cityLocation.longitude;\n            }\n          }\n\n          // Try to create profile manually if trigger failed\n          const { error: insertError } = await supabase\n            .from('profiles')\n            .insert({\n              id: data.user.id,\n              email: data.user.email || email,\n              full_name: fullName,\n              phone,\n              location,\n              latitude,\n              longitude,\n            })\n          \n          if (insertError) {\n            console.error(\"Manual profile creation failed:\", insertError)\n          } else {\n            console.log(\"Profile created manually\")\n          }\n        } else {\n          console.log(\"Profile created by trigger:\", profile)\n        }\n\n        alert(\"Account created successfully! Please sign in with your email and password.\")\n\n        // Reset form and switch to sign in tab\n        setEmail(\"\")\n        setPassword(\"\")\n        setFullName(\"\")\n        setPhone(\"\")\n        setLocation(\"\")\n        \n        // Switch to sign in tab\n        setActiveTab(\"signin\")\n      } else {\n        throw new Error(\"User creation failed - no user data returned\")\n      }\n    } catch (error: any) {\n      console.error(\"Sign up error:\", error)\n      alert(error.message || \"Error creating account. Please try again.\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleSignIn = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n\n    try {\n      const { error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      // Refresh session explicitly to avoid stale state\n      const { data: sessionData } = await supabase.auth.getSession()\n\n      // Redirect to home/dashboard after login\n      router.push(\"/\")\n    } catch (error: any) {\n      console.error(\"Sign in error:\", error)\n      alert(error.message || \"Error signing in. Please check your credentials.\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-green-50 p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center\">\n          {onBackToLanding && (\n            <div className=\"flex justify-start mb-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={onBackToLanding}\n                className=\"flex items-center gap-2 text-green-600 hover:text-green-700 hover:bg-green-100 p-2 rounded-full\"\n              >\n                <ArrowLeft className=\"h-4 w-4\" />\n                <span className=\"text-sm\">Back</span>\n              </Button>\n            </div>\n          )}\n          <CardTitle className=\"text-2xl font-bold text-green-700\">🥗 Malawi Food Share</CardTitle>\n          <CardDescription>Share food, reduce waste, help your community</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2\">\n              <TabsTrigger value=\"signin\">Sign In</TabsTrigger>\n              <TabsTrigger value=\"signup\">Sign Up</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"signin\">\n              <form onSubmit={handleSignIn} className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input id=\"email\" type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                </div>\n                <div>\n                  <Label htmlFor=\"password\">Password</Label>\n                  <Input\n                    id=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                  />\n                </div>\n                <Button type=\"submit\" className=\"w-full bg-green-600 hover:bg-green-700\" disabled={loading}>\n                  {loading ? \"Signing in...\" : \"Sign In\"}\n                </Button>\n              </form>\n            </TabsContent>\n\n            <TabsContent value=\"signup\">\n              <form onSubmit={handleSignUp} className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"fullName\">Full Name</Label>\n                  <Input\n                    id=\"fullName\"\n                    type=\"text\"\n                    value={fullName}\n                    onChange={(e) => setFullName(e.target.value)}\n                    required\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input id=\"email\" type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                </div>\n                <div>\n                  <Label htmlFor=\"phone\">Phone Number</Label>\n                  <Input\n                    id=\"phone\"\n                    type=\"tel\"\n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                    placeholder=\"+265...\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"location\">Location (City/Area)</Label>\n                  <Input\n                    id=\"location\"\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"e.g., Lilongwe, Blantyre\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"password\">Password</Label>\n                  <Input\n                    id=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                  />\n                </div>\n                <Button type=\"submit\" className=\"w-full bg-green-600 hover:bg-green-700\" disabled={loading}>\n                  {loading ? \"Creating account...\" : \"Sign Up\"}\n                </Button>\n              </form>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n","size_bytes":8880},"components/ChatModal.tsx":{"content":"\"use client\"\n\nimport { useState, useEffect, useRef, useCallback } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle\n} from \"@/components/ui/dialog\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport { Send, Loader2, X } from \"lucide-react\"\n\ninterface Message {\n  id: string\n  message: string\n  sender_id: string\n  created_at: string\n  claim_id: string\n  sender_name?: string\n}\n\ninterface ChatModalProps {\n  claimId: string | null\n  isOpen: boolean\n  onClose: () => void\n  otherUserName: string\n}\n\nexport default function ChatModal({ claimId, isOpen, onClose, otherUserName }: ChatModalProps) {\n  const { user } = useAuth()\n  const [messages, setMessages] = useState<Message[]>([])\n  const [newMessage, setNewMessage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [sending, setSending] = useState(false)\n  const [isTyping, setIsTyping] = useState(false)\n  const scrollAreaRef = useRef<HTMLDivElement | null>(null)\n  const messagesEndRef = useRef<HTMLDivElement | null>(null)\n  const typingTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n  const [requestMessage, setRequestMessage] = useState<string | null>(null)\n  const [claimLoading, setClaimLoading] = useState(false)\n  const [claimInfo, setClaimInfo] = useState<{ owner_id: string; claimer_id: string; item_id: string; status: string } | null>(null)\n  const [completing, setCompleting] = useState(false)\n\n  const scrollToBottom = useCallback(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }, [])\n\n  const fetchMessages = useCallback(async () => {\n    if (!claimId) return\n    setLoading(true)\n    try {\n      const { data, error } = await supabase.rpc(\"get_messages_with_sender_names\", {\n        p_claim_id: claimId,\n        p_limit: 100,\n      })\n\n      if (error) {\n        console.error(\"Error fetching messages:\", error)\n      } else {\n        setMessages(data || [])\n        setTimeout(scrollToBottom, 100)\n      }\n    } catch (error) {\n      console.error(\"Unexpected error fetching messages:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }, [claimId, scrollToBottom])\n\n  // Real-time listener without broken filters\n  useEffect(() => {\n    if (!claimId || !isOpen) return\n\n    fetchMessages()\n\n    const channel = supabase\n      .channel('realtime:messages')\n      .on(\n        'postgres_changes',\n        {\n          event: 'INSERT',\n          schema: 'public',\n          table: 'messages',\n        },\n        async (payload) => {\n          const newMsg = payload.new as Message\n\n          if (newMsg.claim_id !== claimId) return\n\n          const { data: profile } = await supabase\n            .from(\"profiles\")\n            .select(\"full_name\")\n            .eq(\"id\", newMsg.sender_id)\n            .single()\n\n          const messageWithName = {\n            ...newMsg,\n            sender_name: profile?.full_name || \"Anonymous\",\n          }\n\n          setMessages(prev => {\n            if (prev.some(msg => msg.id === newMsg.id)) return prev\n            return [...prev, messageWithName]\n          })\n\n          setTimeout(scrollToBottom, 100)\n        }\n      )\n      .subscribe()\n\n    return () => {\n      channel.unsubscribe()\n    }\n  }, [claimId, isOpen, fetchMessages, scrollToBottom])\n\n  // Fetch the claim's request message\n  useEffect(() => {\n    if (!claimId || !isOpen) return\n    setClaimLoading(true)\n    const fetchClaimMessage = async () => {\n      const { data, error } = await supabase\n        .from(\"claims\")\n        .select(\"message\")\n        .eq(\"id\", claimId)\n        .single()\n      if (!error && data) setRequestMessage(data.message)\n      else setRequestMessage(null)\n      setClaimLoading(false)\n    }\n    fetchClaimMessage()\n  }, [claimId, isOpen])\n\n  // Fetch claim info for completion logic\n  useEffect(() => {\n    if (!claimId || !isOpen) return\n    const fetchClaimInfo = async () => {\n      const { data, error } = await supabase\n        .from(\"claims\")\n        .select(\"owner_id, claimer_id, item_id, status\")\n        .eq(\"id\", claimId)\n        .single()\n      if (!error && data) setClaimInfo(data)\n      else setClaimInfo(null)\n    }\n    fetchClaimInfo()\n  }, [claimId, isOpen])\n\n  const handleTyping = useCallback(() => {\n    if (!isTyping) setIsTyping(true)\n    if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current)\n\n    typingTimeoutRef.current = setTimeout(() => {\n      setIsTyping(false)\n    }, 1000)\n  }, [isTyping])\n\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !claimId || !user) return\n\n    const messageText = newMessage.trim()\n    const tempId = `temp-${Date.now()}`\n\n    // Add message immediately to UI for instant feedback\n    const tempMessage = {\n      id: tempId,\n      claim_id: claimId,\n      sender_id: user.id,\n      message: messageText,\n      created_at: new Date().toISOString(),\n      sender_name: \"You\"\n    }\n\n    setMessages(prev => [...prev, tempMessage])\n    setNewMessage(\"\")\n    setTimeout(scrollToBottom, 50)\n\n    setSending(true)\n    try {\n      const { data, error } = await supabase.from(\"messages\").insert({\n        claim_id: claimId,\n        sender_id: user.id,\n        message: messageText,\n      }).select().single()\n\n      if (error) throw error\n\n      // Replace temp message with real one\n      setMessages(prev => prev.map(msg =>\n        msg.id === tempId ? { ...data, sender_name: \"You\" } : msg\n      ))\n    } catch (error: any) {\n      console.error(\"Error sending message:\", error)\n      // Remove temp message on error\n      setMessages(prev => prev.filter(msg => msg.id !== tempId))\n      alert(`Failed to send message: ${error.message}`)\n      setNewMessage(messageText) // Restore message text\n    } finally {\n      setSending(false)\n    }\n  }\n\n  const handleKeyPress = useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.key === \"Enter\" && !e.shiftKey) {\n        e.preventDefault()\n        sendMessage()\n      }\n    },\n    [sendMessage]\n  )\n\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setNewMessage(e.target.value)\n      handleTyping()\n    },\n    [handleTyping]\n  )\n\n  const formatTime = useCallback((dateString: string) => {\n    const date = new Date(dateString)\n    const now = new Date()\n    const diffInHours = (now.getTime() - date.getTime()) / (1000 * 60 * 60)\n\n    return diffInHours < 24\n      ? date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })\n      : date.toLocaleDateString([], { month: \"short\", day: \"numeric\" })\n  }, [])\n\n  const handleComplete = async () => {\n    if (!claimInfo || !user || claimInfo.owner_id !== user.id) return\n    setCompleting(true)\n    try {\n      // Update claim status\n      await supabase.from(\"claims\").update({ status: \"completed\" }).eq(\"id\", claimId)\n      // Update item status\n      await supabase.from(\"items\").update({ status: \"completed\" }).eq(\"id\", claimInfo.item_id)\n      // Notify claimer\n      await supabase.from(\"notifications\").insert({\n        user_id: claimInfo.claimer_id,\n        type: \"status_update\",\n        title: \"Sharing completed\",\n        message: \"The owner has marked this sharing as complete.\",\n        related_claim_id: claimId,\n        is_read: false,\n      })\n      // Refetch claim info to update UI\n      setClaimInfo({ ...claimInfo, status: \"completed\" })\n      alert(\"Marked as complete. This item will be removed from active listings.\")\n    } catch (err) {\n      alert(\"Error marking as complete.\")\n    } finally {\n      setCompleting(false)\n    }\n  }\n\n  if (!claimId) return null\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-md h-[600px] flex flex-col bg-white shadow-xl rounded-xl border-2 border-green-100\">\n        <DialogHeader className=\"flex flex-row items-center justify-between gap-2 border-b pb-2 mb-2\">\n          <div className=\"flex flex-col flex-1\">\n            <DialogTitle className=\"text-lg font-bold\">Chat with {otherUserName}</DialogTitle>\n            <DialogDescription className=\"text-xs text-gray-500\">\n              Coordinate pickup details\n              {isTyping && <span className=\"text-green-600 ml-2\">• typing...</span>}\n            </DialogDescription>\n          </div>\n          <Button variant=\"ghost\" size=\"icon\" onClick={onClose} aria-label=\"Close chat\">\n            <X className=\"h-5 w-5\" />\n          </Button>\n        </DialogHeader>\n\n        <ScrollArea className=\"flex-1 p-4 border rounded bg-gray-50\" ref={scrollAreaRef}>\n          {claimLoading ? (\n            <div className=\"flex justify-center items-center h-16\">\n              <Loader2 className=\"h-5 w-5 animate-spin text-green-600\" />\n            </div>\n          ) : requestMessage ? (\n            <div className=\"mb-4 p-3 rounded-lg bg-green-100 text-green-900 text-sm border border-green-200\">\n              <span className=\"font-semibold\">Request message:</span>\n              <br />\n              {requestMessage}\n            </div>\n          ) : null}\n          {loading ? (\n            <div className=\"flex justify-center items-center h-32\">\n              <Loader2 className=\"h-6 w-6 animate-spin text-green-600\" />\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {messages.length === 0 ? (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <p>No messages yet</p>\n                  <p className=\"text-xs mt-1\">Start the conversation!</p>\n                </div>\n              ) : (\n                messages.map((message, index) => {\n                  const isOwn = message.sender_id === user?.id\n                  const showSender = index === 0 || messages[index - 1].sender_id !== message.sender_id\n\n                  return (\n                    <div key={message.id} className={`flex ${isOwn ? \"justify-end\" : \"justify-start\"}`}>\n                      <div\n                        className={`max-w-[80%] p-3 rounded-2xl shadow-sm transition-all duration-200 text-sm break-words\n                          ${isOwn ? \"bg-green-600 text-white rounded-br-md\" : \"bg-white border border-gray-200 text-gray-900 rounded-bl-md\"}\n                        `}\n                      >\n                        {!isOwn && showSender && (\n                          <p className=\"text-xs font-medium mb-1 opacity-70\">{message.sender_name}</p>\n                        )}\n                        <p className=\"whitespace-pre-wrap\">{message.message}</p>\n                        <p className=\"text-xs opacity-60 mt-1 text-right\">{formatTime(message.created_at)}</p>\n                      </div>\n                    </div>\n                  )\n                })\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n          )}\n        </ScrollArea>\n\n        <form\n          className=\"flex gap-2 mt-2\"\n          onSubmit={e => {\n            e.preventDefault();\n            sendMessage();\n          }}\n        >\n          <Input\n            value={newMessage}\n            onChange={handleInputChange}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Type your message...\"\n            disabled={sending}\n            className=\"flex-1 focus:ring-2 focus:ring-green-400 focus:border-green-400 rounded-full px-4 py-2 text-base\"\n            maxLength={500}\n            autoFocus\n          />\n          <Button type=\"submit\" onClick={sendMessage} disabled={sending || !newMessage.trim()} size=\"icon\" className=\"shrink-0 bg-green-600 hover:bg-green-700\">\n            {sending ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <Send className=\"h-4 w-4\" />}\n          </Button>\n        </form>\n        {claimInfo && (claimInfo.owner_id === user?.id || claimInfo.claimer_id === user?.id) && claimInfo.status !== \"completed\" && (\n          <Button\n            onClick={handleComplete}\n            disabled={completing}\n            className=\"mt-2 bg-blue-600 hover:bg-blue-700 w-full\"\n          >\n            {completing ? \"Completing...\" : \"Mark as Shared\"}\n          </Button>\n        )}\n      </DialogContent>\n    </Dialog>\n  )\n}","size_bytes":12237},"components/ClaimFoodModal.tsx":{"content":"\"use client\"\n\nimport { useState } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport { Button } from \"@/components/ui/button\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Label } from \"@/components/ui/label\"\n\ninterface Item {\n  id: string\n  title: string\n  description: string | null\n  pickup_location: string\n  user_id: string\n  owner_name?: string | null\n}\n\ninterface ClaimFoodModalProps {\n  foodItem: Item | null\n  isOpen: boolean\n  onClose: () => void\n  onClaimed: () => void\n}\n\nexport default function ClaimFoodModal({ foodItem, isOpen, onClose, onClaimed }: ClaimFoodModalProps) {\n  const { user } = useAuth()\n  const [message, setMessage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  const handleClaim = async () => {\n    if (!user || !foodItem) return\n\n    setLoading(true)\n\n    try {\n      console.log(\"Creating claim for item:\", foodItem.id)\n\n      const { data, error } = await supabase\n        .from(\"claims\")\n        .insert({\n          item_id: foodItem.id,\n          claimer_id: user.id,\n          owner_id: foodItem.user_id,\n          message: message || null,\n        })\n        .select()\n\n      if (error) {\n        console.error(\"Error creating claim:\", error)\n        throw error\n      }\n\n      console.log(\"Claim created successfully:\", data)\n\n      // Update item status to 'requested' instead of 'claimed'\n      const { error: updateError } = await supabase.from(\"items\").update({ status: \"requested\" }).eq(\"id\", foodItem.id)\n\n      if (updateError) {\n        console.warn(\"Error updating item status:\", updateError)\n      } else {\n        console.log(\"Item status updated to requested\")\n      }\n\n      onClaimed()\n      onClose()\n      setMessage(\"\")\n      \n      // Create a temporary success notification\n      const successDiv = document.createElement('div')\n      successDiv.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-pulse'\n      successDiv.textContent = '✅ Request sent successfully! Owner will be notified.'\n      document.body.appendChild(successDiv)\n      \n      setTimeout(() => {\n        if (document.body.contains(successDiv)) {\n          document.body.removeChild(successDiv)\n        }\n      }, 4000)\n    } catch (error: any) {\n      console.error(\"Error claiming item:\", error)\n      alert(`Error sending request: ${error.message}`)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  if (!foodItem) return null\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <DialogTitle>Request Item</DialogTitle>\n          <DialogDescription>\n            Send a request to {foodItem.owner_name || \"the owner\"} for \"{foodItem.title}\"\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-4\">\n          <div>\n            <p className=\"text-sm text-gray-600\">\n              <strong>Pickup Location:</strong> {foodItem.pickup_location}\n            </p>\n          </div>\n          <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-3 rounded mb-2\">\n            <div className=\"font-semibold text-yellow-800 mb-1 text-sm\">Safety Tips:</div>\n            <ul className=\"list-disc list-inside text-xs text-yellow-900 space-y-1\">\n              <li>Meet during the day</li>\n              <li>Meet in public places</li>\n              <li>Go with a friend</li>\n              <li>Keep it cash free</li>\n              <li>Trust your instincts and report suspicious activity</li>\n            </ul>\n          </div>\n          <div>\n            <Label htmlFor=\"message\">Message (optional)</Label>\n            <Textarea\n              id=\"message\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              placeholder=\"Hi! I'm interested in this item. When can I pick it up?\"\n              rows={3}\n            />\n          </div>\n\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\" onClick={onClose} className=\"flex-1\">\n              Cancel\n            </Button>\n            <Button onClick={handleClaim} disabled={loading} className=\"flex-1 bg-green-600 hover:bg-green-700\">\n              {loading ? \"Sending...\" : \"Send Request\"}\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","size_bytes":4506},"components/CollaborationCenter.tsx":{"content":"\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useEffect } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Label } from \"@/components/ui/label\"\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Users, Plus, MapPin, Calendar, MessageCircle, AlertCircle, Package, Utensils, Gift } from \"lucide-react\"\n\ninterface Collaboration {\n  id: string\n  title: string\n  description: string\n  location: string\n  target_date: string | null\n  status: string\n  created_at: string\n  creator_id: string\n  creator_name?: string\n  participant_count?: number\n  is_participant?: boolean\n  donation_preview?: {\n    food_count: number\n    item_count: number\n    total_count: number\n  }\n}\n\ninterface CollaborationCenterProps {\n  onOpenCollaborationChat: (collaborationId: string, title: string) => void\n}\n\nexport default function CollaborationCenter({ onOpenCollaborationChat }: CollaborationCenterProps) {\n  const { user } = useAuth()\n  const [collaborations, setCollaborations] = useState<Collaboration[]>([])\n  const [showCreateForm, setShowCreateForm] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [isTableMissing, setIsTableMissing] = useState(false)\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    location: \"\",\n    target_date: \"\",\n  })\n\n  useEffect(() => {\n    fetchCollaborations()\n  }, [])\n\n  const fetchCollaborations = async () => {\n    try {\n      // First, fetch collaboration requests\n      const { data: collaborationData, error: collaborationError } = await supabase\n        .from(\"collaboration_requests\")\n        .select(\"*\")\n        .eq(\"status\", \"active\")\n        .order(\"created_at\", { ascending: false })\n\n      if (collaborationError) {\n        console.error(\"Error fetching collaborations:\", collaborationError)\n        if (collaborationError.message.includes('relation \"public.collaboration_requests\" does not exist')) {\n          setIsTableMissing(true)\n        }\n        return\n      }\n\n      if (!collaborationData || collaborationData.length === 0) {\n        setCollaborations([])\n        setIsTableMissing(false)\n        return\n      }\n\n      // Get creator names separately\n      const creatorIds = [...new Set(collaborationData.map((collab) => collab.creator_id))]\n      const { data: profilesData } = await supabase.from(\"profiles\").select(\"id, full_name\").in(\"id\", creatorIds)\n\n      // Create a map of creator IDs to names\n      const profilesMap = new Map()\n      if (profilesData) {\n        profilesData.forEach((profile) => {\n          profilesMap.set(profile.id, profile.full_name)\n        })\n      }\n\n      // Optimize database queries by batching them\n      const collaborationIds = collaborationData.map(collab => collab.id)\n      \n      // Get all participants for all collaborations in one query\n      const { data: allParticipants } = await supabase\n        .from(\"collaboration_participants\")\n        .select(\"collaboration_id, user_id\")\n        .in(\"collaboration_id\", collaborationIds)\n\n      // Get all donation data for all collaborations in one query\n      const { data: allDonations } = await supabase\n        .from(\"items\")\n        .select(\"collaboration_id, item_type\")\n        .in(\"collaboration_id\", collaborationIds)\n        .eq(\"status\", \"available\")\n\n      // Process the data efficiently\n      const participantsByCollab = new Map()\n      const donationsByCollab = new Map()\n      \n      // Group participants by collaboration\n      if (allParticipants) {\n        allParticipants.forEach(p => {\n          if (!participantsByCollab.has(p.collaboration_id)) {\n            participantsByCollab.set(p.collaboration_id, [])\n          }\n          participantsByCollab.get(p.collaboration_id).push(p.user_id)\n        })\n      }\n      \n      // Group donations by collaboration and type\n      if (allDonations) {\n        allDonations.forEach(d => {\n          if (!donationsByCollab.has(d.collaboration_id)) {\n            donationsByCollab.set(d.collaboration_id, { food: 0, nonFood: 0, total: 0 })\n          }\n          const stats = donationsByCollab.get(d.collaboration_id)\n          stats.total++\n          if (d.item_type === \"food\") {\n            stats.food++\n          } else {\n            stats.nonFood++\n          }\n        })\n      }\n\n      // Build the final collaboration objects\n      const collaborationsWithDetails = collaborationData.map(collab => {\n        const participants = participantsByCollab.get(collab.id) || []\n        const donations = donationsByCollab.get(collab.id) || { food: 0, nonFood: 0, total: 0 }\n        const isParticipant = user ? participants.includes(user.id) : false\n\n        return {\n          ...collab,\n          creator_name: profilesMap.get(collab.creator_id) || \"Anonymous\",\n          participant_count: participants.length,\n          is_participant: isParticipant,\n          donation_preview: {\n            food_count: donations.food,\n            item_count: donations.nonFood,\n            total_count: donations.total\n          }\n        }\n      })\n\n      setCollaborations(collaborationsWithDetails)\n      setIsTableMissing(false)\n    } catch (error) {\n      console.error(\"Unexpected error fetching collaborations:\", error)\n      setIsTableMissing(true)\n    }\n  }\n\n  const createCollaboration = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!user || isTableMissing) return\n\n    setLoading(true)\n\n    try {\n      const { data, error } = await supabase\n        .from(\"collaboration_requests\")\n        .insert({\n          creator_id: user.id,\n          title: formData.title,\n          description: formData.description,\n          location: formData.location,\n          target_date: formData.target_date || null,\n        })\n        .select()\n        .single()\n\n      if (error) throw error\n\n      // Auto-join the creator as a participant\n      await supabase.from(\"collaboration_participants\").insert({\n        collaboration_id: data.id,\n        user_id: user.id,\n      })\n\n      setFormData({ title: \"\", description: \"\", location: \"\", target_date: \"\" })\n      setShowCreateForm(false)\n      fetchCollaborations()\n      alert(\"Collaboration created successfully!\")\n    } catch (error: any) {\n      console.error(\"Error creating collaboration:\", error)\n      alert(`Error creating collaboration: ${error.message}`)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const joinCollaboration = async (collaborationId: string) => {\n    if (!user || isTableMissing) return\n\n    try {\n      const { error } = await supabase.from(\"collaboration_participants\").insert({\n        collaboration_id: collaborationId,\n        user_id: user.id,\n      })\n\n      if (error) throw error\n\n      fetchCollaborations()\n      alert(\"Successfully joined the collaboration!\")\n    } catch (error: any) {\n      console.error(\"Error joining collaboration:\", error)\n      alert(`Error joining collaboration: ${error.message}`)\n    }\n  }\n\n  const leaveCollaboration = async (collaborationId: string) => {\n    if (!user || isTableMissing) return\n\n    try {\n      const { error } = await supabase\n        .from(\"collaboration_participants\")\n        .delete()\n        .eq(\"collaboration_id\", collaborationId)\n        .eq(\"user_id\", user.id)\n\n      if (error) throw error\n\n      fetchCollaborations()\n      alert(\"Left the collaboration\")\n    } catch (error: any) {\n      console.error(\"Error leaving collaboration:\", error)\n      alert(`Error leaving collaboration: ${error.message}`)\n    }\n  }\n\n  // Show setup message if table is missing\n  if (isTableMissing) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Community Collaborations</h2>\n          <p className=\"text-gray-600\">Organize big moves, donations, and community projects</p>\n        </div>\n\n        <Card className=\"max-w-2xl mx-auto\">\n          <CardContent className=\"p-8 text-center\">\n            <AlertCircle className=\"h-12 w-12 mx-auto mb-4 text-orange-500\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Setup Required</h3>\n            <p className=\"text-gray-600 mb-4\">\n              The collaboration system needs to be set up. Please run the complete database setup script to enable\n              collaboration features.\n            </p>\n            <div className=\"bg-gray-100 p-3 rounded text-sm mb-4\">\n              <strong>Script to run:</strong>\n              <br />\n              <code>scripts/setup-complete-database.sql</code>\n            </div>\n            <Button onClick={fetchCollaborations} variant=\"outline\">\n              Check Again\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Community Collaborations</h2>\n          <p className=\"text-gray-600\">Organize big moves, donations, and community projects</p>\n        </div>\n        <Dialog open={showCreateForm} onOpenChange={setShowCreateForm}>\n          <DialogTrigger asChild>\n            <Button className=\"bg-green-600 hover:bg-green-700\">\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Start Collaboration\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-md\">\n            <DialogHeader>\n              <DialogTitle>Start a New Collaboration</DialogTitle>\n            </DialogHeader>\n            <form onSubmit={createCollaboration} className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"title\">Title *</Label>\n                <Input\n                  id=\"title\"\n                  value={formData.title}\n                  onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n                  placeholder=\"e.g., Community Food Drive, Moving Help\"\n                  required\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"description\">Description *</Label>\n                <Textarea\n                  id=\"description\"\n                  value={formData.description}\n                  onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                  placeholder=\"Describe what help you need or what you're organizing...\"\n                  rows={3}\n                  required\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"location\">Location *</Label>\n                <Input\n                  id=\"location\"\n                  value={formData.location}\n                  onChange={(e) => setFormData({ ...formData, location: e.target.value })}\n                  placeholder=\"e.g., Lilongwe, Area 25\"\n                  required\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"target_date\">Target Date (optional)</Label>\n                <Input\n                  id=\"target_date\"\n                  type=\"date\"\n                  value={formData.target_date}\n                  onChange={(e) => setFormData({ ...formData, target_date: e.target.value })}\n                />\n              </div>\n              <div className=\"flex gap-2\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowCreateForm(false)} className=\"flex-1\">\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={loading} className=\"flex-1 bg-green-600 hover:bg-green-700\">\n                  {loading ? \"Creating...\" : \"Create\"}\n                </Button>\n              </div>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {collaborations.map((collab) => (\n          <Card key={collab.id} className=\"hover:shadow-lg transition-all duration-300 border-l-4 border-l-green-500\">\n            <CardHeader className=\"pb-3\">\n              <div className=\"flex justify-between items-start\">\n                <CardTitle className=\"text-lg text-green-700\">{collab.title}</CardTitle>\n                <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-800\">\n                  <Users className=\"h-3 w-3 mr-1\" />\n                  {collab.participant_count}\n                </Badge>\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <p className=\"text-gray-600 text-sm line-clamp-2\">{collab.description}</p>\n\n              {/* Simple Donation Summary */}\n              {collab.donation_preview && collab.donation_preview.total_count > 0 && (\n                <div className=\"bg-green-50 border border-green-200 rounded-lg p-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <h4 className=\"text-sm font-medium text-green-800 flex items-center gap-1\">\n                      <Gift className=\"h-4 w-4\" />\n                      Shared Items\n                    </h4>\n                    <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800 text-xs\">\n                      {collab.donation_preview.total_count} total\n                    </Badge>\n                  </div>\n                  \n                  <div className=\"flex gap-4 text-xs text-green-700 mt-2\">\n                    {collab.donation_preview.food_count > 0 && (\n                      <div className=\"flex items-center gap-1\">\n                        <Utensils className=\"h-3 w-3\" />\n                        <span>{collab.donation_preview.food_count} food</span>\n                      </div>\n                    )}\n                    {collab.donation_preview.item_count > 0 && (\n                      <div className=\"flex items-center gap-1\">\n                        <Package className=\"h-3 w-3\" />\n                        <span>{collab.donation_preview.item_count} items</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* Simple Participants Summary */}\n              {collab.participant_count && collab.participant_count > 0 && (\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <h4 className=\"text-sm font-medium text-blue-800 flex items-center gap-1\">\n                      <Users className=\"h-4 w-4\" />\n                      Participants\n                    </h4>\n                    <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-800 text-xs\">\n                      {collab.participant_count} total\n                    </Badge>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                  <MapPin className=\"h-4 w-4\" />\n                  <span>{collab.location}</span>\n                </div>\n\n                {collab.target_date && (\n                  <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                    <Calendar className=\"h-4 w-4\" />\n                    <span>Target: {new Date(collab.target_date).toLocaleDateString()}</span>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"text-sm text-gray-500 border-t pt-2\">\n                Created by {collab.creator_name} • {new Date(collab.created_at).toLocaleDateString()}\n              </div>\n\n              <div className=\"flex gap-2 pt-2\">\n                {collab.is_participant ? (\n                  <>\n                    <Button\n                      onClick={() => onOpenCollaborationChat(collab.id, collab.title)}\n                      className=\"flex-1 bg-green-600 hover:bg-green-700\"\n                      size=\"sm\"\n                    >\n                      <MessageCircle className=\"h-4 w-4 mr-1\" />\n                      Chat\n                    </Button>\n                    <Button onClick={() => leaveCollaboration(collab.id)} variant=\"outline\" size=\"sm\">\n                      Leave\n                    </Button>\n                  </>\n                ) : (\n                  <Button\n                    onClick={() => joinCollaboration(collab.id)}\n                    className=\"w-full bg-blue-600 hover:bg-blue-700\"\n                    size=\"sm\"\n                  >\n                    Join Collaboration\n                  </Button>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {collaborations.length === 0 && !isTableMissing && (\n        <div className=\"text-center py-12\">\n          <Users className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No active collaborations</h3>\n          <p className=\"text-gray-600 mb-4\">Be the first to start a community collaboration!</p>\n          <Button onClick={() => setShowCreateForm(true)} className=\"bg-green-600 hover:bg-green-700\">\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Start Collaboration\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}\n","size_bytes":17578},"components/CollaborationChatModal.tsx":{"content":"\n\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useEffect, useRef } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Send, Users, Package, Utensils, Gift, ExternalLink, Clock, MapPin, Calendar, MessageCircle, Loader2 } from \"lucide-react\"\nimport { useRouter } from \"next/navigation\"\n\ninterface CollaborationMessage {\n  id: string\n  message: string\n  sender_id: string\n  created_at: string\n  sender_name?: string\n}\n\ninterface Participant {\n  id: string\n  user_id: string\n  full_name: string | null\n}\n\ninterface CollaborationChatModalProps {\n  collaborationId: string | null\n  collaborationTitle: string\n  isOpen: boolean\n  onClose: () => void\n}\n\ninterface DonationSummary {\n  food_count: number\n  item_count: number\n  total_count: number\n  recent_donations: Array<{\n    id: string\n    title: string\n    item_type: string\n    user_name?: string\n    created_at: string\n  }>\n}\n\nexport default function CollaborationChatModal({\n  collaborationId,\n  collaborationTitle,\n  isOpen,\n  onClose,\n}: CollaborationChatModalProps) {\n  const { user } = useAuth()\n  const router = useRouter()\n  const [messages, setMessages] = useState<CollaborationMessage[]>([])\n  const [participants, setParticipants] = useState<Participant[]>([])\n  const [donationSummary, setDonationSummary] = useState<DonationSummary | null>(null)\n  const [newMessage, setNewMessage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [isNavigating, setIsNavigating] = useState(false)\n  const scrollAreaRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (collaborationId && isOpen) {\n      fetchMessages()\n      fetchParticipants()\n      fetchDonationSummary()\n\n      // Subscribe to new messages\n      const subscription = supabase\n        .channel(`collaboration_messages:${collaborationId}`)\n        .on(\n          \"postgres_changes\",\n          {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"collaboration_messages\",\n            filter: `collaboration_id=eq.${collaborationId}`,\n          },\n          (payload) => {\n            const newMsg = payload.new as CollaborationMessage\n            // Fetch sender name for the new message\n            fetchSenderName(newMsg.sender_id).then((senderName) => {\n              setMessages((prev) => [...prev, { ...newMsg, sender_name: senderName }])\n            })\n          },\n        )\n        .subscribe()\n\n      return () => {\n        subscription.unsubscribe()\n      }\n    }\n  }, [collaborationId, isOpen])\n\n  useEffect(() => {\n    // Scroll to bottom when new messages arrive\n    if (scrollAreaRef.current) {\n      const scrollElement = scrollAreaRef.current.querySelector('[data-radix-scroll-area-viewport]')\n      if (scrollElement) {\n        scrollElement.scrollTop = scrollElement.scrollHeight\n      }\n    }\n  }, [messages])\n\n  const fetchSenderName = async (senderId: string): Promise<string> => {\n    const { data } = await supabase.from(\"profiles\").select(\"full_name\").eq(\"id\", senderId).single()\n    return data?.full_name || \"Anonymous\"\n  }\n\n  const fetchMessages = async () => {\n    if (!collaborationId) return\n\n    const { data, error } = await supabase\n      .from(\"collaboration_messages\")\n      .select(\"*\")\n      .eq(\"collaboration_id\", collaborationId)\n      .order(\"created_at\", { ascending: true })\n\n    if (error) {\n      console.error(\"Error fetching messages:\", error)\n    } else {\n      // Get sender names for all messages\n      const messagesWithNames = await Promise.all(\n        (data || []).map(async (msg) => {\n          const senderName = await fetchSenderName(msg.sender_id)\n          return {\n            ...msg,\n            sender_name: senderName,\n          }\n        }),\n      )\n      setMessages(messagesWithNames)\n    }\n  }\n\n  const fetchParticipants = async () => {\n    if (!collaborationId) return\n\n    // First get participant user IDs\n    const { data: participantData, error } = await supabase\n      .from(\"collaboration_participants\")\n      .select(\"*\")\n      .eq(\"collaboration_id\", collaborationId)\n\n    if (error) {\n      console.error(\"Error fetching participants:\", error)\n      return\n    }\n\n    if (!participantData || participantData.length === 0) {\n      setParticipants([])\n      return\n    }\n\n    // Then get their profile information\n    const userIds = participantData.map((p) => p.user_id)\n    const { data: profilesData } = await supabase.from(\"profiles\").select(\"id, full_name\").in(\"id\", userIds)\n\n    // Combine participant and profile data\n    const participantsWithProfiles = participantData.map((participant) => {\n      const profile = profilesData?.find((p) => p.id === participant.user_id)\n      return {\n        ...participant,\n        full_name: profile?.full_name || null,\n      }\n    })\n\n    setParticipants(participantsWithProfiles)\n  }\n\n  const fetchDonationSummary = async () => {\n    if (!collaborationId) return\n\n    try {\n      // Get items for this collaboration - show all items regardless of location\n      const { data: donationData, error } = await supabase\n        .from(\"items\")\n        .select(\"id, title, item_type, user_id, created_at\")\n        .eq(\"status\", \"available\")\n        .eq(\"collaboration_id\", collaborationId)\n        .order(\"created_at\", { ascending: false })\n        .limit(10)\n\n      if (error) {\n        console.error(\"Error fetching donations:\", error)\n        setDonationSummary({\n          food_count: 0,\n          item_count: 0,\n          total_count: 0,\n          recent_donations: []\n        })\n        return\n      }\n\n      if (!donationData || donationData.length === 0) {\n        setDonationSummary({\n          food_count: 0,\n          item_count: 0,\n          total_count: 0,\n          recent_donations: []\n        })\n        return\n      }\n\n      // Process data efficiently without additional queries\n      const foodCount = donationData.filter(item => item.item_type === \"food\").length\n      const itemCount = donationData.filter(item => item.item_type === \"non-food\").length\n\n      const recentDonations = donationData.map(item => ({\n        id: item.id,\n        title: item.title,\n        item_type: item.item_type,\n        user_name: (item.profiles as any)?.full_name || \"Anonymous\",\n        created_at: item.created_at\n      }))\n\n      setDonationSummary({\n        food_count: foodCount,\n        item_count: itemCount,\n        total_count: donationData.length,\n        recent_donations: recentDonations\n      })\n    } catch (error) {\n      console.error(\"Error fetching donation summary:\", error)\n      setDonationSummary({\n        food_count: 0,\n        item_count: 0,\n        total_count: 0,\n        recent_donations: []\n      })\n    }\n  }\n\n  const sendMessage = async () => {\n    if (!user || !collaborationId || !newMessage.trim()) return\n\n    const messageText = newMessage.trim()\n    setNewMessage(\"\")\n    \n    // Optimistically add message to UI\n    const optimisticMessage = {\n      id: `temp-${Date.now()}`,\n      message: messageText,\n      sender_id: user.id,\n      created_at: new Date().toISOString(),\n      sender_name: user.user_metadata?.full_name || 'You'\n    }\n    \n    setMessages(prev => [...prev, optimisticMessage])\n    \n    setLoading(true)\n\n    try {\n      const { data, error } = await supabase.from(\"collaboration_messages\").insert({\n        collaboration_id: collaborationId,\n        sender_id: user.id,\n        message: messageText,\n      }).select()\n\n      if (error) {\n        throw error\n      }\n\n      // Replace optimistic message with real one\n      if (data && data[0]) {\n        setMessages(prev => prev.map(msg => \n          msg.id === optimisticMessage.id ? { ...data[0], sender_name: optimisticMessage.sender_name } : msg\n        ))\n      }\n    } catch (error: any) {\n      console.error(\"Error sending message:\", error)\n      // Remove optimistic message on error\n      setMessages(prev => prev.filter(msg => msg.id !== optimisticMessage.id))\n      alert(`Error sending message: ${error.message}`)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault()\n      sendMessage()\n    }\n  }\n\n  const formatTime = (dateString: string) => {\n    const date = new Date(dateString)\n    const now = new Date()\n    const diff = now.getTime() - date.getTime()\n    const minutes = Math.floor(diff / 60000)\n    const hours = Math.floor(minutes / 60)\n    const days = Math.floor(hours / 24)\n\n    if (minutes < 1) return \"Just now\"\n    if (minutes < 60) return `${minutes}m ago`\n    if (hours < 24) return `${hours}h ago`\n    if (days < 7) return `${days}d ago`\n    return date.toLocaleDateString()\n  }\n\n  const handleNavigateToFullPage = () => {\n    setIsNavigating(true)\n    onClose() // Close the modal first\n    // Use Next.js router for instant navigation within the app\n    router.push(`/collaborations/${collaborationId}`)\n    setIsNavigating(false)\n  }\n\n  if (!collaborationId) return null\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[95vh] h-[95vh] p-0 m-2 sm:m-6\">\n        <DialogHeader className=\"border-b pb-4 px-4 sm:px-6 pt-4 sm:pt-6 bg-white rounded-t-lg\">\n          <div className=\"flex items-center justify-between gap-3\">\n            <div className=\"flex items-center gap-2 sm:gap-3 flex-1 min-w-0\">\n              <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0\">\n                <Users className=\"h-5 w-5 sm:h-6 sm:w-6 text-green-600\" />\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <DialogTitle className=\"text-lg sm:text-xl font-bold text-gray-900 truncate\">{collaborationTitle}</DialogTitle>\n                <DialogDescription className=\"text-xs sm:text-sm text-gray-600 mt-1\">\n                  Chat with participants and view collaboration items\n                </DialogDescription>\n                <div className=\"flex flex-wrap items-center gap-1 sm:gap-2 mt-1 sm:mt-2\">\n                  <Badge variant=\"secondary\" className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1\">\n                    <Users className=\"h-3 w-3 mr-1\" />\n                    {participants.length}\n                  </Badge>\n                  {donationSummary && donationSummary.total_count > 0 && (\n                    <Badge variant=\"secondary\" className=\"text-xs bg-green-100 text-green-800 px-2 py-1\">\n                      <Gift className=\"h-3 w-3 mr-1\" />\n                      {donationSummary.total_count}\n                    </Badge>\n                  )}\n                </div>\n              </div>\n            </div>\n            <Button\n              className=\"bg-green-600 hover:bg-green-700 text-white font-medium px-3 py-2 sm:px-4 sm:py-3 flex-shrink-0 min-h-[44px] rounded-xl touch-target-lg\"\n              onClick={handleNavigateToFullPage}\n              disabled={isNavigating}\n            >\n              {isNavigating ? (\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\n              ) : (\n                <>\n                  <ExternalLink className=\"h-4 w-4 sm:mr-2\" />\n                  <span className=\"hidden sm:inline\">View Full Page</span>\n                </>\n              )}\n            </Button>\n          </div>\n        </DialogHeader>\n\n        <div className=\"flex-1 flex flex-col min-h-0\">\n          {/* Chat Area */}\n          <div className=\"flex-1 px-6\">\n            <ScrollArea className=\"h-96 p-4\" ref={scrollAreaRef}>\n              <div className=\"space-y-4\">\n                {messages.map((message) => (\n                  <div\n                    key={message.id}\n                    className={`flex gap-3 ${\n                      message.sender_id === user?.id ? \"justify-end\" : \"justify-start\"\n                    }`}\n                  >\n                    {message.sender_id !== user?.id && (\n                      <div className=\"w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center text-sm font-medium\">\n                        {message.sender_name?.charAt(0) || \"U\"}\n                      </div>\n                    )}\n                    <div\n                      className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                        message.sender_id === user?.id\n                          ? \"bg-green-600 text-white\"\n                          : \"bg-gray-100 text-gray-900\"\n                      }`}\n                    >\n                      <p className=\"text-xs font-medium mb-1 opacity-80\">\n                        {message.sender_id === user?.id ? \"You\" : (message.sender_name || \"Unknown User\")}\n                      </p>\n                      <p className=\"text-sm\">{message.message}</p>\n                      <p className=\"text-xs opacity-70 mt-1\">\n                        {formatTime(message.created_at)}\n                      </p>\n                    </div>\n                    {message.sender_id === user?.id && (\n                      <div className=\"w-8 h-8 bg-green-600 rounded-full flex items-center justify-center text-sm font-medium text-white\">\n                        {message.sender_name?.charAt(0) || \"U\"}\n                      </div>\n                    )}\n                  </div>\n                ))}\n                {messages.length === 0 && (\n                  <div className=\"text-center text-gray-500 py-8\">\n                    <MessageCircle className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n                    <p>No messages yet. Start the conversation!</p>\n                  </div>\n                )}\n              </div>\n            </ScrollArea>\n          </div>\n\n          {/* Message Input */}\n          <div className=\"border-t p-4 sm:p-6 bg-white rounded-b-lg\">\n            <form onSubmit={(e) => {\n              e.preventDefault();\n              sendMessage();\n            }} className=\"flex gap-3\">\n              <Input\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                placeholder=\"Type your message...\"\n                className=\"flex-1 py-3 px-4 text-base sm:text-sm rounded-xl border-2 border-gray-200 focus:border-green-500 transition-colors min-h-[48px] mobile-text-base\"\n                disabled={loading}\n              />\n              <Button \n                type=\"submit\" \n                disabled={loading || !newMessage.trim()}\n                className=\"bg-green-600 hover:bg-green-700 px-4 py-3 min-h-[48px] min-w-[48px] rounded-xl touch-target-lg\"\n              >\n                {loading ? (\n                  <Loader2 className=\"h-5 w-5 animate-spin\" />\n                ) : (\n                  <Send className=\"h-5 w-5\" />\n                )}\n              </Button>\n            </form>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","size_bytes":15160},"components/DatabaseTest.tsx":{"content":"\"use client\"\n\nimport { useState } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\n\nexport default function DatabaseTest() {\n  const { user } = useAuth()\n  const [testing, setTesting] = useState(false)\n  const [results, setResults] = useState<string[]>([])\n\n  const runTests = async () => {\n    setTesting(true)\n    const testResults: string[] = []\n\n    try {\n      // Test 1: Check connection\n      testResults.push(\"🔗 Testing database connection...\")\n      const { data: connectionTest, error: connectionError } = await supabase.from(\"profiles\").select(\"count\").limit(1)\n\n      if (connectionError) {\n        testResults.push(`❌ Connection failed: ${connectionError.message}`)\n      } else {\n        testResults.push(\"✅ Database connection successful\")\n      }\n\n      // Test 2: Check items table\n      testResults.push(\"📦 Testing items table...\")\n      const { data: itemsTest, error: itemsError } = await supabase.from(\"items\").select(\"id\").limit(1)\n\n      if (itemsError) {\n        testResults.push(`❌ Items table error: ${itemsError.message}`)\n\n        // Try food_items table as fallback\n        testResults.push(\"🔄 Trying food_items table...\")\n        const { data: foodTest, error: foodError } = await supabase.from(\"food_items\").select(\"id\").limit(1)\n\n        if (foodError) {\n          testResults.push(`❌ Food_items table error: ${foodError.message}`)\n        } else {\n          testResults.push(\"✅ Food_items table accessible\")\n        }\n      } else {\n        testResults.push(\"✅ Items table accessible\")\n      }\n\n      // Test 3: Check storage\n      testResults.push(\"🖼️ Testing storage...\")\n      const { data: storageTest, error: storageError } = await supabase.storage\n        .from(\"item-images\")\n        .list(\"\", { limit: 1 })\n\n      if (storageError) {\n        testResults.push(`❌ Storage error: ${storageError.message}`)\n      } else {\n        testResults.push(\"✅ Storage accessible\")\n      }\n\n      // Test 4: Check user authentication\n      testResults.push(\"👤 Testing user authentication...\")\n      if (user) {\n        testResults.push(`✅ User authenticated: ${user.email}`)\n      } else {\n        testResults.push(\"❌ User not authenticated\")\n      }\n    } catch (error: any) {\n      testResults.push(`💥 Test failed: ${error.message}`)\n    }\n\n    setResults(testResults)\n    setTesting(false)\n  }\n\n  return (\n    <Card className=\"max-w-2xl mx-auto\">\n      <CardHeader>\n        <CardTitle>Database Connection Test</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <Button onClick={runTests} disabled={testing} className=\"mb-4\">\n          {testing ? \"Running Tests...\" : \"Run Database Tests\"}\n        </Button>\n\n        {results.length > 0 && (\n          <div className=\"space-y-2\">\n            {results.map((result, index) => (\n              <div key={index} className=\"p-2 bg-gray-100 rounded text-sm font-mono\">\n                {result}\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n","size_bytes":3201},"components/EditItemModal.tsx":{"content":"\"use client\"\n\nimport type React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Label } from \"@/components/ui/label\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\n\ninterface Item {\n  id: string\n  title: string\n  description: string | null\n  category: string\n  item_type: \"food\" | \"non-food\"\n  quantity: string\n  condition?: string | null\n  expiry_date: string | null\n  pickup_location: string\n  image_url: string | null\n  status: string\n  created_at: string\n  user_id: string\n  owner_name?: string | null\n}\n\ninterface EditItemModalProps {\n  item: Item | null\n  isOpen: boolean\n  onClose: () => void\n  onItemUpdated: () => void\n}\n\nexport default function EditItemModal({ item, isOpen, onClose, onItemUpdated }: EditItemModalProps) {\n  const { user } = useAuth()\n  const [loading, setLoading] = useState(false)\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    quantity: \"\",\n    condition: \"\",\n    expiry_date: \"\",\n    pickup_location: \"\",\n    status: \"\",\n  })\n  const [imageFile, setImageFile] = useState<File | null>(null)\n\n  useEffect(() => {\n    if (item) {\n      setFormData({\n        title: item.title || \"\",\n        description: item.description || \"\",\n        category: item.category || \"\",\n        quantity: item.quantity || \"\",\n        condition: item.condition || \"\",\n        expiry_date: item.expiry_date || \"\",\n        pickup_location: item.pickup_location || \"\",\n        status: item.status || \"available\",\n      })\n    }\n  }, [item])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!user || !item) {\n      alert(\"Unable to update item\")\n      return\n    }\n\n    // Validate required fields\n    if (!formData.title.trim()) {\n      alert(\"Please enter a title\")\n      return\n    }\n    if (!formData.category) {\n      alert(\"Please select a category\")\n      return\n    }\n    if (!formData.quantity.trim()) {\n      alert(\"Please enter quantity\")\n      return\n    }\n    if (!formData.pickup_location.trim()) {\n      alert(\"Please enter pickup location\")\n      return\n    }\n    if (item.item_type === \"non-food\" && !formData.condition) {\n      alert(\"Please select condition\")\n      return\n    }\n\n    console.log(\"Starting item update...\")\n    console.log(\"Form data:\", formData)\n    console.log(\"Item ID:\", item.id)\n\n    setLoading(true)\n\n    try {\n      let imageUrl = item.image_url\n\n      // Upload new image if provided\n      if (imageFile) {\n        console.log(\"Uploading new image...\")\n        const fileExt = imageFile.name.split(\".\").pop()\n        const fileName = `${user.id}/${Date.now()}.${fileExt}`\n\n        const { error: uploadError } = await supabase.storage.from(\"item-images\").upload(fileName, imageFile)\n\n        if (uploadError) {\n          console.error(\"Upload error:\", uploadError)\n          alert(\"Image upload failed, but item will be updated without new photo\")\n        } else {\n          const {\n            data: { publicUrl },\n          } = supabase.storage.from(\"item-images\").getPublicUrl(fileName)\n          imageUrl = publicUrl\n          console.log(\"New image uploaded successfully:\", imageUrl)\n        }\n      }\n\n      // Prepare update data\n      const updateData = {\n        title: formData.title.trim(),\n        description: formData.description.trim() || null,\n        category: formData.category,\n        quantity: formData.quantity.trim(),\n        condition: item.item_type === \"non-food\" ? formData.condition || null : null,\n        expiry_date: item.item_type === \"food\" && formData.expiry_date ? formData.expiry_date : null,\n        pickup_location: formData.pickup_location.trim(),\n        image_url: imageUrl,\n        status: formData.status,\n      }\n\n      console.log(\"Updating item data:\", updateData)\n\n      // Update item\n      const { data, error } = await supabase\n        .from(\"items\")\n        .update(updateData)\n        .eq(\"id\", item.id)\n        .eq(\"user_id\", user.id) // Ensure user can only update their own items\n        .select()\n\n      if (error) {\n        console.error(\"Database error:\", error)\n        throw error\n      }\n\n      console.log(\"Item updated successfully:\", data)\n\n      onItemUpdated()\n      onClose()\n      alert(`${item.item_type === \"food\" ? \"Food\" : \"Item\"} updated successfully!`)\n    } catch (error: any) {\n      console.error(\"Error updating item:\", error)\n      alert(`Error updating item: ${error.message}`)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getCategories = () => {\n    if (item?.item_type === \"food\") {\n      return [\"fruits\", \"vegetables\", \"grains\", \"dairy\", \"meat\", \"prepared\", \"other\"]\n    } else {\n      return [\"clothing\", \"shoes\", \"household\", \"electronics\", \"books\", \"toys\", \"baby-items\", \"other\"]\n    }\n  }\n\n  const categories = getCategories()\n  const conditions = [\"new\", \"excellent\", \"good\", \"fair\", \"needs-repair\", \"old\"]\n  const statuses = [\"available\", \"requested\", \"reserved\", \"completed\"]\n\n  if (!item) return null\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"text-2xl text-green-700\">\n            Edit {item.item_type === \"food\" ? \"Food\" : \"Item\"}\n          </DialogTitle>\n          <DialogDescription>Update your {item.item_type === \"food\" ? \"food\" : \"item\"} listing</DialogDescription>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"edit-title\">{item.item_type === \"food\" ? \"Food\" : \"Item\"} Title *</Label>\n            <Input\n              id=\"edit-title\"\n              value={formData.title}\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n              placeholder={\n                item.item_type === \"food\" ? \"e.g., Fresh tomatoes, Cooked rice\" : \"e.g., Men's shoes, Baby clothes\"\n              }\n              required\n            />\n          </div>\n\n          <div>\n            <Label htmlFor=\"edit-category\">Category *</Label>\n            <Select\n              value={formData.category}\n              onValueChange={(value) => setFormData({ ...formData, category: value })}\n              required\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select category\" />\n              </SelectTrigger>\n              <SelectContent>\n                {categories.map((category) => (\n                  <SelectItem key={category} value={category}>\n                    {category.charAt(0).toUpperCase() + category.slice(1).replace(\"-\", \" \")}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div>\n            <Label htmlFor=\"edit-quantity\">Quantity *</Label>\n            <Input\n              id=\"edit-quantity\"\n              value={formData.quantity}\n              onChange={(e) => setFormData({ ...formData, quantity: e.target.value })}\n              placeholder={item.item_type === \"food\" ? \"e.g., 2 kg, 5 pieces, 1 bowl\" : \"e.g., 1 pair, 3 pieces, 1 set\"}\n              required\n            />\n          </div>\n\n          {item.item_type === \"non-food\" && (\n            <div>\n              <Label htmlFor=\"edit-condition\">Condition *</Label>\n              <Select\n                value={formData.condition}\n                onValueChange={(value) => setFormData({ ...formData, condition: value })}\n                required\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select condition\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {conditions.map((condition) => (\n                    <SelectItem key={condition} value={condition}>\n                      {condition.charAt(0).toUpperCase() + condition.slice(1).replace(\"-\", \" \")}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          )}\n\n          <div>\n            <Label htmlFor=\"edit-pickup-location\">Pickup Location *</Label>\n            <Input\n              id=\"edit-pickup-location\"\n              value={formData.pickup_location}\n              onChange={(e) => setFormData({ ...formData, pickup_location: e.target.value })}\n              placeholder=\"e.g., Area 25, Lilongwe\"\n              required\n            />\n          </div>\n\n          {item.item_type === \"food\" && (\n            <div>\n              <Label htmlFor=\"edit-expiry-date\">Expiry Date (optional)</Label>\n              <Input\n                id=\"edit-expiry-date\"\n                type=\"date\"\n                value={formData.expiry_date}\n                onChange={(e) => setFormData({ ...formData, expiry_date: e.target.value })}\n              />\n            </div>\n          )}\n\n          <div>\n            <Label htmlFor=\"edit-status\">Status</Label>\n            <Select value={formData.status} onValueChange={(value) => setFormData({ ...formData, status: value })}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select status\" />\n              </SelectTrigger>\n              <SelectContent>\n                {statuses.map((status) => (\n                  <SelectItem key={status} value={status}>\n                    {status.charAt(0).toUpperCase() + status.slice(1)}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div>\n            <Label htmlFor=\"edit-description\">Description</Label>\n            <Textarea\n              id=\"edit-description\"\n              value={formData.description}\n              onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n              placeholder={\n                item.item_type === \"food\"\n                  ? \"Additional details about the food...\"\n                  : \"Additional details about the item...\"\n              }\n              rows={3}\n            />\n          </div>\n\n          <div>\n            <Label htmlFor=\"edit-image\">Update Photo (optional)</Label>\n            <Input\n              id=\"edit-image\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={(e) => setImageFile(e.target.files?.[0] || null)}\n            />\n            {item.image_url && (\n              <p className=\"text-sm text-gray-500 mt-1\">Current photo will be replaced if you upload a new one</p>\n            )}\n          </div>\n\n          <div className=\"flex gap-2 pt-4\">\n            <Button type=\"submit\" className=\"flex-1 bg-green-600 hover:bg-green-700\" disabled={loading}>\n              {loading ? \"Updating...\" : \"Update Item\"}\n            </Button>\n            <Button type=\"button\" variant=\"outline\" onClick={onClose} disabled={loading}>\n              Cancel\n            </Button>\n          </div>\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","size_bytes":11285},"components/ItemList.tsx":{"content":"\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport { useLocation } from \"@/contexts/LocationContext\"\nimport { formatDistance, calculateDistance } from \"@/lib/locationService\"\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { CalendarDays, MapPin, Package, Search, Filter, Plus, Eye, Edit, Trash2, Image as ImageIcon, AlertCircle } from \"lucide-react\"\nimport ClaimFoodModal from \"./ClaimFoodModal\"\nimport EditItemModal from \"./EditItemModal\"\n\ninterface ItemRecord {\n  id: string\n  title: string\n  description: string | null\n  category: string\n  item_type: \"food\" | \"non-food\"\n  quantity: string\n  condition?: string | null\n  expiry_date?: string | null\n  pickup_location: string\n  image_url: string | null\n  user_id: string\n  status: string\n  created_at: string\n  collaboration_id?: string | null\n  latitude?: number | null\n  longitude?: number | null\n  distance?: number\n  profiles?: {\n    full_name: string | null\n    location: string | null\n  }\n}\n\ninterface ItemListProps {\n  itemType: \"food\" | \"non-food\"\n  collaborationId?: string | null\n}\n\n// Utility function to calculate expiry urgency\nconst getExpiryUrgency = (expiryDate: string) => {\n  const now = new Date();\n  const expiry = new Date(expiryDate);\n  const hoursUntilExpiry = (expiry.getTime() - now.getTime()) / (1000 * 60 * 60);\n  \n  if (hoursUntilExpiry < 0) {\n    return { level: 'expired', color: 'red', text: 'Expired' };\n  } else if (hoursUntilExpiry <= 24) {\n    return { level: 'urgent', color: 'red', text: 'Expires today' };\n  } else if (hoursUntilExpiry <= 72) {\n    return { level: 'soon', color: 'amber', text: 'Expires soon' };\n  } else {\n    return { level: 'fresh', color: 'green', text: 'Fresh' };\n  }\n};\n\nexport default function ItemList({ itemType, collaborationId }: ItemListProps) {\n  const { user } = useAuth()\n  const { selectedLocation, locationRadius } = useLocation()\n  const [items, setItems] = useState<ItemRecord[]>([])\n  const [loading, setLoading] = useState(true)\n  const [selectedItem, setSelectedItem] = useState<ItemRecord | null>(null)\n  const [editingItem, setEditingItem] = useState<ItemRecord | null>(null)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [categoryFilter, setCategoryFilter] = useState(\"all\")\n  const [statusFilter, setStatusFilter] = useState(\"all\")\n  const [currentPage, setCurrentPage] = useState(0)\n  const [hasMore, setHasMore] = useState(true)\n  const [profiles, setProfiles] = useState<Record<string, any>>({})\n  const [requestingItems, setRequestingItems] = useState<Set<string>>(new Set())\n  const [requestCounts, setRequestCounts] = useState<Record<string, number>>({})\n\n  const itemsPerPage = 12\n\n  const categories = itemType === \"food\" \n    ? [\"fruits\", \"vegetables\", \"meat\", \"dairy\", \"grains\", \"prepared\", \"other\"]\n    : [\"clothing\", \"shoes\", \"household\", \"electronics\", \"books\", \"toys\", \"baby-items\", \"other\"]\n\n  // Helper function to format category display names\n  const formatCategoryName = (category: string) => {\n    if (category === \"baby-items\") return \"Baby Items\";\n    if (category === \"prepared\") return \"Prepared Food\";\n    return category.charAt(0).toUpperCase() + category.slice(1);\n  };\n\n  useEffect(() => {\n    fetchItems(true)\n  }, [itemType, collaborationId, searchTerm, categoryFilter, statusFilter, selectedLocation, locationRadius])\n\n  const fetchItems = async (reset = false) => {\n    try {\n      const pageToFetch = reset ? 0 : currentPage\n      console.log(`🔍 Fetching ${itemType} items (page ${pageToFetch})...`)\n\n      let query = supabase\n        .from(\"items\")\n        .select(\"*\")\n        .eq(\"item_type\", itemType)\n        .order(\"created_at\", { ascending: false })\n\n      // Add collaboration filtering\n      if (collaborationId) {\n        query = query.eq(\"collaboration_id\", collaborationId)\n      } else {\n        // If not filtering by collaboration, exclude collaboration items\n        query = query.is(\"collaboration_id\", null)\n      }\n\n      if (searchTerm) {\n        query = query.or(`title.ilike.%${searchTerm}%,description.ilike.%${searchTerm}%`)\n      }\n\n      if (categoryFilter !== \"all\") {\n        console.log(`🔍 Filtering by category: ${categoryFilter}`)\n        query = query.eq(\"category\", categoryFilter)\n      }\n\n      if (statusFilter !== \"all\") {\n        query = query.eq(\"status\", statusFilter)\n      }\n\n      // Execute the query first\n      const { data, error } = await query\n        .range(pageToFetch * itemsPerPage, (pageToFetch + 1) * itemsPerPage - 1)\n\n      if (error) throw error\n\n      let filteredData = data || [];\n\n      // Add location-based filtering if location is selected (client-side)\n      if (selectedLocation && selectedLocation.latitude && selectedLocation.longitude) {\n        console.log(`🔍 Filtering by location: ${selectedLocation.latitude}, ${selectedLocation.longitude} (${locationRadius}km radius)`);\n        \n        filteredData = filteredData.filter(item => {\n          if (!item.latitude || !item.longitude) return false;\n          \n          const distance = calculateDistance(\n            selectedLocation.latitude,\n            selectedLocation.longitude,\n            item.latitude,\n            item.longitude\n          );\n          \n          // Add distance to item for display\n          item.distance = distance;\n          \n          return distance <= locationRadius;\n        });\n\n        // Sort by distance\n        filteredData.sort((a, b) => (a.distance || 0) - (b.distance || 0));\n      }\n\n      console.log(`✅ Successfully fetched ${filteredData.length} ${itemType} items`)\n\n      if (reset) {\n        setItems(filteredData)\n        setCurrentPage(0)\n      } else {\n        setItems(prev => [...prev, ...filteredData])\n      }\n\n      setHasMore(filteredData.length === itemsPerPage)\n\n      // Fetch user profiles for items\n      if (filteredData && filteredData.length > 0) {\n        const userIds = [...new Set(filteredData.map(item => item.user_id))]\n        await fetchProfiles(userIds)\n        \n        // Fetch request counts for owner's items\n        if (user) {\n          await fetchRequestCounts(filteredData.filter(item => item.user_id === user.id))\n        }\n      }\n    } catch (error) {\n      console.error(`❌ Error fetching ${itemType} items:`, error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const fetchProfiles = async (userIds: string[]) => {\n    try {\n      console.log(`👥 Fetching profiles for ${userIds.length} users...`)\n      \n      const { data, error } = await supabase\n        .from(\"profiles\")\n        .select(\"id, full_name, location\")\n        .in(\"id\", userIds)\n\n      if (error) throw error\n\n      const profilesMap = (data || []).reduce((acc, profile) => {\n        acc[profile.id] = profile\n        return acc\n      }, {} as Record<string, any>)\n\n      setProfiles(prev => ({ ...prev, ...profilesMap }))\n      console.log(`✅ Successfully fetched ${data?.length || 0} profiles`)\n    } catch (error) {\n      console.error(\"❌ Error fetching profiles:\", error)\n    }\n  }\n\n  const fetchRequestCounts = async (ownerItems: ItemRecord[]) => {\n    try {\n      const itemIds = ownerItems.map(item => item.id)\n      if (itemIds.length === 0) return\n\n      const { data, error } = await supabase\n        .from(\"claims\")\n        .select(\"item_id\")\n        .in(\"item_id\", itemIds)\n        .eq(\"status\", \"pending\")\n\n      if (error) throw error\n\n      const counts = (data || []).reduce((acc, claim) => {\n        acc[claim.item_id] = (acc[claim.item_id] || 0) + 1\n        return acc\n      }, {} as Record<string, number>)\n\n      setRequestCounts(counts)\n    } catch (error) {\n      console.error(\"❌ Error fetching request counts:\", error)\n    }\n  }\n\n  const loadMore = () => {\n    if (!loading && hasMore) {\n      setCurrentPage(prev => prev + 1)\n      fetchItems(false)\n    }\n  }\n\n  const handleItemClaimed = () => {\n    fetchItems(true)\n    setSelectedItem(null)\n  }\n\n  const handleItemUpdated = () => {\n    fetchItems(true)\n    setEditingItem(null)\n  }\n\n  const handleDeleteItem = async (itemId: string) => {\n    if (!user) return\n\n    try {\n      const { error } = await supabase\n        .from(\"items\")\n        .delete()\n        .eq(\"id\", itemId)\n        .eq(\"user_id\", user.id)\n\n      if (error) throw error\n\n      fetchItems(true)\n    } catch (error) {\n      console.error(\"❌ Error deleting item:\", error)\n      alert(\"Failed to delete item\")\n    }\n  }\n\n  const filteredItems = items\n\n  if (loading && currentPage === 0) {\n    return (\n      <div className=\"space-y-4\">\n        {[...Array(6)].map((_, i) => (\n          <Card key={i} className=\"animate-pulse\">\n            <CardContent className=\"p-4\">\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n              <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Search and Filters - Mobile Optimized */}\n      <div className=\"space-y-4\">\n        {/* Search Bar - Full Width on Mobile */}\n        <div className=\"relative\">\n          <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n          <Input\n            placeholder={`Search ${itemType} items...`}\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-12 pr-4 py-4 text-base mobile-text-base rounded-xl border-2 border-gray-200 focus:border-green-500 transition-colors w-full\"\n          />\n        </div>\n        \n        {/* Filters - Horizontal Scroll on Mobile */}\n        <div className=\"flex gap-3 overflow-x-auto pb-2 scrollbar-hide md:justify-start\">\n          <Select value={categoryFilter} onValueChange={setCategoryFilter}>\n            <SelectTrigger className=\"min-w-[140px] h-12 px-4 rounded-xl border-2 border-gray-200 bg-white hover:border-green-300 transition-colors\">\n              <SelectValue placeholder=\"Category\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Categories</SelectItem>\n              {categories.map(category => (\n                <SelectItem key={category} value={category}>{formatCategoryName(category)}</SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n\n          <Select value={statusFilter} onValueChange={setStatusFilter}>\n            <SelectTrigger className=\"min-w-[120px] h-12 px-4 rounded-xl border-2 border-gray-200 bg-white hover:border-green-300 transition-colors\">\n              <SelectValue placeholder=\"Status\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Status</SelectItem>\n              <SelectItem value=\"available\">Available</SelectItem>\n              <SelectItem value=\"requested\">Requested</SelectItem>\n              <SelectItem value=\"reserved\">Reserved</SelectItem>\n              <SelectItem value=\"completed\">Completed</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n\n      {/* Items Grid */}\n      {filteredItems.length === 0 ? (\n        <Card>\n          <CardContent className=\"p-8 text-center\">\n            <Package className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              No {itemType} items found\n            </h3>\n            <p className=\"text-gray-600\">\n              {collaborationId \n                ? \"No items have been shared with this collaboration yet.\"\n                : `No ${itemType} items match your current filters.`\n              }\n            </p>\n          </CardContent>\n        </Card>\n      ) : (\n        <>\n          {/* Mobile: Vertical Feed Layout */}\n          <div className=\"lg:hidden space-y-3\">\n            {filteredItems.map((item) => {\n              // Precompute urgency to avoid IIFE in JSX\n              const urgency = item.expiry_date ? getExpiryUrgency(item.expiry_date) : null;\n              \n              return (\n              <Card key={item.id} className=\"group overflow-hidden hover:shadow-xl transition-all duration-300 cursor-pointer border border-gray-200 hover:border-green-300 bg-white rounded-3xl relative\">\n                <div className=\"flex h-24\">\n                  {/* Image Section - Fixed 4:3 aspect ratio */}\n                  <div className=\"relative w-32 h-24 flex-shrink-0 overflow-hidden rounded-l-3xl bg-gradient-to-br from-gray-50 to-gray-100\">\n                    {item.image_url ? (\n                      <img\n                        src={item.image_url}\n                        alt={item.title}\n                        className=\"object-cover object-center w-full h-full group-hover:scale-110 transition-transform duration-300\"\n                        loading=\"lazy\"\n                        onError={(e) => {\n                          const target = e.target as HTMLImageElement;\n                          target.style.display = 'none';\n                          target.parentElement!.innerHTML = '<div class=\"flex items-center justify-center h-full text-gray-400 text-xs font-medium\">No image</div>';\n                        }}\n                      />\n                    ) : (\n                      <div className=\"flex items-center justify-center h-full text-gray-400\">\n                        <div className=\"text-center\">\n                          <ImageIcon className=\"h-8 w-8 mx-auto mb-1 text-gray-300\" />\n                          <span className=\"text-xs font-medium\">No image</span>\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* Status Indicator - More prominent */}\n                    <div className=\"absolute top-2 left-2\">\n                      <div className={`w-4 h-4 rounded-full border-2 border-white shadow-lg ${\n                        item.status === 'available' ? 'bg-green-500' :\n                        item.status === 'requested' ? 'bg-amber-500' :\n                        item.status === 'reserved' ? 'bg-blue-500' :\n                        'bg-gray-500'\n                      }`}></div>\n                    </div>\n                    \n                    {/* Distance Badge - More prominent */}\n                    {item.distance !== undefined && (\n                      <div className=\"absolute top-2 right-2\">\n                        <div className=\"bg-blue-600 text-white text-sm px-3 py-1 rounded-full font-bold shadow-lg border-2 border-white\">\n                          {formatDistance(item.distance)}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Content Section */}\n                  <div className=\"flex-1 p-4 pb-14 pr-24 flex flex-col justify-between\">\n                    {/* Top Section - Title & Category */}\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-start justify-between gap-2\">\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-bold text-lg text-gray-900 line-clamp-2 leading-tight group-hover:text-green-700 transition-colors\">\n                            {item.title}\n                          </h3>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center gap-2\">\n                        <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800 text-xs font-medium\">\n                          {item.category}\n                        </Badge>\n                        <Badge \n                          variant={item.status === 'available' ? 'default' : 'secondary'}\n                          className={`text-xs font-medium ${\n                            item.status === 'available' ? 'bg-green-500 text-white' :\n                            item.status === 'requested' ? 'bg-amber-100 text-amber-800' :\n                            item.status === 'reserved' ? 'bg-blue-100 text-blue-800' :\n                            'bg-gray-100 text-gray-800'\n                          }`}\n                        >\n                          {item.status}\n                        </Badge>\n                        {/* Separate requests indicator */}\n                        {item.status === 'available' && requestCounts[item.id] > 0 && (\n                          <Badge className=\"text-xs font-bold bg-amber-100 text-amber-800 animate-pulse\">\n                            {requestCounts[item.id]} requests\n                          </Badge>\n                        )}\n                      </div>\n                      \n                      {/* Key Info Row with Urgency */}\n                      <div className=\"flex items-center gap-2 flex-wrap\">\n                        {/* Quantity */}\n                        <div className=\"flex items-center gap-1 bg-gray-100 px-2 py-1 rounded-full\">\n                          <Package className=\"h-3 w-3 text-gray-600\" />\n                          <span className=\"text-xs font-medium text-gray-700\">{item.quantity}</span>\n                        </div>\n                        \n                        {/* Condition for non-food items */}\n                        {item.condition && (\n                          <Badge variant=\"outline\" className=\"text-xs px-2 py-1 bg-blue-50 text-blue-700 border-blue-200\">\n                            {item.condition}\n                          </Badge>\n                        )}\n                        \n                        {/* Expiry with urgency colors for food items */}\n                        {urgency && (\n                          <div className={`flex items-center gap-1 px-2 py-1 rounded-full text-xs font-bold ${\n                            urgency.color === 'red' ? 'bg-red-100 text-red-700 border border-red-200' :\n                            urgency.color === 'amber' ? 'bg-amber-100 text-amber-700 border border-amber-200' :\n                            'bg-green-100 text-green-700 border border-green-200'\n                          }`}>\n                            {urgency.color === 'red' && <AlertCircle className=\"h-3 w-3\" />}\n                            {urgency.color === 'amber' && <CalendarDays className=\"h-3 w-3\" />}\n                            {urgency.color === 'green' && <CalendarDays className=\"h-3 w-3\" />}\n                            <span>{urgency.text}</span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    \n                    {/* Bottom Section - Location & Owner */}\n                    <div className=\"space-y-1 mt-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-1 text-xs text-gray-600\">\n                          <MapPin className=\"h-3 w-3 shrink-0\" />\n                          <span className=\"truncate font-medium\">{item.pickup_location}</span>\n                        </div>\n                        <span className=\"text-xs text-gray-500\">\n                          {new Date(item.created_at).toLocaleDateString()}\n                        </span>\n                      </div>\n                      <p className=\"text-xs text-gray-500\">\n                        By {profiles[item.user_id]?.full_name || 'Unknown'}\n                      </p>\n                    </div>\n                  </div>\n                  \n                  {/* Single Primary CTA */}\n                  <div className=\"absolute bottom-3 right-3\">\n                    {user && user.id !== item.user_id && item.status === 'available' ? (\n                      <Button \n                        onClick={(e) => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          setRequestingItems(prev => new Set(prev).add(item.id));\n                          setSelectedItem(item);\n                          \n                          setTimeout(() => {\n                            setRequestingItems(prev => {\n                              const newSet = new Set(prev);\n                              newSet.delete(item.id);\n                              return newSet;\n                            });\n                          }, 2000);\n                        }}\n                        className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-full min-h-[40px] shadow-lg hover:shadow-xl transition-all duration-200 border-2 border-white\"\n                        disabled={requestingItems.has(item.id)}\n                      >\n                        {requestingItems.has(item.id) ? \"...\" : \"Claim\"}\n                      </Button>\n                    ) : user && user.id === item.user_id ? (\n                      <div className=\"flex gap-2\">\n                        <Button \n                          onClick={(e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setEditingItem(item);\n                          }}\n                          variant=\"outline\"\n                          className=\"bg-white hover:bg-gray-50 border-gray-300 hover:border-green-500 text-gray-700 hover:text-green-700 font-medium py-2 px-3 rounded-full shadow-lg\"\n                        >\n                          <Edit className=\"h-4 w-4\" />\n                        </Button>\n                        <Button \n                          onClick={(e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (confirm('Are you sure you want to delete this item?')) {\n                              handleDeleteItem(item.id)\n                            }\n                          }}\n                          variant=\"outline\"\n                          className=\"bg-white hover:bg-red-50 border-gray-300 hover:border-red-500 text-gray-700 hover:text-red-700 font-medium py-2 px-3 rounded-full shadow-lg\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n              </Card>\n              );\n            })}\n          </div>\n\n          {/* Desktop: Grid Layout */}\n          <div className=\"hidden lg:grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 sm:gap-6\">\n            {filteredItems.map((item) => (\n              <Card key={item.id} className=\"group overflow-hidden hover:shadow-lg hover:scale-105 transition-all duration-300 cursor-pointer border-2 hover:border-green-200 w-full max-w-[308px] mx-auto relative\">\n                {/* Visual Enhancement: Gradient Overlay */}\n                <div className=\"absolute inset-0 bg-gradient-to-br from-green-500/10 via-transparent to-blue-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none z-10\"></div>\n                \n                {/* Visual Enhancement: Corner Accent */}\n                <div className=\"absolute top-0 right-0 w-0 h-0 border-l-[20px] border-l-transparent border-t-[20px] border-t-green-400 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                \n                <div className=\"relative h-40 w-full overflow-hidden rounded-t-lg bg-gradient-to-br from-gray-50 to-gray-100\">\n                  {item.image_url ? (\n                    <img\n                      src={item.image_url}\n                      alt={item.title}\n                      className=\"object-cover object-center w-full h-full group-hover:scale-110 transition-transform duration-300\"\n                      onError={(e) => {\n                        const target = e.target as HTMLImageElement;\n                        target.style.display = 'none';\n                        target.parentElement!.innerHTML = '<div class=\"flex items-center justify-center h-full text-gray-400\"><span>Image not available</span></div>';\n                      }}\n                    />\n                  ) : (\n                    <div className=\"flex items-center justify-center h-full text-gray-400\">\n                      <div className=\"text-center\">\n                        <ImageIcon className=\"h-8 w-8 mx-auto mb-1 text-gray-300\" />\n                        <span className=\"text-xs\">No image</span>\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Visual Enhancement: Status Indicator */}\n                  <div className=\"absolute top-2 left-2\">\n                    <div className={`w-3 h-3 rounded-full border-2 border-white shadow-sm ${\n                      item.status === 'available' ? 'bg-green-500' :\n                      item.status === 'requested' ? 'bg-yellow-500' :\n                      item.status === 'reserved' ? 'bg-blue-500' :\n                      'bg-gray-500'\n                    }`}></div>\n                  </div>\n                  \n                  {/* Visual Enhancement: Distance Badge */}\n                  {item.distance !== undefined && (\n                    <div className=\"absolute top-2 right-2\">\n                      <div className=\"bg-white/90 backdrop-blur-sm text-blue-700 text-xs px-2 py-1 rounded-full font-medium shadow-sm\">\n                        {formatDistance(item.distance)}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <CardHeader className=\"p-3 pb-2\">\n                  <div className=\"flex justify-between items-start\">\n                    <div className=\"flex-1 relative group\">\n                      <CardTitle className=\"text-sm font-semibold flex items-center gap-1 line-clamp-2 group-hover:line-clamp-none\">\n                        {item.title}\n                        {requestCounts[item.id] > 0 && (\n                          <span className=\"ml-1 inline-flex items-center justify-center px-1 py-0.5 rounded-full text-xs font-semibold bg-yellow-200 text-yellow-800 animate-pulse\">\n                            {requestCounts[item.id]}\n                          </span>\n                        )}\n                      </CardTitle>\n                      <div className=\"absolute hidden group-hover:block bg-black text-white text-xs p-2 rounded shadow-lg z-10 mt-1 whitespace-normal max-w-xs\">\n                        {item.title}\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col gap-1 shrink-0\">\n                      <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800 text-xs\">\n                        {item.category}\n                      </Badge>\n                    <Badge \n                      variant={item.status === 'available' ? 'default' : 'secondary'}\n                        className={`text-xs ${\n                        item.status === 'available' ? 'bg-green-100 text-green-800' :\n                        item.status === 'requested' ? 'bg-yellow-100 text-yellow-800' :\n                        item.status === 'reserved' ? 'bg-blue-100 text-blue-800' :\n                        'bg-gray-100 text-gray-800'\n                      }`}\n                    >\n                      {item.status === 'available' && requestCounts[item.id] > 0 \n                        ? `Requested (${requestCounts[item.id]})` \n                        : item.status}\n                    </Badge>\n                  </div>\n                  </div>\n                  <div className=\"relative group\">\n                    <CardDescription className=\"line-clamp-2 text-xs leading-tight group-hover:line-clamp-none\">\n                        {item.description}\n                    </CardDescription>\n                    <div className=\"absolute hidden group-hover:block bg-black text-white text-xs p-2 rounded shadow-lg z-10 mt-1 whitespace-normal max-w-xs\">\n                        {item.description}\n                      </div>\n                    </div>\n                </CardHeader>\n                <CardContent className=\"space-y-2 p-3 pt-0\">\n                  <div className=\"flex items-center gap-1 text-xs text-gray-600 relative group\">\n                    <MapPin className=\"h-4 w-4 shrink-0\" />\n                    <span className=\"truncate group-hover:overflow-visible\">{item.pickup_location}</span>\n                    <div className=\"absolute hidden group-hover:block bg-black text-white text-xs p-2 rounded shadow-lg z-10 mt-6 whitespace-nowrap\">\n                      {item.pickup_location}\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-between items-center text-xs\">\n                    <div className=\"flex items-center gap-1\">\n                      <Package className=\"h-4 w-4\" />\n                      <span className=\"font-medium\">{item.quantity}</span>\n                    </div>\n                    {item.condition && (\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {item.condition}\n                      </Badge>\n                    )}\n                  </div>\n\n                  {item.expiry_date && (\n                    <div className=\"flex items-center gap-1 text-orange-600 text-xs\">\n                      <CalendarDays className=\"h-4 w-4\" />\n                      <span>Expires: {new Date(item.expiry_date).toLocaleDateString()}</span>\n                    </div>\n                  )}\n\n                  <div className=\"text-xs text-gray-500\">\n                    <span className=\"block\">\n                      By {profiles[item.user_id]?.full_name || 'Unknown'} • {new Date(item.created_at).toLocaleDateString()}\n                    </span>\n                  </div>\n\n                  <div className=\"flex gap-1 pt-2\">\n                    {user && user.id !== item.user_id && item.status === 'available' && (\n                      <Button \n                        onClick={(e) => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          setRequestingItems(prev => new Set(prev).add(item.id));\n                          setSelectedItem(item);\n                          \n                          // Remove loading state after a delay\n                          setTimeout(() => {\n                            setRequestingItems(prev => {\n                              const newSet = new Set(prev);\n                              newSet.delete(item.id);\n                              return newSet;\n                            });\n                          }, 2000);\n                        }}\n                        className=\"flex-1 text-xs py-2 h-auto bg-green-600 hover:bg-green-700 text-white disabled:opacity-50 transform hover:scale-105 transition-all duration-200\"\n                        size=\"sm\"\n                        disabled={requestingItems.has(item.id)}\n                      >\n                        <Plus className=\"h-4 w-4 mr-1\" />\n                        {requestingItems.has(item.id) ? \"Requesting...\" : \"Request\"}\n                      </Button>\n                    )}\n                    \n                    {user && user.id === item.user_id && (\n                      <>\n                        <Button \n                          onClick={() => setEditingItem(item)}\n                          variant=\"outline\"\n                          size=\"sm\"\n                          className=\"flex-1 text-xs py-2 h-auto hover:scale-105 transition-all duration-200\"\n                        >\n                          <Edit className=\"h-4 w-4 mr-1\" />\n                          Edit\n                        </Button>\n                        <Button \n                          onClick={() => {\n                            if (confirm('Are you sure you want to delete this item?')) {\n                              handleDeleteItem(item.id)\n                            }\n                          }}\n                          variant=\"outline\"\n                          size=\"sm\"\n                          className=\"text-red-600 hover:text-red-700 text-xs py-2 h-auto px-3 hover:scale-105 transition-all duration-200\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {hasMore && (\n            <div className=\"text-center\">\n              <Button \n                onClick={loadMore}\n                variant=\"outline\"\n                disabled={loading}\n              >\n                {loading ? \"Loading...\" : \"Load More\"}\n              </Button>\n            </div>\n          )}\n        </>\n      )}\n\n      {/* Modals */}\n      {selectedItem && (\n        <ClaimFoodModal\n          foodItem={{\n            ...selectedItem,\n            owner_name: profiles[selectedItem.user_id]?.full_name\n          }}\n          isOpen={!!selectedItem}\n          onClose={() => setSelectedItem(null)}\n          onClaimed={handleItemClaimed}\n        />\n      )}\n\n      {editingItem && (\n        <EditItemModal\n          item={{\n            ...editingItem,\n            expiry_date: editingItem.expiry_date || null\n          }}\n          isOpen={!!editingItem}\n          onClose={() => setEditingItem(null)}\n          onItemUpdated={handleItemUpdated}\n        />\n      )}\n    </div>\n  )\n}","size_bytes":33925},"components/LandingPage.tsx":{"content":"\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { ArrowRight, MessageCircle, MapPin, Heart, Users, Globe, Sparkles } from \"lucide-react\"\nimport { useEffect, useState, useRef } from \"react\"\nimport SubmitStoryModal from \"./SubmitStoryModal\"\nimport { supabase } from \"@/lib/supabase\"\n// Authentic images of African people sharing and community building\nconst HERO_IMAGE_URL = \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?auto=format&fit=crop&w=1200&q=80\" // African community sharing\n// Slideshow images for hero background featuring African community sharing and sustainable practices\nconst HERO_IMAGES = [\n  \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?auto=format&fit=crop&w=1200&q=80\", // African community sharing food\n  \"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=1200&q=80\", // Black family sharing meal\n  \"https://images.unsplash.com/photo-1593113598332-cd288d649433?auto=format&fit=crop&w=1200&q=80\", // African women preparing food together\n  \"https://images.unsplash.com/photo-1528740561666-dc2479dc08ab?auto=format&fit=crop&w=1200&q=80\", // Community gathering with food\n  \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?auto=format&fit=crop&w=1200&q=80\", // African people sharing traditional meal\n]\nconst HERO_IMAGE_ALT = \"African people sharing food and building community together\"\n\ninterface LandingPageProps {\n  onGetStarted: () => void\n}\n\nconst dummyStories = [\n  {\n    name: \"Mercy\",\n    location: \"Blantyre\",\n    story: \"I had leftover nsima and vegetables from our family dinner. Posted on Tigawane—they were picked up within an hour by a neighbor who needed a meal!\",\n    color: \"green\"\n  },\n  {\n    name: \"Dan\",\n    location: \"Lilongwe\",\n    story: \"My son outgrew his school shoes. Instead of throwing them away, I shared them on Tigawane. Now they help another child walk to school every day.\",\n    color: \"blue\"\n  },\n  {\n    name: \"Grace\",\n    location: \"Mzuzu\",\n    story: \"We had extra sweet potatoes from our garden. Rather than let them go bad, I shared them with 3 families in our area through Tigawane.\",\n    color: \"orange\"\n  },\n  {\n    name: \"Patrick\",\n    location: \"Zomba\",\n    story: \"My wife packed some clothes our children had outgrown. A mother picked them up for her twins—it made her whole week!\",\n    color: \"purple\"\n  }\n]\n\nexport default function LandingPage({ onGetStarted }: LandingPageProps) {\n  const [stories, setStories] = useState<any[]>([])\n  const [modalOpen, setModalOpen] = useState(false)\n  const [currentImageIndex, setCurrentImageIndex] = useState(0)\n  const [isVisible, setIsVisible] = useState(false)\n  const heroRef = useRef<HTMLDivElement>(null)\n  const sectionRefs = useRef<(HTMLElement | null)[]>([])\n\n  // For demo, both CTAs use onGetStarted. You can wire to different actions if needed.\n  useEffect(() => {\n    async function fetchStories() {\n      const { data, error } = await supabase\n        .from(\"stories\")\n        .select(\"*\")\n        .eq(\"status\", \"approved\")\n        .order(\"created_at\", { ascending: false })\n        .limit(4)\n      if (data && data.length > 0) {\n        setStories(data)\n      } else {\n        setStories(dummyStories)\n      }\n    }\n    fetchStories()\n  }, [])\n\n  // Hero image slideshow\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentImageIndex((prev) => (prev + 1) % HERO_IMAGES.length)\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [])\n\n  // Intersection Observer for animations\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add('animate-fade-in-up')\n          }\n        })\n      },\n      { threshold: 0.1, rootMargin: '0px 0px -50px 0px' }\n    )\n\n    sectionRefs.current.forEach((ref) => {\n      if (ref) observer.observe(ref)\n    })\n\n    return () => observer.disconnect()\n  }, [])\n\n  // Initial animation trigger\n  useEffect(() => {\n    setIsVisible(true)\n  }, [])\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50 overflow-x-hidden relative\">\n      {/* Global Background Pattern */}\n      <div className=\"fixed inset-0 opacity-5 pointer-events-none\">\n        <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-br from-green-100 to-blue-100\"></div>\n      </div>\n      {/* Header */}\n      <header className={`w-full bg-white/95 backdrop-blur-md shadow-lg border-b border-gray-200/50 py-4 px-6 flex items-center justify-between sticky top-0 z-50 transition-all duration-500 ${isVisible ? 'translate-y-0 opacity-100' : '-translate-y-full opacity-0'}`}>\n        <div className=\"flex items-center gap-3 group cursor-pointer\">\n          <div className=\"relative\">\n            <span className=\"text-2xl sm:text-3xl transform group-hover:scale-110 group-hover:rotate-12 transition-all duration-300 filter drop-shadow-sm\">\n              🤝\n            </span>\n            <div className=\"absolute -inset-2 bg-green-600/20 rounded-full opacity-0 group-hover:opacity-100 transition-all duration-500 blur-sm scale-110\"></div>\n            <Sparkles className=\"absolute -top-1 -right-1 w-3 h-3 text-yellow-400 opacity-0 group-hover:opacity-100 transition-all duration-300 animate-pulse\" />\n          </div>\n          <div className=\"flex flex-col\">\n            <h1 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-green-700 drop-shadow-sm group-hover:text-green-800 transition-all duration-300 group-hover:scale-105\">\n              Tigawane\n            </h1>\n            <p className=\"text-xs text-green-600 hidden sm:block font-medium group-hover:text-green-700 transition-colors duration-300\">\n              Share • Connect • Care\n            </p>\n          </div>\n        </div>\n        \n        {/* Navigation Menu */}\n        <nav className=\"hidden md:flex items-center gap-8\">\n          <a href=\"#how-it-works\" className=\"text-gray-600 hover:text-green-600 transition-colors duration-300 font-medium\">How It Works</a>\n          <a href=\"#what-to-share\" className=\"text-gray-600 hover:text-green-600 transition-colors duration-300 font-medium\">What to Share</a>\n          <a href=\"#stories\" className=\"text-gray-600 hover:text-green-600 transition-colors duration-300 font-medium\">Stories</a>\n          <Button \n            onClick={onGetStarted}\n            size=\"sm\"\n            className=\"bg-green-600 hover:bg-green-700 text-white font-medium px-6 py-2 rounded-full shadow-md hover:shadow-lg transition-all duration-300\"\n          >\n            Get Started\n          </Button>\n        </nav>\n\n        {/* Mobile Menu Button */}\n        <div className=\"md:hidden\">\n          <Button \n            onClick={onGetStarted}\n            size=\"sm\"\n            className=\"bg-green-600 hover:bg-green-700 text-white font-medium px-4 py-2 rounded-full shadow-md hover:shadow-lg transition-all duration-300\"\n          >\n            Start Sharing\n          </Button>\n        </div>\n      </header>\n      {/* Hero Section */}\n      <section ref={heroRef} className=\"relative bg-gradient-to-r from-green-600 to-blue-500 text-white min-h-[80vh] flex items-center justify-center overflow-hidden\">\n        {/* Animated Background */}\n        <div className=\"absolute inset-0\">\n          {HERO_IMAGES.map((image, index) => (\n            <div\n              key={index}\n              className={`absolute inset-0 bg-cover bg-center bg-no-repeat transition-all duration-1000 ${\n                index === currentImageIndex ? 'opacity-100 scale-100' : 'opacity-0 scale-110'\n              }`}\n              style={{ backgroundImage: `url(${image})` }}\n            />\n          ))}\n          <div className=\"absolute inset-0 bg-gradient-to-r from-green-600/80 to-blue-500/80\" />\n        </div>\n\n        {/* Floating Elements */}\n        <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n          <div className=\"absolute top-20 left-10 w-20 h-20 bg-white/10 rounded-full animate-bounce\" style={{ animationDelay: '0s', animationDuration: '3s' }} />\n          <div className=\"absolute top-40 right-20 w-16 h-16 bg-yellow-400/20 rounded-full animate-bounce\" style={{ animationDelay: '1s', animationDuration: '4s' }} />\n          <div className=\"absolute bottom-40 left-20 w-12 h-12 bg-white/15 rounded-full animate-bounce\" style={{ animationDelay: '2s', animationDuration: '5s' }} />\n          <Heart className=\"absolute top-32 right-32 w-8 h-8 text-white/30 animate-pulse\" style={{ animationDelay: '0.5s' }} />\n          <Users className=\"absolute bottom-32 right-16 w-6 h-6 text-white/40 animate-pulse\" style={{ animationDelay: '1.5s' }} />\n          <Globe className=\"absolute top-60 left-32 w-7 h-7 text-white/25 animate-pulse\" style={{ animationDelay: '2.5s' }} />\n        </div>\n\n        <div className={`max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-24 flex flex-col items-center justify-center text-center space-y-10 relative z-10 transition-all duration-1000 ${isVisible ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'}`}>\n          <div className=\"space-y-6\">\n            <h1 className=\"text-5xl md:text-7xl lg:text-8xl font-bold mb-6 drop-shadow-lg animate-fade-in-up leading-tight\" style={{ animationDelay: '0.2s' }}>\n              <span className=\"block text-yellow-300\">Tigawane</span>\n              Community Sharing\n            </h1>\n            <p className=\"text-xl md:text-2xl lg:text-3xl max-w-3xl mx-auto text-white/90 mb-10 drop-shadow animate-fade-in-up leading-relaxed\" style={{ animationDelay: '0.4s' }}>\n              Connect with your neighbors to share food, items, and experiences. \n              <span className=\"block mt-2 text-green-200 font-semibold\">Build stronger communities through generous sharing.</span>\n            </p>\n          </div>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center animate-fade-in-up\" style={{ animationDelay: '0.6s' }}>\n            <Button\n              onClick={onGetStarted}\n              size=\"lg\"\n              className=\"bg-yellow-400 hover:bg-yellow-500 text-black font-bold text-xl px-10 py-6 shadow-lg rounded-full transform hover:scale-105 hover:shadow-xl transition-all duration-300 group min-w-[240px]\"\n            >\n              <span className=\"mr-3 text-2xl\">🍽️</span>\n              Browse Nearby Food\n            </Button>\n            <Button\n              onClick={onGetStarted}\n              size=\"lg\"\n              variant=\"outline\"\n              className=\"border-white text-white hover:bg-white hover:text-green-600 font-bold text-xl px-10 py-6 shadow-lg rounded-full transform hover:scale-105 hover:shadow-xl transition-all duration-300 backdrop-blur-sm min-w-[240px]\"\n            >\n              <ArrowRight className=\"mr-3 h-6 w-6\" />\n              Share an Item\n            </Button>\n          </div>\n\n          {/* Community Stats */}\n          <div className=\"flex flex-wrap justify-center gap-8 text-center mt-12 animate-fade-in-up\" style={{ animationDelay: '0.8s' }}>\n            <div className=\"flex flex-col items-center\">\n              <div className=\"text-4xl font-bold text-yellow-300 mb-2 drop-shadow-lg\">50+</div>\n              <div className=\"text-sm text-white/90 font-medium\">Items Shared</div>\n            </div>\n            <div className=\"flex flex-col items-center\">\n              <div className=\"text-4xl font-bold text-green-300 mb-2 drop-shadow-lg\">20+</div>\n              <div className=\"text-sm text-white/90 font-medium\">Community Members</div>\n            </div>\n            <div className=\"flex flex-col items-center\">\n              <div className=\"text-4xl font-bold text-blue-300 mb-2 drop-shadow-lg\">2</div>\n              <div className=\"text-sm text-white/90 font-medium\">Active Collaborations</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Scroll Indicator */}\n        <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce\">\n          <div className=\"w-6 h-10 border-2 border-white/50 rounded-full flex justify-center\">\n            <div className=\"w-1 h-3 bg-white/70 rounded-full mt-2 animate-pulse\"></div>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Sections - Near You & Trending */}\n      <section className=\"py-16 bg-gradient-to-br from-gray-50 to-white relative overflow-hidden\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 space-y-12\">\n          {/* Near You Section */}\n          <div className=\"bg-white rounded-2xl p-8 border border-gray-100 shadow-xl\">\n            <div className=\"flex items-center justify-between mb-8\">\n              <div className=\"flex items-center gap-4\">\n                <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl flex items-center justify-center\">\n                  <span className=\"text-white text-2xl\">📍</span>\n                </div>\n                <div>\n                  <h2 className=\"text-3xl font-bold text-gray-900\">Near You</h2>\n                  <p className=\"text-gray-600 text-lg\">Fresh items within walking distance</p>\n                </div>\n              </div>\n              <Button\n                onClick={onGetStarted}\n                variant=\"outline\"\n                className=\"text-blue-600 border-blue-200 hover:bg-blue-50 px-6 py-3 font-semibold\"\n              >\n                View All\n              </Button>\n            </div>\n            \n            {/* Horizontal Scroll Cards */}\n            <div className=\"flex gap-6 overflow-x-auto pb-4 scrollbar-hide\">\n              {[\n                { emoji: \"🥐\", title: \"Fresh Croissants\", distance: \"0.2km\", type: \"Food\", color: \"orange\" },\n                { emoji: \"📚\", title: \"Study Books\", distance: \"0.5km\", type: \"Items\", color: \"purple\" },\n                { emoji: \"🍎\", title: \"Apple Harvest\", distance: \"0.8km\", type: \"Food\", color: \"green\" },\n                { emoji: \"👶\", title: \"Baby Clothes\", distance: \"1.1km\", type: \"Items\", color: \"pink\" },\n                { emoji: \"🥕\", title: \"Fresh Vegetables\", distance: \"1.3km\", type: \"Food\", color: \"orange\" }\n              ].map((item, index) => (\n                <button\n                  key={index}\n                  className=\"flex-shrink-0 w-56 bg-gradient-to-br from-gray-50 to-gray-100 rounded-xl p-6 border border-gray-200 hover:shadow-lg transition-all duration-300 cursor-pointer hover:scale-105 text-left focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  onClick={onGetStarted}\n                >\n                  <div className=\"text-4xl mb-4\">{item.emoji}</div>\n                  <h3 className=\"font-semibold text-gray-900 mb-3 text-lg\">{item.title}</h3>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600 font-medium\">{item.distance} away</span>\n                    <div className={`px-3 py-1 rounded-full text-sm font-medium ${\n                      item.color === 'orange' ? 'bg-orange-100 text-orange-700' :\n                      item.color === 'purple' ? 'bg-purple-100 text-purple-700' :\n                      item.color === 'green' ? 'bg-green-100 text-green-700' :\n                      'bg-pink-100 text-pink-700'\n                    }`}>\n                      {item.type}\n                    </div>\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n\n          {/* Trending Section */}\n          {/*\n          <div className=\"bg-white rounded-2xl p-8 border border-gray-100 shadow-xl\">\n            <div className=\"flex items-center justify-between mb-8\">\n              <div className=\"flex items-center gap-4\">\n                <div className=\"w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-600 rounded-xl flex items-center justify-center\">\n                  <span className=\"text-white text-2xl\">🔥</span>\n                </div>\n                <div>\n                  <h2 className=\"text-3xl font-bold text-gray-900\">Trending</h2>\n                  <p className=\"text-gray-600 text-lg\">Popular items in your community</p>\n                </div>\n              </div>\n              <Button\n                onClick={onGetStarted}\n                variant=\"outline\"\n                className=\"text-green-600 border-green-200 hover:bg-green-50 px-6 py-3 font-semibold\"\n              >\n                Join Community\n              </Button>\n            </div>\n            \n            // Horizontal Scroll Cards\n            <div className=\"flex gap-6 overflow-x-auto pb-4 scrollbar-hide\">\n              {[\n                { emoji: \"🍕\", title: \"Community Pizza Night\", users: \"12\", type: \"Collaboration\", color: \"purple\" },\n                { emoji: \"🧸\", title: \"Kids Toy Exchange\", users: \"8\", type: \"Items\", color: \"pink\" },\n                { emoji: \"🌿\", title: \"Garden Share\", users: \"15\", type: \"Food\", color: \"green\" },\n                { emoji: \"📖\", title: \"Book Club Swap\", users: \"6\", type: \"Items\", color: \"blue\" },\n                { emoji: \"🥘\", title: \"Recipe Exchange\", users: \"20\", type: \"Food\", color: \"orange\" }\n              ].map((item, index) => (\n                <button\n                  key={index}\n                  className=\"flex-shrink-0 w-56 bg-gradient-to-br from-gray-50 to-gray-100 rounded-xl p-6 border border-gray-200 hover:shadow-lg transition-all duration-300 cursor-pointer hover:scale-105 text-left focus:outline-none focus:ring-2 focus:ring-green-500\"\n                  onClick={onGetStarted}\n                >\n                  <div className=\"text-4xl mb-4\">{item.emoji}</div>\n                  <h3 className=\"font-semibold text-gray-900 mb-3 text-lg\">{item.title}</h3>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600 font-medium\">{item.users} members</span>\n                    <div className={`px-3 py-1 rounded-full text-sm font-medium ${\n                      item.color === 'purple' ? 'bg-purple-100 text-purple-700' :\n                      item.color === 'pink' ? 'bg-pink-100 text-pink-700' :\n                      item.color === 'green' ? 'bg-green-100 text-green-700' :\n                      item.color === 'blue' ? 'bg-blue-100 text-blue-700' :\n                      'bg-orange-100 text-orange-700'\n                    }`}>\n                      {item.type}\n                    </div>\n                  </div>\n                </button>\n              ))}\n            </div>\n          </div> */}\n        </div>\n      </section> \n\n      {/* How It Works Section */}\n      <section id=\"how-it-works\" ref={(el) => { sectionRefs.current[0] = el as HTMLElement }} className=\"py-20 bg-white relative overflow-hidden\">\n        {/* Background Pattern */}\n        <div className=\"absolute inset-0 opacity-5\">\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-br from-green-100 to-blue-100\"></div>\n        </div>\n        \n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <div className=\"text-center mb-20 opacity-0 animate-fade-in-up\">\n            <div className=\"inline-flex items-center gap-2 bg-green-100 text-green-700 px-4 py-2 rounded-full text-sm font-medium mb-6\">\n              <span className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></span>\n              Simple Process\n            </div>\n            <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-6\">How It Works</h2>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed\">Three simple steps to start sharing and building community</p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {[\n              {\n                step: \"1\",\n                title: \"Post what you want to give\",\n                description: \"Food, clothes, shoes, utensils, baby items—you name it. Just snap a pic, write a short description, and share.\",\n                icon: \"📱\",\n                delay: \"0.1s\"\n              },\n              {\n                step: \"2\", \n                title: \"Others in your area see the item\",\n                description: \"Neighbors can comment, message, or request to pick it up.\",\n                icon: \"👥\",\n                delay: \"0.2s\"\n              },\n              {\n                step: \"3\",\n                title: \"Meet up and share\", \n                description: \"Once they collect it, it's done. No money. Just community.\",\n                icon: \"🤝\",\n                delay: \"0.3s\"\n              }\n            ].map((item, index) => (\n              <Card \n                key={index}\n                className=\"text-center border-2 hover:border-green-300 transition-all duration-500 hover:shadow-xl hover:-translate-y-2 group opacity-0 animate-fade-in-up\"\n                style={{ animationDelay: item.delay }}\n              >\n              <CardHeader>\n                  <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:bg-green-200 group-hover:scale-110 transition-all duration-300 relative\">\n                    <span className=\"text-2xl font-bold text-green-600 group-hover:text-green-700 transition-colors duration-300\">\n                      {item.step}\n                    </span>\n                    <div className=\"absolute -top-2 -right-2 text-2xl opacity-0 group-hover:opacity-100 transition-all duration-300 transform group-hover:scale-110\">\n                      {item.icon}\n                    </div>\n                </div>\n                  <CardTitle className=\"text-xl group-hover:text-green-700 transition-colors duration-300\">\n                    {item.title}\n                  </CardTitle>\n              </CardHeader>\n              <CardContent>\n                  <p className=\"text-gray-600 group-hover:text-gray-700 transition-colors duration-300\">\n                    {item.description}\n                </p>\n              </CardContent>\n            </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* What You Can Share Section */}\n      <section id=\"what-to-share\" ref={(el) => { sectionRefs.current[1] = el as HTMLElement }} className=\"py-20 bg-green-50 relative overflow-hidden\">\n        {/* Animated Background Elements */}\n        <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n          <div className=\"absolute top-10 left-10 w-32 h-32 bg-orange-200/20 rounded-full animate-pulse\" style={{ animationDelay: '0s', animationDuration: '4s' }} />\n          <div className=\"absolute bottom-10 right-10 w-24 h-24 bg-blue-200/20 rounded-full animate-pulse\" style={{ animationDelay: '2s', animationDuration: '6s' }} />\n          <div className=\"absolute top-1/2 left-1/4 w-16 h-16 bg-green-200/30 rounded-full animate-bounce\" style={{ animationDelay: '1s', animationDuration: '3s' }} />\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <div className=\"text-center mb-20 opacity-0 animate-fade-in-up\">\n            <div className=\"inline-flex items-center gap-2 bg-orange-100 text-orange-700 px-4 py-2 rounded-full text-sm font-medium mb-6\">\n              <span className=\"w-2 h-2 bg-orange-500 rounded-full animate-pulse\"></span>\n              What to Share\n            </div>\n            <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-6\">What You Can Share on Tigawane</h2>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed\">From food to clothes, every item can find a new home</p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 gap-12\">\n            {[\n              {\n                icon: \"🍚\",\n                title: \"Food\",\n                color: \"orange\",\n                items: [\n                  \"Leftover cooked food (safe to eat)\",\n                  \"Near-expiry groceries\", \n                  \"Garden produce\",\n                  \"Extra flour, rice, sugar, etc.\"\n                ],\n                delay: \"0.1s\",\n                backgroundImage: \"https://images.unsplash.com/photo-1576013551627-0cc20b96c2a7?auto=format&fit=crop&w=400&q=80\" // African woman with fresh produce\n              },\n              {\n                icon: \"👕\",\n                title: \"Non-Food Items\", \n                color: \"blue\",\n                items: [\n                  \"Clothes & shoes in good condition\",\n                  \"Kids' school uniforms\",\n                  \"Blankets & household goods\", \n                  \"Baby supplies (bottles, wipes, etc.)\"\n                ],\n                delay: \"0.2s\",\n                backgroundImage: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?auto=format&fit=crop&w=400&q=80\" // People organizing clothes for sharing\n              }\n            ].map((category, index) => (\n              <Card \n                key={index}\n                className={`border-2 border-${category.color}-200 hover:border-${category.color}-400 transition-all duration-500 hover:shadow-xl hover:-translate-y-2 group opacity-0 animate-fade-in-up relative overflow-hidden`}\n                style={{ animationDelay: category.delay }}\n              >\n                {/* Background Image */}\n                <div \n                  className=\"absolute inset-0 bg-cover bg-center opacity-5 group-hover:opacity-10 transition-opacity duration-500\"\n                  style={{ backgroundImage: `url(${category.backgroundImage})` }}\n                />\n                <div className=\"relative z-10\">\n              <CardHeader>\n                    <div className=\"flex items-center gap-3 group-hover:scale-105 transition-transform duration-300\">\n                      <span className=\"text-3xl group-hover:animate-bounce\">{category.icon}</span>\n                      <CardTitle className={`text-2xl text-${category.color}-700 group-hover:text-${category.color}-800 transition-colors duration-300`}>\n                        {category.title}\n                      </CardTitle>\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                    {category.items.map((item, itemIndex) => (\n                      <div \n                        key={itemIndex}\n                        className=\"flex items-center gap-2 group-hover:translate-x-2 transition-transform duration-300\"\n                        style={{ transitionDelay: `${itemIndex * 0.1}s` }}\n                      >\n                        <span className={`text-${category.color}-500 group-hover:scale-125 transition-transform duration-300`}>•</span>\n                        <span className=\"group-hover:text-gray-800 transition-colors duration-300\">{item}</span>\n                </div>\n                    ))}\n                  </CardContent>\n                </div>\n            </Card>\n            ))}\n                </div>\n                </div>\n      </section>\n\n      {/* From Waste to Share Section */}\n      <section ref={(el) => { sectionRefs.current[2] = el as HTMLElement }} className=\"py-20 bg-gradient-to-br from-blue-50 to-green-50 relative overflow-hidden\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <div className=\"text-center mb-20 opacity-0 animate-fade-in-up\">\n            <div className=\"inline-flex items-center gap-2 bg-blue-100 text-blue-700 px-4 py-2 rounded-full text-sm font-medium mb-6\">\n              <span className=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></span>\n              Transformation\n            </div>\n            <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-6\">From Waste to Share</h2>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed\">See how simple it is to turn potential waste into community blessings</p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {[\n              {\n                title: \"Before: Ready to Throw Away\",\n                description: \"Instead of throwing away good items, take a moment to consider who might need them.\",\n                image: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?auto=format&fit=crop&w=400&q=80\",\n                icon: \"🗑️\",\n                color: \"red\"\n              },\n              {\n                title: \"Pack with Care\",\n                description: \"Clean and pack items with love, knowing they'll bring joy to someone else.\",\n                image: \"https://images.unsplash.com/photo-1586075010923-2dd4570fb338?auto=format&fit=crop&w=400&q=80\",\n                icon: \"📦\",\n                color: \"yellow\"\n              },\n              {\n                title: \"Share the Blessing\",\n                description: \"Share on Tigawane and connect with neighbors who need what you have.\",\n                image: \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?auto=format&fit=crop&w=400&q=80\",\n                icon: \"🤝\",\n                color: \"green\"\n              }\n            ].map((step, index) => (\n              <Card \n                key={index}\n                className=\"group hover:shadow-xl hover:-translate-y-2 transition-all duration-500 opacity-0 animate-fade-in-up relative overflow-hidden\"\n                style={{ animationDelay: `${index * 0.2}s` }}\n              >\n                {/* Background Image */}\n                <div \n                  className=\"h-48 bg-cover bg-center relative\"\n                  style={{ backgroundImage: `url(${step.image})` }}\n                >\n                  <div className=\"absolute inset-0 bg-black/40 group-hover:bg-black/30 transition-colors duration-300\" />\n                  <div className=\"absolute top-4 right-4 text-3xl bg-white rounded-full p-2 group-hover:scale-110 transition-transform duration-300\">\n                    {step.icon}\n                </div>\n                </div>\n                \n                <CardContent className=\"p-6\">\n                  <h3 className={`text-xl font-bold text-${step.color}-700 mb-3 group-hover:text-${step.color}-800 transition-colors duration-300`}>\n                    {step.title}\n                  </h3>\n                  <p className=\"text-gray-600 group-hover:text-gray-700 transition-colors duration-300\">\n                    {step.description}\n                  </p>\n              </CardContent>\n            </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section id=\"stories\" ref={(el) => { sectionRefs.current[3] = el as HTMLElement }} className=\"py-20 bg-white relative overflow-hidden\">\n        {/* Background Pattern */}\n        <div className=\"absolute inset-0 opacity-5\">\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-br from-green-100 to-blue-100\"></div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <div className=\"text-center mb-20 opacity-0 animate-fade-in-up\">\n            <div className=\"inline-flex items-center gap-2 bg-purple-100 text-purple-700 px-4 py-2 rounded-full text-sm font-medium mb-6\">\n              <span className=\"w-2 h-2 bg-purple-500 rounded-full animate-pulse\"></span>\n              Success Stories\n            </div>\n            <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-6\">Real Stories</h2>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed\">See how Tigawane is changing lives across Malawi</p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            {stories.map((s, i) => (\n              <Card \n                key={i} \n                className={`border-l-4 border-l-${s.color || (i % 2 === 0 ? \"green\" : \"blue\")}-500 hover:shadow-xl hover:-translate-y-2 transition-all duration-500 group opacity-0 animate-fade-in-up`}\n                style={{ animationDelay: `${i * 0.2}s` }}\n              >\n                <CardContent className=\"pt-6\">\n                  <div className=\"flex items-start gap-4\">\n                    <div className={`w-12 h-12 bg-${s.color || (i % 2 === 0 ? \"green\" : \"blue\")}-100 rounded-full flex items-center justify-center group-hover:scale-110 group-hover:bg-${s.color || (i % 2 === 0 ? \"green\" : \"blue\")}-200 transition-all duration-300 relative`}>\n                      <span className={`text-${s.color || (i % 2 === 0 ? \"green\" : \"blue\")}-600 font-bold group-hover:text-${s.color || (i % 2 === 0 ? \"green\" : \"blue\")}-700 transition-colors duration-300`}>\n                        {s.name[0]}\n                      </span>\n                      <Heart className=\"absolute -top-1 -right-1 w-3 h-3 text-red-400 opacity-0 group-hover:opacity-100 transition-all duration-300 animate-pulse\" />\n                    </div>\n                    <div className=\"flex-1\">\n                      <blockquote className=\"text-lg italic text-gray-700 mb-3 group-hover:text-gray-800 transition-colors duration-300\">\n                        \"{s.story}\"\n                      </blockquote>\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"font-semibold group-hover:text-gray-800 transition-colors duration-300\">{s.name}</span>\n                        <span className=\"text-gray-500\">•</span>\n                        <span className=\"text-gray-500 flex items-center gap-1 group-hover:text-gray-600 transition-colors duration-300\">\n                          <MapPin className=\"h-4 w-4 group-hover:scale-110 transition-transform duration-300\" />\n                          {s.location}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          <div className=\"text-center mt-12 opacity-0 animate-fade-in-up\" style={{ animationDelay: '0.8s' }}>\n            <p className=\"text-lg text-gray-600 mb-4\">Want to be featured? Share your Tigawane moment!</p>\n            <Button\n              variant=\"outline\"\n              className=\"border-green-500 text-green-600 hover:bg-green-50 hover:scale-105 hover:shadow-lg transition-all duration-300 group\"\n              onClick={() => setModalOpen(true)}\n            >\n              <MessageCircle className=\"mr-2 h-4 w-4 group-hover:scale-110 transition-transform duration-300\" />\n              Submit your story\n            </Button>\n            <SubmitStoryModal\n              open={modalOpen}\n              onClose={() => setModalOpen(false)}\n              onSuccess={() => {\n                // Optionally refetch stories after submission\n              }}\n            />\n          </div>\n        </div>\n      </section>\n\n      {/* Why Tigawane Exists Section */}\n      <section ref={(el) => { sectionRefs.current[4] = el as HTMLElement }} className=\"py-20 bg-gray-900 text-white relative overflow-hidden\">\n        {/* Animated Background */}\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-br from-gray-900 via-green-900/20 to-blue-900/20\"></div>\n          <div className=\"absolute top-20 left-20 w-40 h-40 bg-green-400/10 rounded-full animate-pulse\" style={{ animationDelay: '0s', animationDuration: '4s' }} />\n          <div className=\"absolute bottom-20 right-20 w-32 h-32 bg-blue-400/10 rounded-full animate-pulse\" style={{ animationDelay: '2s', animationDuration: '6s' }} />\n          <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-24 h-24 bg-white/5 rounded-full animate-bounce\" style={{ animationDelay: '1s', animationDuration: '3s' }} />\n        </div>\n\n        <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 text-center relative z-10\">\n          <div className=\"mb-12 opacity-0 animate-fade-in-up\">\n            <div className=\"inline-flex items-center gap-2 bg-white/10 text-white px-4 py-2 rounded-full text-sm font-medium mb-6\">\n              <span className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></span>\n              Our Mission\n            </div>\n            <h2 className=\"text-4xl md:text-5xl lg:text-6xl font-bold mb-8\">Why Tigawane Exists</h2>\n          </div>\n          <div className=\"space-y-6 text-lg\">\n            <p className=\"opacity-0 animate-fade-in-up\" style={{ animationDelay: '0.2s' }}>\n              Malawi loses tons of edible food every day—while thousands go hungry.\n            </p>\n            <p className=\"opacity-0 animate-fade-in-up\" style={{ animationDelay: '0.4s' }}>\n              Families throw away clothes, utensils, and goods that others desperately need.\n            </p>\n            <p className=\"text-2xl font-bold text-green-400 opacity-0 animate-fade-in-up\" style={{ animationDelay: '0.6s' }}>\n              Tigawane changes that.\n            </p>\n            <p className=\"opacity-0 animate-fade-in-up\" style={{ animationDelay: '0.8s' }}>\n              We connect neighbors through generosity and dignity.\n            </p>\n            <blockquote className=\"text-xl italic text-green-300 border-l-4 border-green-400 pl-6 my-8 opacity-0 animate-fade-in-up hover:scale-105 transition-transform duration-300\" style={{ animationDelay: '1s' }}>\n              \"Let's share\" is not just our name. It's our movement.\n            </blockquote>\n          </div>\n        </div>\n      </section>\n\n      {/* Final CTA Section */}\n      <section ref={(el) => { sectionRefs.current[5] = el as HTMLElement }} className=\"py-20 bg-gradient-to-r from-green-600 to-blue-600 text-white relative overflow-hidden\">\n        {/* Animated Background */}\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-r from-green-600/90 to-blue-600/90\"></div>\n          <div className=\"absolute top-10 left-10 w-32 h-32 bg-white/10 rounded-full animate-bounce\" style={{ animationDelay: '0s', animationDuration: '3s' }} />\n          <div className=\"absolute bottom-10 right-10 w-24 h-24 bg-yellow-400/20 rounded-full animate-bounce\" style={{ animationDelay: '1.5s', animationDuration: '4s' }} />\n          <div className=\"absolute top-1/2 left-1/4 w-16 h-16 bg-white/15 rounded-full animate-pulse\" style={{ animationDelay: '0.5s', animationDuration: '2s' }} />\n        </div>\n\n        <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 text-center relative z-10\">\n          <div className=\"mb-12 opacity-0 animate-fade-in-up\">\n            <div className=\"inline-flex items-center gap-2 bg-white/10 text-white px-4 py-2 rounded-full text-sm font-medium mb-6\">\n              <span className=\"w-2 h-2 bg-yellow-400 rounded-full animate-pulse\"></span>\n              Join Today\n            </div>\n            <h2 className=\"text-4xl md:text-5xl lg:text-6xl font-bold mb-6\">Ready to Share or Receive?</h2>\n            <p className=\"text-xl md:text-2xl mb-8 leading-relaxed\" style={{ animationDelay: '0.2s' }}>\n              Join other Malawians creating a culture of generosity.\n              <br />\n              <span className=\"text-yellow-300 font-semibold\">List your first item in seconds—food or non-food.</span>\n            </p>\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center opacity-0 animate-fade-in-up\" style={{ animationDelay: '0.4s' }}>\n            <Button\n              onClick={onGetStarted}\n              size=\"lg\"\n              className=\"bg-yellow-400 hover:bg-yellow-500 text-black font-bold text-xl px-10 py-6 shadow-lg rounded-full transform hover:scale-105 hover:shadow-xl transition-all duration-300 group\"\n            >\n              Share Something Today \n              <ArrowRight className=\"ml-2 h-6 w-6 group-hover:translate-x-1 transition-transform duration-300\" />\n            </Button>\n            <Button\n              onClick={onGetStarted}\n              size=\"lg\"\n              variant=\"outline\"\n              className=\"border-white text-white hover:bg-white hover:text-green-600 font-bold text-xl px-10 py-6 shadow-lg rounded-full transform hover:scale-105 hover:shadow-xl transition-all duration-300 backdrop-blur-sm\"\n            >\n              See What's Being Shared\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer ref={(el) => { sectionRefs.current[6] = el as HTMLElement }} className=\"bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 text-white relative overflow-hidden\">\n        {/* Background Pattern */}\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-br from-green-900/10 to-blue-900/10\"></div>\n          <div className=\"absolute top-10 left-10 w-32 h-32 bg-green-500/5 rounded-full animate-pulse\" style={{ animationDelay: '0s', animationDuration: '4s' }} />\n          <div className=\"absolute bottom-10 right-10 w-24 h-24 bg-blue-500/5 rounded-full animate-pulse\" style={{ animationDelay: '2s', animationDuration: '6s' }} />\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          {/* Main Footer Content */}\n          <div className=\"py-16\">\n            <div className=\"grid lg:grid-cols-5 md:grid-cols-3 sm:grid-cols-2 gap-8\">\n              {/* Brand Section */}\n              <div className=\"lg:col-span-2 opacity-0 animate-fade-in-up\">\n                <div className=\"flex items-center gap-3 mb-6 group cursor-pointer\">\n                  <div className=\"relative\">\n                    <span className=\"text-3xl group-hover:scale-110 group-hover:rotate-12 transition-all duration-300\">🤝</span>\n                    <div className=\"absolute -inset-2 bg-green-500/20 rounded-full opacity-0 group-hover:opacity-100 transition-all duration-500 blur-sm\"></div>\n                  </div>\n            <div>\n                    <h2 className=\"text-2xl font-bold group-hover:text-green-400 transition-colors duration-300\">Tigawane</h2>\n                    <p className=\"text-sm text-gray-400 group-hover:text-gray-300 transition-colors duration-300\">Share • Connect • Care</p>\n                  </div>\n                </div>\n                <p className=\"text-gray-300 text-lg leading-relaxed mb-6 max-w-md\">\n                  Connecting Malawians through generosity and community sharing. \n                  Together, we're building a sustainable future where nothing goes to waste.\n                </p>\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"flex items-center gap-2 text-green-400\">\n                    <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n                    <span className=\"text-sm font-medium\">Live in Malawi</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-blue-400\">\n                    <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse\"></div>\n                    <span className=\"text-sm font-medium\">Community Driven</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Quick Links */}\n              <div className=\"opacity-0 animate-fade-in-up\" style={{ animationDelay: '0.1s' }}>\n                <h3 className=\"text-lg font-semibold mb-6 text-white\">Quick Links</h3>\n                <div className=\"space-y-3\">\n                  <a href=\"#\" className=\"block text-gray-300 hover:text-green-400 transition-colors duration-300 group\">\n                    <span className=\"group-hover:translate-x-1 transition-transform duration-300 inline-block\">How It Works</span>\n                  </a>\n                  <a href=\"#\" className=\"block text-gray-300 hover:text-green-400 transition-colors duration-300 group\">\n                    <span className=\"group-hover:translate-x-1 transition-transform duration-300 inline-block\">Share Items</span>\n                  </a>\n                  <a href=\"#\" className=\"block text-gray-300 hover:text-green-400 transition-colors duration-300 group\">\n                    <span className=\"group-hover:translate-x-1 transition-transform duration-300 inline-block\">Find Items</span>\n                  </a>\n                  <a href=\"#\" className=\"block text-gray-300 hover:text-green-400 transition-colors duration-300 group\">\n                    <span className=\"group-hover:translate-x-1 transition-transform duration-300 inline-block\">Success Stories</span>\n                  </a>\n            </div>\n              </div>\n\n              {/* Contact Info */}\n              <div className=\"opacity-0 animate-fade-in-up\" style={{ animationDelay: '0.2s' }}>\n                <h3 className=\"text-lg font-semibold mb-6 text-white\">Get in Touch</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-3 group cursor-pointer\">\n                    <div className=\"w-10 h-10 bg-green-500/20 rounded-full flex items-center justify-center group-hover:bg-green-500/30 transition-colors duration-300\">\n                      <span className=\"text-green-400\"></span>\n                    </div>\n                    <div>\n                      <p className=\"text-gray-300 group-hover:text-white transition-colors duration-300\">WhatsApp</p>\n                      <p className=\"text-sm text-gray-400 group-hover:text-gray-300 transition-colors duration-300\">+265 986 445 261</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-3 group cursor-pointer\">\n                    <div className=\"w-10 h-10 bg-blue-500/20 rounded-full flex items-center justify-center group-hover:bg-blue-500/30 transition-colors duration-300\">\n                      <span className=\"text-blue-400\"></span>\n                    </div>\n                    <div>\n                      <p className=\"text-gray-300 group-hover:text-white transition-colors duration-300\">Email</p>\n                      <p className=\"text-sm text-gray-400 group-hover:text-gray-300 transition-colors duration-300\">tigawane@gmail.com</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-10 h-10 bg-purple-500/20 rounded-full flex items-center justify-center\">\n                      <span className=\"text-purple-400\"></span>\n            </div>\n            <div>\n                      <p className=\"text-gray-300\">Location</p>\n                      <p className=\"text-sm text-gray-400\">Malawi, Africa</p>\n                    </div>\n                  </div>\n              </div>  \n            </div>\n\n              {/* Community & Social */}\n              <div className=\"opacity-0 animate-fade-in-up\" style={{ animationDelay: '0.3s' }}>\n                <h3 className=\"text-lg font-semibold mb-6 text-white\">Join Our Community</h3>\n                <div className=\"space-y-4\">\n                  <a \n                    href=\"https://www.facebook.com/tigawane\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\" \n                    className=\"flex items-center gap-3 group cursor-pointer\"\n                  >\n                    <div className=\"w-10 h-10 bg-blue-600/20 rounded-full flex items-center justify-center group-hover:bg-blue-600/30 transition-colors duration-300\">\n                      <span className=\"text-blue-400\">💬</span>\n                    </div>\n            <div>\n                      <p className=\"text-gray-300 group-hover:text-white transition-colors duration-300\">Facebook</p>\n                      <p className=\"text-sm text-gray-400 group-hover:text-gray-300 transition-colors duration-300\">Follow @Tigawane</p>\n                    </div>\n                  </a>\n                  <div className=\"pt-4\">\n                    <p className=\"text-sm text-gray-400 mb-3\">Download our app</p>\n                    <div className=\"flex gap-2\">\n                      <div className=\"w-24 h-8 bg-gray-700 rounded flex items-center justify-center text-xs text-gray-300\">\n                        Coming Soon\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Bottom Bar */}\n          <div className=\"border-t border-gray-700/50 py-8\">\n            <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n              <div className=\"text-center md:text-left opacity-0 animate-fade-in-up\" style={{ animationDelay: '0.4s' }}>\n                <p className=\"text-gray-400\">\n                  &copy; 2025 Tigawane. Built with <span className=\"text-red-400\">❤️</span> for the people of Malawi.\n                </p>\n              </div>\n              <div className=\"flex items-center gap-6 text-sm text-gray-400 opacity-0 animate-fade-in-up\" style={{ animationDelay: '0.5s' }}>\n                <a href=\"#\" className=\"hover:text-green-400 transition-colors duration-300\">Privacy Policy</a>\n                <a href=\"#\" className=\"hover:text-green-400 transition-colors duration-300\">Terms of Service</a>\n                <a href=\"#\" className=\"hover:text-green-400 transition-colors duration-300\">Help Center</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  )\n}\n","size_bytes":49366},"components/LocationPermissionModal.tsx":{"content":"\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog'\nimport { Button } from '@/components/ui/button'\nimport { MapPin, Shield, AlertCircle, CheckCircle } from 'lucide-react'\n\ninterface LocationPermissionModalProps {\n  isOpen: boolean\n  onClose: () => void\n  onGrantPermission: () => void\n  onDenyPermission: () => void\n}\n\nexport default function LocationPermissionModal({\n  isOpen,\n  onClose,\n  onGrantPermission,\n  onDenyPermission\n}: LocationPermissionModalProps) {\n  const [permissionState, setPermissionState] = useState<'checking' | 'prompt' | 'granted' | 'denied'>('checking')\n\n  useEffect(() => {\n    if (isOpen) {\n      checkLocationPermission()\n    }\n  }, [isOpen])\n\n  const checkLocationPermission = async () => {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      setPermissionState('prompt')\n      return\n    }\n\n    try {\n      const permission = await navigator.permissions.query({ name: 'geolocation' as PermissionName })\n      setPermissionState(permission.state === 'granted' ? 'granted' : 'prompt')\n    } catch (error) {\n      console.log('Permission API not supported, showing prompt')\n      setPermissionState('prompt')\n    }\n  }\n\n  const handleGrantPermission = () => {\n    setPermissionState('granted')\n    onGrantPermission()\n  }\n\n  const handleDenyPermission = () => {\n    setPermissionState('denied')\n    onDenyPermission()\n  }\n\n  if (permissionState === 'granted') {\n    return (\n      <Dialog open={isOpen} onOpenChange={onClose}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2 text-green-600\">\n              <CheckCircle className=\"h-5 w-5\" />\n              Location Access Granted\n            </DialogTitle>\n            <DialogDescription>\n              Thank you! We can now show you nearby items and help you find the best sharing opportunities.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"flex justify-end\">\n            <Button onClick={onClose} className=\"bg-green-600 hover:bg-green-700\">\n              Continue\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    )\n  }\n\n  if (permissionState === 'denied') {\n    return (\n      <Dialog open={isOpen} onOpenChange={onClose}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2 text-orange-600\">\n              <AlertCircle className=\"h-5 w-5\" />\n              Location Access Denied\n            </DialogTitle>\n            <DialogDescription>\n              No problem! You can still use Tigawane by selecting a city manually. You'll see all items in your chosen area.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"flex justify-end\">\n            <Button onClick={onClose} className=\"bg-orange-600 hover:bg-orange-700\">\n              Continue\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    )\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2 text-blue-600\">\n            <MapPin className=\"h-5 w-5\" />\n            Location Access Needed\n          </DialogTitle>\n          <DialogDescription>\n            To show you nearby items and help you find the best sharing opportunities, we need access to your location.\n          </DialogDescription>\n        </DialogHeader>\n        \n          <div className=\"space-y-4\">\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <div className=\"flex items-start gap-3\">\n                <Shield className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n                <div className=\"space-y-2\">\n                  <h4 className=\"font-medium text-blue-900\">Your Privacy is Protected</h4>\n                  <ul className=\"text-sm text-blue-800 space-y-1\">\n                    <li>• We only use your location to show nearby items</li>\n                    <li>• Your exact location is never stored or shared</li>\n                    <li>• You can change this permission anytime in your browser</li>\n                    <li>• You can still use the app by selecting a city manually</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n              <div className=\"flex items-start gap-3\">\n                <AlertCircle className=\"h-5 w-5 text-yellow-600 mt-0.5\" />\n                <div className=\"space-y-2\">\n                  <h4 className=\"font-medium text-yellow-900\">What happens next?</h4>\n                  <p className=\"text-sm text-yellow-800\">\n                    When you click \"Allow Location Access\", we'll ask your browser for permission. \n                    <strong> Please click \"Allow\" or \"Yes\" in the browser popup</strong> to enable location access.\n                  </p>\n                  <p className=\"text-xs text-yellow-700 mt-2\">\n                    If you don't see a browser popup, check your browser's address bar for a location icon and click it.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex gap-3\">\n              <Button\n                onClick={handleGrantPermission}\n                className=\"flex-1 bg-blue-600 hover:bg-blue-700\"\n              >\n                Allow Location Access\n              </Button>\n              <Button\n                onClick={handleDenyPermission}\n                variant=\"outline\"\n                className=\"flex-1\"\n              >\n                Use City Selection\n              </Button>\n            </div>\n          </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","size_bytes":5963},"components/LocationSelector.tsx":{"content":"\"use client\"\n\nimport React, { useState } from 'react';\nimport { useLocation } from '@/contexts/LocationContext';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Badge } from '@/components/ui/badge';\nimport { MapPin, Navigation, Globe, Settings, RefreshCw, ChevronDown } from 'lucide-react';\nimport { formatDistance, RADIUS_OPTIONS, getCityCoordinates } from '@/lib/locationService';\n\ninterface LocationSelectorProps {\n  showRadiusSelector?: boolean;\n  className?: string;\n}\n\nexport default function LocationSelector({ showRadiusSelector = true, className = '' }: LocationSelectorProps) {\n  const {\n    selectedLocation,\n    locationRadius,\n    isLoadingLocation,\n    locationError,\n    setSelectedLocation,\n    setLocationRadius,\n    getCurrentUserLocation,\n    clearLocationError,\n    availableCities,\n  } = useLocation();\n\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleLocationRefresh = async () => {\n    setIsRefreshing(true);\n    await getCurrentUserLocation();\n    setIsRefreshing(false);\n  };\n\n  const handleCityChange = (cityName: string) => {\n    const cityLocation = getCityCoordinates(cityName);\n    if (cityLocation) {\n      setSelectedLocation(cityLocation);\n    }\n  };\n\n  const handleRadiusChange = (radius: string) => {\n    setLocationRadius(parseInt(radius));\n  };\n\n  const getLocationDisplay = () => {\n    if (!selectedLocation) return 'Select location';\n    \n    if (selectedLocation.city) {\n      return selectedLocation.city;\n    }\n    \n    if (selectedLocation.address) {\n      return selectedLocation.address.split(',')[0]; // Show first part of address\n    }\n    \n    return `${selectedLocation.latitude.toFixed(4)}, ${selectedLocation.longitude.toFixed(4)}`;\n  };\n\n  const getCompactDisplay = () => {\n    if (!selectedLocation) return 'Set Location';\n    \n    if (selectedLocation.city) {\n      return `${selectedLocation.city} (${formatDistance(locationRadius)})`;\n    }\n    \n    if (selectedLocation.address) {\n      const shortAddress = selectedLocation.address.split(',')[0];\n      return `${shortAddress} (${formatDistance(locationRadius)})`;\n    }\n    \n    return `${formatDistance(locationRadius)} radius`;\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        <Button \n          variant=\"outline\" \n          className={`flex items-center gap-3 px-4 py-3 min-h-[48px] rounded-xl border-2 border-gray-200 hover:border-green-500 transition-colors touch-target-lg ${className}`}\n        >\n          <MapPin className=\"h-5 w-5 text-blue-600\" />\n          <span className=\"text-sm font-medium mobile-text-base\">{getCompactDisplay()}</span>\n          <ChevronDown className=\"h-4 w-4 text-gray-500\" />\n        </Button>\n      </DialogTrigger>\n      \n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <MapPin className=\"h-5 w-5 text-blue-600\" />\n            Location & Radius Settings\n          </DialogTitle>\n        </DialogHeader>\n        \n        <div className=\"space-y-4\">\n          {/* Current Location Display */}\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <Navigation className=\"h-4 w-4 text-green-600\" />\n              <span className=\"text-sm font-medium\">Current Location:</span>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleLocationRefresh}\n              disabled={isRefreshing || isLoadingLocation}\n              className=\"h-8 px-2\"\n            >\n              <RefreshCw className={`h-4 w-4 ${isRefreshing ? 'animate-spin' : ''}`} />\n            </Button>\n          </div>\n\n          <div className=\"bg-gray-50 rounded-lg p-3\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Globe className=\"h-4 w-4 text-blue-600\" />\n              <span className=\"font-medium text-sm\">{getLocationDisplay()}</span>\n            </div>\n            \n            {selectedLocation && (\n              <div className=\"text-xs text-gray-600\">\n                {selectedLocation.latitude.toFixed(6)}, {selectedLocation.longitude.toFixed(6)}\n              </div>\n            )}\n          </div>\n\n          {/* Location Error */}\n          {locationError && (\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n              <div className=\"flex items-center gap-2 text-red-700\">\n                <Settings className=\"h-4 w-4\" />\n                <span className=\"text-sm\">{locationError}</span>\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={clearLocationError}\n                className=\"mt-2 h-6 px-2 text-xs\"\n              >\n                Dismiss\n              </Button>\n            </div>\n          )}\n\n          {/* City Selector */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">Select City:</label>\n            <Select\n              value={selectedLocation?.city || ''}\n              onValueChange={handleCityChange}\n            >\n              <SelectTrigger className=\"h-12 px-4 rounded-xl border-2 border-gray-200 hover:border-green-500 transition-colors touch-target-lg\">\n                <SelectValue placeholder=\"Choose a city\" />\n              </SelectTrigger>\n              <SelectContent>\n                {availableCities.map((city) => (\n                  <SelectItem key={city} value={city}>\n                    {city}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Radius Selector */}\n          {showRadiusSelector && (\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium\">Search Radius:</label>\n              <Select\n                value={locationRadius.toString()}\n                onValueChange={handleRadiusChange}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {RADIUS_OPTIONS.map((option) => (\n                    <SelectItem key={option.value} value={option.value.toString()}>\n                      {option.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              \n              <div className=\"flex items-center gap-2 text-xs text-gray-600\">\n                <MapPin className=\"h-3 w-3\" />\n                <span>Items within {formatDistance(locationRadius)} of your location</span>\n              </div>\n            </div>\n          )}\n\n          {/* Loading State */}\n          {(isLoadingLocation || isRefreshing) && (\n            <div className=\"flex items-center gap-2 text-sm text-blue-600\">\n              <RefreshCw className=\"h-4 w-4 animate-spin\" />\n              <span>Getting your location...</span>\n            </div>\n          )}\n\n          {/* Close Button */}\n          <div className=\"flex justify-end pt-2\">\n            <Button onClick={() => setIsOpen(false)} className=\"bg-blue-600 hover:bg-blue-700\">\n              Done\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":7573},"components/ManageClaim.tsx":{"content":"","size_bytes":0},"components/MyItemsManager.tsx":{"content":"\"use client\"\n\nimport { useEffect, useState, useCallback, useMemo } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { MapPin, Clock, Package, Edit, Trash2, CheckCircle } from \"lucide-react\"\nimport Image from \"next/image\"\nimport EditItemModal from \"@/components/EditItemModal\"\n\ninterface Item {\n  id: string\n  title: string\n  description: string | null\n  category: string\n  item_type: \"food\" | \"non-food\"\n  quantity: string\n  condition?: string | null\n  expiry_date: string | null\n  pickup_location: string\n  image_url: string | null\n  status: string\n  created_at: string\n  user_id: string\n}\n\ninterface MyItemsManagerProps {\n  onItemUpdated: () => void\n}\n\nexport default function MyItemsManager({ onItemUpdated }: MyItemsManagerProps) {\n  const { user } = useAuth()\n  const [items, setItems] = useState<Item[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [editingItem, setEditingItem] = useState<Item | null>(null)\n  const [showEditModal, setShowEditModal] = useState(false)\n  const [filter, setFilter] = useState(\"all\")\n  const [deleting, setDeleting] = useState<string | null>(null)\n  const [requestCounts, setRequestCounts] = useState<{ [itemId: string]: number }>({})\n  const [markingShared, setMarkingShared] = useState<string | null>(null)\n\n  // Fetch request counts for each item\n  const fetchRequestCounts = useCallback(async (itemIds: string[]) => {\n    if (itemIds.length === 0) return setRequestCounts({})\n    const { data, error } = await supabase\n      .from(\"claims\")\n      .select(\"item_id, status\")\n      .in(\"item_id\", itemIds)\n      .in(\"status\", [\"pending\", \"requested\"])\n    if (error) {\n      setRequestCounts({})\n      return\n    }\n    const counts: { [itemId: string]: number } = {}\n    data.forEach((claim: { item_id: string }) => {\n      counts[claim.item_id] = (counts[claim.item_id] || 0) + 1\n    })\n    setRequestCounts(counts)\n  }, [])\n\n  // Optimized fetch using database function\n  const fetchMyItems = useCallback(async () => {\n    if (!user) return\n\n    try {\n      setError(null)\n      console.log(\"Fetching user's items...\")\n\n      const { data: itemData, error: itemError } = await supabase.rpc(\"get_user_items\", {\n        p_user_id: user.id,\n        p_limit: 100,\n        p_offset: 0,\n      })\n\n      if (itemError) {\n        console.error(\"Error fetching user items:\", itemError)\n        setError(`Error fetching items: ${itemError.message}`)\n        return\n      }\n\n      console.log(\"Successfully fetched user items:\", itemData?.length || 0)\n      setItems(itemData || [])\n      // Fetch request counts for these items\n      if (itemData && itemData.length > 0) {\n        fetchRequestCounts(itemData.map((item: Item) => item.id))\n      } else {\n        setRequestCounts({})\n      }\n    } catch (error: any) {\n      console.error(\"Unexpected error fetching user items:\", error)\n      setError(`Unexpected error: ${error.message}`)\n    } finally {\n      setLoading(false)\n    }\n  }, [user, fetchRequestCounts])\n\n  useEffect(() => {\n    if (user) {\n      fetchMyItems()\n    }\n  }, [user, fetchMyItems])\n\n  const handleEditItem = useCallback((item: Item) => {\n    setEditingItem(item)\n    setShowEditModal(true)\n  }, [])\n\n  const handleItemUpdated = useCallback(() => {\n    fetchMyItems()\n    onItemUpdated()\n    setShowEditModal(false)\n    setEditingItem(null)\n  }, [fetchMyItems, onItemUpdated])\n\n  const handleDeleteItem = useCallback(\n    async (item: Item) => {\n      if (!confirm(`Are you sure you want to delete \"${item.title}\"?`)) {\n        return\n      }\n\n      setDeleting(item.id)\n      try {\n        const { error } = await supabase.from(\"items\").delete().eq(\"id\", item.id).eq(\"user_id\", user?.id)\n\n        if (error) {\n          console.error(\"Error deleting item:\", error)\n          alert(`Error deleting item: ${error.message}`)\n          return\n        }\n\n        // Remove item from local state immediately\n        setItems((prev) => prev.filter((i) => i.id !== item.id))\n        onItemUpdated()\n      } catch (error: any) {\n        console.error(\"Unexpected error deleting item:\", error)\n        alert(`Error deleting item: ${error.message}`)\n      } finally {\n        setDeleting(null)\n      }\n    },\n    [user?.id, onItemUpdated],\n  )\n\n  const handleMarkAsShared = useCallback(async (item: Item) => {\n    if (!confirm(\"Mark this item as shared? This will complete the sharing and remove it from active listings.\")) return\n    setMarkingShared(item.id)\n    try {\n      await supabase.from(\"items\").update({ status: \"completed\" }).eq(\"id\", item.id)\n      fetchMyItems()\n      onItemUpdated()\n    } catch (error) {\n      alert(\"Error marking as shared.\")\n    } finally {\n      setMarkingShared(null)\n    }\n  }, [fetchMyItems, onItemUpdated])\n\n  const getStatusBadge = useCallback((status: string) => {\n    switch (status) {\n      case \"available\":\n        return <Badge className=\"bg-green-100 text-green-800\">Available</Badge>\n      case \"requested\":\n        return <Badge className=\"bg-yellow-100 text-yellow-800\">Requested</Badge>\n      case \"reserved\":\n        return <Badge className=\"bg-blue-100 text-blue-800\">Reserved</Badge>\n      case \"completed\":\n        return <Badge className=\"bg-gray-100 text-gray-800\">Completed</Badge>\n      default:\n        return <Badge variant=\"secondary\">{status}</Badge>\n    }\n  }, [])\n\n  // Memoize filtered items\n  const filteredItems = useMemo(() => {\n    if (filter === \"requested\") {\n      return items.filter(\n        (item) =>\n          item.status === \"requested\" ||\n          (item.status === \"available\" && requestCounts[item.id] > 0)\n      )\n    }\n    return filter === \"all\" ? items : items.filter((item) => item.status === filter)\n  }, [items, filter, requestCounts])\n\n  // Memoize stats\n  const stats = useMemo(() => {\n    const requestedCount = items.filter(\n      (item) =>\n        item.status === \"requested\" ||\n        (item.status === \"available\" && requestCounts[item.id] > 0)\n    ).length;\n    return {\n      total: items.length,\n      available: items.filter((i) => i.status === \"available\" && (!requestCounts[i.id] || requestCounts[i.id] === 0)).length,\n      requested: requestedCount,\n      completed: items.filter((i) => i.status === \"completed\").length,\n    };\n  }, [items, requestCounts])\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-base sm:text-lg lg:text-xl\">Loading your items...</div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col justify-center items-center h-64 space-y-4\">\n        <div className=\"text-red-600 text-base sm:text-lg lg:text-xl\">Error loading your items</div>\n        <div className=\"text-red-500 text-sm sm:text-base max-w-md text-center\">{error}</div>\n        <Button onClick={fetchMyItems} variant=\"outline\">\n          Try Again\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center\">\n        <h2 className=\"text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900 mb-2\">My Shared Items</h2>\n        <p className=\"text-sm sm:text-base lg:text-lg text-gray-600\">Manage your food and item listings</p>\n\n        {/* Stats */}\n        <div className=\"flex justify-center gap-4 mt-4\">\n          <div className=\"text-center\">\n            <div className=\"text-xl sm:text-2xl lg:text-3xl font-bold text-green-600\">{stats.total}</div>\n            <div className=\"text-xs sm:text-sm text-gray-500\">Total</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-xl sm:text-2xl lg:text-3xl font-bold text-blue-600\">{stats.available}</div>\n            <div className=\"text-xs sm:text-sm text-gray-500\">Available</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-xl sm:text-2xl lg:text-3xl font-bold text-yellow-600\">{stats.requested}</div>\n            <div className=\"text-xs sm:text-sm text-gray-500\">Requested</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-xl sm:text-2xl lg:text-3xl font-bold text-gray-600\">{stats.completed}</div>\n            <div className=\"text-xs sm:text-sm text-gray-500\">Completed</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex flex-wrap gap-2\">\n        {[\"all\", \"available\", \"requested\", \"reserved\", \"completed\"].map((status) => (\n          <Button\n            key={status}\n            variant={filter === status ? \"default\" : \"outline\"}\n            size=\"sm\"\n            onClick={() => setFilter(status)}\n            className={`text-xs sm:text-sm lg:text-base ${filter === status ? \"bg-green-600 hover:bg-green-700\" : \"\"}`}\n          >\n            {status.charAt(0).toUpperCase() + status.slice(1)}\n          </Button>\n        ))}\n      </div>\n\n      {filteredItems.length === 0 ? (\n        <div className=\"text-center py-12\">\n          <div className=\"text-gray-500 text-base sm:text-lg lg:text-xl\">\n            {filter === \"all\" ? \"You haven't shared any items yet\" : `No ${filter} items found`}\n          </div>\n          <div className=\"text-gray-400 text-sm sm:text-base mt-2\">\n            {filter === \"all\" ? \"Start sharing to help your community!\" : \"Try a different filter\"}\n          </div>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\n          {filteredItems.map((item) => (\n            <Card \n              key={item.id} \n              className=\"group overflow-hidden hover:shadow-lg hover:scale-105 transition-all duration-300 cursor-pointer border-2 hover:border-green-200 w-full max-w-[280px] mx-auto\" \n              onClick={() => handleEditItem(item)}\n            >\n              {item.image_url && (\n                <div className=\"relative h-40 w-full overflow-hidden rounded-t-lg\">\n                  <Image\n                    src={item.image_url || \"/placeholder.svg\"}\n                    alt={item.title}\n                    fill\n                    className=\"object-cover group-hover:scale-110 transition-transform duration-300\"\n                    loading=\"lazy\"\n                    sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n                  />\n                </div>\n              )}\n              <CardHeader className=\"p-3 pb-2\">\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex-1 relative group\">\n                    <CardTitle className=\"text-sm font-semibold flex items-center gap-1 line-clamp-2 group-hover:line-clamp-none\">\n                      {item.title}\n                      {requestCounts[item.id] > 0 && (\n                        <span className=\"ml-1 inline-flex items-center justify-center px-1 py-0.5 rounded-full text-xs font-semibold bg-yellow-200 text-yellow-800 animate-pulse\">\n                          {requestCounts[item.id]}\n                        </span>\n                      )}\n                    </CardTitle>\n                    <div className=\"absolute hidden group-hover:block bg-black text-white text-xs p-2 rounded shadow-lg z-10 mt-1 whitespace-normal max-w-xs\">\n                      {item.title}\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col gap-1 shrink-0\">\n                    <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800 text-xs\">\n                      {item.category}\n                    </Badge>\n                    {getStatusBadge(item.status)}\n                  </div>\n                </div>\n                <div className=\"relative group\">\n                  <CardDescription className=\"line-clamp-2 text-xs leading-tight group-hover:line-clamp-none\">\n                    {item.description}\n                  </CardDescription>\n                  <div className=\"absolute hidden group-hover:block bg-black text-white text-xs p-2 rounded shadow-lg z-10 mt-1 whitespace-normal max-w-xs\">\n                    {item.description}\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-2 p-3 pt-0\">\n                <div className=\"flex items-center gap-1 text-xs text-gray-600 relative group\">\n                  <MapPin className=\"h-4 w-4 shrink-0\" />\n                  <span className=\"truncate group-hover:overflow-visible\">{item.pickup_location}</span>\n                  <div className=\"absolute hidden group-hover:block bg-black text-white text-xs p-2 rounded shadow-lg z-10 mt-6 whitespace-nowrap\">\n                    {item.pickup_location}\n                  </div>\n                </div>\n\n                <div className=\"flex justify-between items-center text-xs\">\n                  <div className=\"flex items-center gap-1\">\n                    <Package className=\"h-4 w-4\" />\n                    <span className=\"font-medium\">{item.quantity}</span>\n                  </div>\n                  {item.condition && (\n                    <Badge variant=\"outline\" className=\"text-xs\">\n                      {item.condition}\n                    </Badge>\n                  )}\n                </div>\n\n                {item.expiry_date && (\n                  <div className=\"flex items-center gap-1 text-orange-600 text-xs\">\n                    <Clock className=\"h-4 w-4\" />\n                    <span>Expires: {new Date(item.expiry_date).toLocaleDateString()}</span>\n                  </div>\n                )}\n\n                <div className=\"flex gap-1 pt-2\">\n                  <Button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleEditItem(item);\n                    }}\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"flex-1 flex items-center gap-1 text-xs py-2 h-auto hover:scale-105 transition-all duration-200\"\n                  >\n                    <Edit className=\"h-3 w-3\" />\n                    Edit\n                  </Button>\n                  <Button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleDeleteItem(item);\n                    }}\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"flex items-center gap-1 text-red-600 hover:text-red-700 hover:bg-red-50 text-xs py-2 h-auto px-2 hover:scale-105 transition-all duration-200\"\n                    disabled={deleting === item.id}\n                  >\n                    <Trash2 className=\"h-3 w-3\" />\n                    {deleting === item.id ? \"...\" : \"Delete\"}\n                  </Button>\n                  {item.status !== \"completed\" && (\n                    <Button\n                      onClick={e => { e.stopPropagation(); handleMarkAsShared(item); }}\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"flex items-center gap-1 text-green-700 border-green-400 hover:bg-green-50 text-xs py-2 h-auto px-2 hover:scale-105 transition-all duration-200\"\n                      disabled={markingShared === item.id}\n                    >\n                      <CheckCircle className=\"h-3 w-3\" />\n                      {markingShared === item.id ? \"...\" : \"Shared\"}\n                    </Button>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n\n      <EditItemModal\n        item={editingItem}\n        isOpen={showEditModal}\n        onClose={() => setShowEditModal(false)}\n        onItemUpdated={handleItemUpdated}\n      />\n    </div>\n  )\n}\n","size_bytes":15878},"components/NotificationCenter.tsx":{"content":"\"use client\"\n\nimport { useState, useEffect, useRef } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\nimport { Bell, MessageCircle, Package, Users, AlertCircle } from \"lucide-react\"\n\ninterface Notification {\n  id: string\n  type: string\n  title: string\n  message: string\n  is_read: boolean\n  created_at: string\n  related_item_id?: string\n  related_claim_id?: string\n}\n\ninterface NotificationCenterProps {\n  onOpenChat: (claimId: string, otherUserName: string) => void\n  onNavigateToMyItems?: () => void\n}\n\nexport default function NotificationCenter({ onOpenChat, onNavigateToMyItems }: NotificationCenterProps) {\n  const { user } = useAuth()\n  const [notifications, setNotifications] = useState<Notification[]>([])\n  const [unreadCount, setUnreadCount] = useState(0)\n  const [isOpen, setIsOpen] = useState(false)\n  const [isTableMissing, setIsTableMissing] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const subscriptionRef = useRef<any>(null)\n  const channelRef = useRef<string>(\"\")\n\n  useEffect(() => {\n    if (user) {\n      fetchNotifications()\n    }\n\n    // Cleanup subscription when component unmounts or user changes\n    return () => {\n      if (subscriptionRef.current) {\n        console.log(\"🧹 Cleaning up notification subscription\")\n        subscriptionRef.current.unsubscribe()\n        subscriptionRef.current = null\n      }\n    }\n  }, [user])\n\n  // Also fetch notifications when dialog opens\n  useEffect(() => {\n    if (isOpen && user) {\n      fetchNotifications()\n    }\n  }, [isOpen, user])\n\n  const fetchNotifications = async () => {\n    if (!user) return\n\n    try {\n      setLoading(true)\n      console.log(\"📡 Fetching notifications for user:\", user.id)\n\n      const { data, error } = await supabase\n        .from(\"notifications\")\n        .select(\"*\")\n        .eq(\"user_id\", user.id)\n        .order(\"created_at\", { ascending: false })\n        .limit(20)\n\n      if (error) {\n        console.error(\"❌ Error fetching notifications:\", error)\n        // Check if the error is due to missing table\n        if (error.message.includes('relation \"public.notifications\" does not exist')) {\n          setIsTableMissing(true)\n          return\n        }\n      } else {\n        console.log(\"✅ Notifications fetched:\", data?.length || 0)\n        setNotifications(data || [])\n        setUnreadCount(data?.filter((n) => !n.is_read).length || 0)\n        setIsTableMissing(false)\n\n        // Set up real-time subscription only if we don't have one already\n        setupRealtimeSubscription()\n      }\n    } catch (error) {\n      console.error(\"💥 Unexpected error fetching notifications:\", error)\n      setIsTableMissing(true)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const setupRealtimeSubscription = () => {\n    if (!user) return\n\n    // Create unique channel name\n    const channelName = `notifications:${user.id}:${Date.now()}`\n\n    // Clean up existing subscription if it exists\n    if (subscriptionRef.current && channelRef.current) {\n      console.log(\"🔄 Cleaning up existing subscription:\", channelRef.current)\n      subscriptionRef.current.unsubscribe()\n      subscriptionRef.current = null\n    }\n\n    try {\n      console.log(\"🔔 Setting up notification subscription:\", channelName)\n\n      const channel = supabase\n        .channel(channelName)\n        .on(\n          \"postgres_changes\",\n          {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"notifications\",\n            filter: `user_id=eq.${user.id}`,\n          },\n          (payload) => {\n            console.log(\"🆕 New notification received:\", payload.new)\n            const newNotification = payload.new as Notification\n            setNotifications((prev) => [newNotification, ...prev])\n            setUnreadCount((prev) => prev + 1)\n            \n            // Show a browser notification if permitted\n            if ('Notification' in window && Notification.permission === 'granted') {\n              new Notification(newNotification.title, {\n                body: newNotification.message,\n                icon: '/placeholder-logo.png'\n              })\n            }\n          },\n        )\n        .on(\n          \"postgres_changes\",\n          {\n            event: \"UPDATE\",\n            schema: \"public\",\n            table: \"notifications\",\n            filter: `user_id=eq.${user.id}`,\n          },\n          (payload) => {\n            console.log(\"📝 Notification updated:\", payload.new)\n            const updatedNotification = payload.new as Notification\n            setNotifications((prev) => prev.map((n) => (n.id === updatedNotification.id ? updatedNotification : n)))\n            // Recalculate unread count\n            setNotifications((prev) => {\n              const newUnreadCount = prev.filter((n) => !n.is_read).length\n              setUnreadCount(newUnreadCount)\n              return prev\n            })\n          },\n        )\n        .subscribe((status) => {\n          console.log(\"📡 Subscription status:\", status)\n        })\n\n      subscriptionRef.current = channel\n      channelRef.current = channelName\n    } catch (error) {\n      console.error(\"❌ Error setting up subscription:\", error)\n    }\n  }\n\n  const markAsRead = async (notificationId: string) => {\n    if (isTableMissing) return\n\n    try {\n      const { error } = await supabase.from(\"notifications\").update({ is_read: true }).eq(\"id\", notificationId)\n\n      if (!error) {\n        setNotifications((prev) => prev.map((n) => (n.id === notificationId ? { ...n, is_read: true } : n)))\n        setUnreadCount((prev) => Math.max(0, prev - 1))\n      }\n    } catch (error) {\n      console.error(\"❌ Error marking notification as read:\", error)\n    }\n  }\n\n  const markAllAsRead = async () => {\n    if (!user || isTableMissing) return\n\n    try {\n      const { error } = await supabase\n        .from(\"notifications\")\n        .update({ is_read: true })\n        .eq(\"user_id\", user.id)\n        .eq(\"is_read\", false)\n\n      if (!error) {\n        setNotifications((prev) => prev.map((n) => ({ ...n, is_read: true })))\n        setUnreadCount(0)\n      }\n    } catch (error) {\n      console.error(\"❌ Error marking all notifications as read:\", error)\n    }\n  }\n\n  const clearAllNotifications = async () => {\n    if (!user) return\n    try {\n      await supabase.from(\"notifications\").delete().eq(\"user_id\", user.id)\n      setNotifications([])\n      setUnreadCount(0)\n    } catch (error) {\n      console.error(\"❌ Error clearing notifications:\", error)\n    }\n  }\n\n  const handleNotificationClick = async (notification: Notification) => {\n    if (!notification.is_read) {\n      await markAsRead(notification.id)\n    }\n\n    // Open chat for more notification types if related_claim_id exists\n    if (([\"message\", \"item_request\", \"status_update\"].includes(notification.type)) && notification.related_claim_id) {\n      try {\n        // Get the claim details and user names separately\n        const { data: claimData } = await supabase\n          .from(\"claims\")\n          .select(\"*\")\n          .eq(\"id\", notification.related_claim_id)\n          .single()\n\n        if (claimData) {\n          // Get the other user's name\n          const otherUserId = claimData.claimer_id === user?.id ? claimData.owner_id : claimData.claimer_id\n          const { data: otherUserProfile } = await supabase\n            .from(\"profiles\")\n            .select(\"full_name\")\n            .eq(\"id\", otherUserId)\n            .single()\n\n          const otherUserName = otherUserProfile?.full_name || \"User\"\n          onOpenChat(notification.related_claim_id, otherUserName)\n          setIsOpen(false)\n        }\n      } catch (error) {\n        console.error(\"❌ Error handling notification click:\", error)\n      }\n    }\n  }\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case \"message\":\n        return <MessageCircle className=\"h-4 w-4\" />\n      case \"item_request\":\n        return <Package className=\"h-4 w-4\" />\n      case \"collaboration\":\n        return <Users className=\"h-4 w-4\" />\n      default:\n        return <Bell className=\"h-4 w-4\" />\n    }\n  }\n\n  // Show setup message if table is missing\n  if (isTableMissing) {\n    return (\n      <Dialog open={isOpen} onOpenChange={setIsOpen}>\n        <DialogTrigger asChild>\n          <Button variant=\"outline\" size=\"sm\" className=\"relative\">\n            <AlertCircle className=\"h-4 w-4 text-orange-500\" />\n          </Button>\n        </DialogTrigger>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <AlertCircle className=\"h-5 w-5 text-orange-500\" />\n              Setup Required\n            </DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <p className=\"text-sm text-gray-600\">\n              The notification system needs to be set up. Please run the complete database setup script to enable\n              notifications and collaboration features.\n            </p>\n            <div className=\"bg-gray-100 p-3 rounded text-sm\">\n              <strong>Script to run:</strong>\n              <br />\n              <code>scripts/setup-complete-database.sql</code>\n            </div>\n            <Button onClick={() => setIsOpen(false)} className=\"w-full\">\n              Got it\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    )\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>\n        <Button variant=\"outline\" size=\"sm\" className=\"relative\">\n          <Bell className=\"h-4 w-4\" />\n          {unreadCount > 0 && (\n            <Badge className=\"absolute -top-2 -right-2 h-5 w-5 rounded-full p-0 text-xs bg-red-500\">\n              {unreadCount > 9 ? \"9+\" : unreadCount}\n            </Badge>\n          )}\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"max-w-md h-[600px] flex flex-col\">\n        <DialogHeader>\n          <div className=\"flex justify-between items-center\">\n            <DialogTitle>Notifications</DialogTitle>\n            <div className=\"flex gap-2\">\n              {unreadCount > 0 && (\n                <Button variant=\"ghost\" size=\"sm\" onClick={markAllAsRead}>\n                  Mark all read\n                </Button>\n              )}\n              {notifications.length > 0 && (\n                <Button variant=\"ghost\" size=\"sm\" onClick={clearAllNotifications} title=\"Clear all notifications\">\n                  🗑️\n                </Button>\n              )}\n            </div>\n          </div>\n        </DialogHeader>\n\n        <ScrollArea className=\"flex-1\">\n          {loading ? (\n            <div className=\"flex justify-center items-center h-32\">\n              <div className=\"text-sm\">Loading notifications...</div>\n            </div>\n          ) : (\n            <div className=\"space-y-2\">\n              {notifications.length === 0 ? (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <Bell className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                  <p>No notifications yet</p>\n                  <p className=\"text-xs mt-1\">You'll get notified when someone requests your items or sends messages</p>\n                </div>\n              ) : (\n                notifications.map((notification) => (\n                  <Card\n                    key={notification.id}\n                    className={`cursor-pointer transition-colors hover:bg-gray-50 ${\n                      !notification.is_read ? \"border-green-200 bg-green-50\" : \"\"\n                    }`}\n                    onClick={() => handleNotificationClick(notification)}\n                  >\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-start gap-3\">\n                        <div className=\"flex-shrink-0 mt-1\">{getNotificationIcon(notification.type)}</div>\n                        <div className=\"flex-1 min-w-0\">\n                          <div className=\"flex items-center gap-2 mb-1\">\n                            <h4 className=\"font-medium text-sm\">{notification.title}</h4>\n                            {!notification.is_read && (\n                              <div className=\"w-2 h-2 bg-green-500 rounded-full flex-shrink-0\" />\n                            )}\n                          </div>\n                          <p className=\"text-sm text-gray-600 line-clamp-2\">{notification.message}</p>\n                          <p className=\"text-xs text-gray-400 mt-1\">\n                            {new Date(notification.created_at).toLocaleString()}\n                          </p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))\n              )}\n            </div>\n          )}\n        </ScrollArea>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","size_bytes":13181},"components/Profile.tsx":{"content":"import { useState, useEffect } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\n\nexport default function Profile() {\n  const { user } = useAuth()\n  const [profile, setProfile] = useState({ full_name: \"\", bio: \"\" })\n  const [loading, setLoading] = useState(false)\n  const [editing, setEditing] = useState(false)\n  const [success, setSuccess] = useState(false)\n\n  useEffect(() => {\n    if (!user) return\n    setLoading(true)\n    const fetchProfile = async () => {\n      const { data } = await supabase\n        .from(\"profiles\")\n        .select(\"full_name, bio\")\n        .eq(\"id\", user.id)\n        .single()\n      if (data) setProfile({ full_name: data.full_name || \"\", bio: data.bio || \"\" })\n      setLoading(false)\n    }\n    fetchProfile()\n  }, [user])\n\n  const handleSave = async () => {\n    if (!user) return\n    setLoading(true)\n    await supabase\n      .from(\"profiles\")\n      .update({ full_name: profile.full_name, bio: profile.bio })\n      .eq(\"id\", user.id)\n    setEditing(false)\n    setSuccess(true)\n    setLoading(false)\n    setTimeout(() => setSuccess(false), 2000)\n  }\n\n  if (!user) return <div className=\"p-8 text-center\">Please sign in to view your profile.</div>\n\n  return (\n    <div className=\"max-w-lg mx-auto mt-10 bg-white rounded-xl shadow-lg p-8\">\n      <h2 className=\"text-2xl font-bold mb-6 text-green-700\">My Profile</h2>\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Full Name</label>\n        <Input\n          value={profile.full_name}\n          onChange={e => setProfile({ ...profile, full_name: e.target.value })}\n          disabled={!editing}\n        />\n      </div>\n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium mb-1\">Bio</label>\n        <Textarea\n          value={profile.bio}\n          onChange={e => setProfile({ ...profile, bio: e.target.value })}\n          disabled={!editing}\n          rows={3}\n        />\n      </div>\n      <div className=\"flex gap-2 mt-6\">\n        {editing ? (\n          <>\n            <Button onClick={handleSave} disabled={loading} className=\"bg-green-600 hover:bg-green-700\">\n              {loading ? \"Saving...\" : \"Save\"}\n            </Button>\n            <Button variant=\"outline\" onClick={() => setEditing(false)} disabled={loading}>\n              Cancel\n            </Button>\n          </>\n        ) : (\n          <Button onClick={() => setEditing(true)} className=\"bg-green-600 hover:bg-green-700\">\n            Edit Profile\n          </Button>\n        )}\n        {success && <span className=\"text-green-600 ml-2 self-center\">Saved!</span>}\n      </div>\n    </div>\n  )\n} ","size_bytes":2808},"components/SubmitStoryModal.tsx":{"content":"\"use client\"\n\nimport { useState } from \"react\"\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Button } from \"@/components/ui/button\"\nimport { supabase } from \"@/lib/supabase\"\n\ninterface SubmitStoryModalProps {\n  open: boolean\n  onClose: () => void\n  onSuccess: () => void\n}\n\nexport default function SubmitStoryModal({ open, onClose, onSuccess }: SubmitStoryModalProps) {\n  const [name, setName] = useState(\"\")\n  const [location, setLocation] = useState(\"\")\n  const [story, setStory] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [success, setSuccess] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setError(null)\n    setSuccess(false)\n    if (!name || !location || !story) {\n      setError(\"All fields are required.\")\n      setLoading(false)\n      return\n    }\n    const { error } = await supabase.from(\"stories\").insert([\n      { name, location, story, status: \"pending\" }\n    ])\n    setLoading(false)\n    if (error) {\n      setError(\"Failed to submit story. Please try again.\")\n    } else {\n      setSuccess(true)\n      setName(\"\")\n      setLocation(\"\")\n      setStory(\"\")\n      onSuccess()\n      setTimeout(() => {\n        setSuccess(false)\n        onClose()\n      }, 1500)\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onClose}>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>Submit Your Story</DialogTitle>\n        </DialogHeader>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <Input\n            placeholder=\"Your Name\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n            required\n          />\n          <Input\n            placeholder=\"Your Location (e.g. Lilongwe)\"\n            value={location}\n            onChange={e => setLocation(e.target.value)}\n            required\n          />\n          <Textarea\n            placeholder=\"Share your Tigawane moment...\"\n            value={story}\n            onChange={e => setStory(e.target.value)}\n            rows={4}\n            required\n          />\n          {error && <div className=\"text-red-500 text-sm\">{error}</div>}\n          {success && <div className=\"text-green-600 text-sm\">Story submitted! Thank you.</div>}\n          <div className=\"flex justify-end gap-2\">\n            <Button type=\"button\" variant=\"outline\" onClick={onClose} disabled={loading}>\n              Cancel\n            </Button>\n            <Button type=\"submit\" disabled={loading}>\n              {loading ? \"Submitting...\" : \"Submit\"}\n            </Button>\n          </div>\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}","size_bytes":2864},"components/theme-provider.tsx":{"content":"'use client'\n\nimport * as React from 'react'\nimport {\n  ThemeProvider as NextThemesProvider,\n  type ThemeProviderProps,\n} from 'next-themes'\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}\n","size_bytes":292},"contexts/AdminAuthContext.tsx":{"content":"\"use client\"\n\nimport type React from \"react\"\nimport { createContext, useContext, useEffect, useState } from \"react\"\nimport type { User } from \"@supabase/supabase-js\"\nimport { supabase } from \"@/lib/supabase\"\n\ninterface AdminAuthContextType {\n  user: User | null\n  isAdmin: boolean\n  adminRole: string | null\n  loading: boolean\n  error: string | null\n  signIn: (email: string, password: string) => Promise<void>\n  signOut: () => Promise<void>\n}\n\nconst AdminAuthContext = createContext<AdminAuthContextType>({\n  user: null,\n  isAdmin: false,\n  adminRole: null,\n  loading: true,\n  error: null,\n  signIn: async () => {},\n  signOut: async () => {},\n})\n\nexport const useAdminAuth = () => {\n  const context = useContext(AdminAuthContext)\n  if (!context) {\n    throw new Error(\"useAdminAuth must be used within an AdminAuthProvider\")\n  }\n  return context\n}\n\nexport function AdminAuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null)\n  const [isAdmin, setIsAdmin] = useState(false)\n  const [adminRole, setAdminRole] = useState<string | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    // Get initial session\n    const getInitialSession = async () => {\n      try {\n        const {\n          data: { session },\n          error,\n        } = await supabase.auth.getSession()\n\n        if (error) {\n          console.error(\"Error getting session:\", error)\n          setError(error.message)\n        } else if (session?.user) {\n          setUser(session.user)\n          await checkAdminStatus(session.user.id)\n        }\n      } catch (err: any) {\n        console.error(\"Unexpected error getting session:\", err)\n        setError(err.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    getInitialSession()\n\n    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      console.log(\"Admin auth state changed:\", event)\n      setUser(session?.user ?? null)\n      setError(null)\n\n      if (session?.user) {\n        await checkAdminStatus(session.user.id)\n      } else {\n        setIsAdmin(false)\n        setAdminRole(null)\n      }\n\n      setLoading(false)\n    })\n\n    return () => subscription.unsubscribe()\n  }, [])\n\n  const checkAdminStatus = async (userId: string) => {\n    try {\n      console.log(\"Checking admin status for user:\", userId)\n\n      // Use the safe RPC function that bypasses RLS\n      const { data, error } = await supabase.rpc(\"check_user_admin_status\", {\n        user_uuid: userId,\n      })\n\n      console.log(\"Admin status check result:\", { data, error })\n\n      if (error) {\n        console.error(\"Error with RPC admin check:\", error)\n        // Fallback: try direct query with service role or simpler approach\n        setIsAdmin(false)\n        setAdminRole(null)\n      } else if (data && data.length > 0) {\n        const result = data[0]\n        setIsAdmin(result.is_admin)\n        setAdminRole(result.is_admin ? result.admin_role : null)\n        console.log(\"Admin status set:\", { isAdmin: result.is_admin, role: result.admin_role })\n      } else {\n        console.log(\"No admin data returned\")\n        setIsAdmin(false)\n        setAdminRole(null)\n      }\n    } catch (err) {\n      console.error(\"Unexpected error checking admin status:\", err)\n      setIsAdmin(false)\n      setAdminRole(null)\n    }\n  }\n\n  const signIn = async (email: string, password: string) => {\n    try {\n      setLoading(true)\n      setError(null)\n\n      console.log(\"Attempting admin sign in for:\", email)\n\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      if (data.user) {\n        console.log(\"Authentication successful, checking admin status...\")\n        setUser(data.user)\n\n        // Use the safe RPC function to check admin status\n        const { data: adminCheck, error: adminError } = await supabase.rpc(\"check_user_admin_status\", {\n          user_uuid: data.user.id,\n        })\n\n        console.log(\"Admin check during sign in:\", { adminCheck, adminError })\n\n        if (adminError || !adminCheck || adminCheck.length === 0 || !adminCheck[0].is_admin) {\n          console.log(\"User is not an admin, signing out...\")\n          await supabase.auth.signOut()\n\n          const errorMessage = `Access denied. The email \"${email}\" is not registered as an admin. Please contact your system administrator to get admin access.`\n          throw new Error(errorMessage)\n        }\n\n        // User is admin, set the status\n        const result = adminCheck[0]\n        setIsAdmin(true)\n        setAdminRole(result.admin_role)\n        console.log(\"Admin sign in successful with role:\", result.admin_role)\n      }\n    } catch (error: any) {\n      console.error(\"Admin sign in error:\", error)\n      setError(error.message)\n      setUser(null)\n      setIsAdmin(false)\n      setAdminRole(null)\n      throw error\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const signOut = async () => {\n    try {\n      setLoading(true)\n      \n      // Check if there's an active session first\n      const { data: { session } } = await supabase.auth.getSession()\n      \n      if (!session) {\n        // No active session, just update local state\n        setUser(null)\n        setIsAdmin(false)\n        setAdminRole(null)\n        setError(null)\n        console.log(\"🔒 No active admin session, updating local state\")\n        return\n      }\n\n      const { error } = await supabase.auth.signOut()\n      if (error) {\n        console.error(\"Error signing out:\", error)\n        setError(error.message)\n      } else {\n        setUser(null)\n        setIsAdmin(false)\n        setAdminRole(null)\n        setError(null)\n      }\n    } catch (err: any) {\n      console.error(\"Unexpected error signing out:\", err)\n      setError(err.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <AdminAuthContext.Provider\n      value={{\n        user,\n        isAdmin,\n        adminRole,\n        loading,\n        error,\n        signIn,\n        signOut,\n      }}\n    >\n      {children}\n    </AdminAuthContext.Provider>\n  )\n}\n","size_bytes":6256},"contexts/AuthContext.tsx":{"content":"\"use client\"\n\nimport { createContext, useContext, useEffect, useState } from \"react\"\nimport type { User } from \"@supabase/supabase-js\"\nimport { supabase } from \"@/lib/supabase\"\n\ninterface AuthContextType {\n  user: User | null\n  loading: boolean\n  error: string | null\n  signOut: () => Promise<void>\n  refreshUser: () => Promise<void>\n}\n\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  loading: true,\n  error: null,\n  signOut: async () => {},\n  refreshUser: async () => {},\n})\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  // 🔁 Get initial session on mount\n  useEffect(() => {\n    const getInitialSession = async () => {\n      try {\n        const { data, error } = await supabase.auth.getSession()\n        if (error) {\n          console.error(\"Session error:\", error)\n          setError(error.message)\n        }\n        setUser(data?.session?.user ?? null)\n      } catch (err: any) {\n        console.error(\"Unexpected error:\", err)\n        setError(err.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    getInitialSession()\n\n    // 🔁 Listen to auth changes (login, logout, token refresh)\n    const { data: listener } = supabase.auth.onAuthStateChange(async (event, session) => {\n      console.log(\"🔑 Auth change:\", event)\n      setUser(session?.user ?? null)\n      setError(null)\n\n      // ✅ Important: stop loading even if session is null\n      setLoading(false)\n\n      // 👤 Create profile only on signup\n      if (event === \"SIGNED_UP\" && session?.user) {\n        try {\n          const { data: existingProfile, error: profileCheckError } = await supabase\n            .from(\"profiles\")\n            .select(\"id\")\n            .eq(\"id\", session.user.id)\n            .single()\n\n          if (!existingProfile && !profileCheckError) {\n            const { error: insertError } = await supabase.from(\"profiles\").insert({\n              id: session.user.id,\n              email: session.user.email || \"\",\n              full_name: session.user.user_metadata?.full_name || null,\n              phone: session.user.user_metadata?.phone || null,\n              location: session.user.user_metadata?.location || null,\n            })\n\n            if (insertError) {\n              console.error(\"Error creating profile:\", insertError)\n            } else {\n              console.log(\"✅ Profile created\")\n            }\n          }\n        } catch (err) {\n          console.error(\"Error checking or creating profile:\", err)\n        }\n      }\n    })\n\n    return () => {\n      listener?.subscription.unsubscribe()\n    }\n  }, [])\n\n  // 🔁 Manual refresh if needed\n  const refreshUser = async () => {\n    setLoading(true)\n    try {\n      const { data, error } = await supabase.auth.getSession()\n      if (error) setError(error.message)\n      setUser(data?.session?.user ?? null)\n    } catch (err: any) {\n      setError(err.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const signOut = async () => {\n    setLoading(true)\n    try {\n      // Check if there's an active session first\n      const { data: { session } } = await supabase.auth.getSession()\n      \n      if (!session) {\n        // No active session, just update local state\n        setUser(null)\n        setError(null)\n        console.log(\"🔒 No active session, updating local state\")\n        return\n      }\n\n      const { error } = await supabase.auth.signOut()\n      if (error) {\n        setError(error.message)\n        alert(`Error signing out: ${error.message}`)\n      } else {\n        setUser(null)\n        setError(null)\n        console.log(\"🔒 Signed out\")\n      }\n    } catch (err: any) {\n      setError(err.message)\n      alert(`Unexpected error: ${err.message}`)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, loading, error, signOut, refreshUser }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n","size_bytes":4256},"contexts/LocationContext.tsx":{"content":"\n\"use client\"\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { getCurrentLocation, Location, getCityCoordinates, MALAWI_CITIES } from '@/lib/locationService';\n\ninterface LocationContextType {\n  userLocation: Location | null;\n  selectedLocation: Location | null;\n  locationRadius: number;\n  isLoadingLocation: boolean;\n  locationError: string | null;\n  setUserLocation: (location: Location | null) => void;\n  setSelectedLocation: (location: Location | null) => void;\n  setLocationRadius: (radius: number) => void;\n  getCurrentUserLocation: () => Promise<void>;\n  clearLocationError: () => void;\n  availableCities: string[];\n}\n\nconst LocationContext = createContext<LocationContextType | undefined>(undefined);\n\nexport const useLocation = () => {\n  const context = useContext(LocationContext);\n  if (context === undefined) {\n    throw new Error('useLocation must be used within a LocationProvider');\n  }\n  return context;\n};\n\ninterface LocationProviderProps {\n  children: ReactNode;\n}\n\nexport const LocationProvider: React.FC<LocationProviderProps> = ({ children }) => {\n  const [userLocation, setUserLocation] = useState<Location | null>(null);\n  const [selectedLocation, setSelectedLocation] = useState<Location | null>(null);\n  const [locationRadius, setLocationRadius] = useState(10); // Default 10km radius\n  const [isLoadingLocation, setIsLoadingLocation] = useState(false);\n  const [locationError, setLocationError] = useState<string | null>(null);\n\n  const availableCities = Object.keys(MALAWI_CITIES);\n\n  const getCurrentUserLocation = async () => {\n    setIsLoadingLocation(true);\n    setLocationError(null);\n    \n    try {\n      const location = await getCurrentLocation();\n      setUserLocation(location);\n      setSelectedLocation(location); // Set as default selected location\n      console.log('📍 User location obtained:', location);\n    } catch (error) {\n      console.error('❌ Error getting user location:', error);\n      setLocationError(error instanceof Error ? error.message : 'Failed to get location');\n      \n      // Fallback to Lilongwe if geolocation fails\n      const fallbackLocation = getCityCoordinates('Lilongwe');\n      if (fallbackLocation) {\n        setSelectedLocation(fallbackLocation);\n        console.log('📍 Using fallback location (Lilongwe):', fallbackLocation);\n      }\n    } finally {\n      setIsLoadingLocation(false);\n    }\n  };\n\n  const clearLocationError = () => {\n    setLocationError(null);\n  };\n\n  // Try to get user location on mount\n  useEffect(() => {\n    getCurrentUserLocation();\n  }, []);\n\n  const value: LocationContextType = {\n    userLocation,\n    selectedLocation,\n    locationRadius,\n    isLoadingLocation,\n    locationError,\n    setUserLocation,\n    setSelectedLocation,\n    setLocationRadius,\n    getCurrentUserLocation,\n    clearLocationError,\n    availableCities,\n  };\n\n  return (\n    <LocationContext.Provider value={value}>\n      {children}\n    </LocationContext.Provider>\n  );\n};","size_bytes":3002},"lib/locationService.ts":{"content":"// Location service for handling GPS coordinates and geocoding\n\nexport interface Location {\n  latitude: number;\n  longitude: number;\n  address?: string;\n  city?: string;\n  area?: string;\n}\n\nexport interface LocationWithDistance extends Location {\n  distance: number; // in kilometers\n}\n\n// Get user's current location using browser geolocation\nexport const getCurrentLocation = (): Promise<Location> => {\n  return new Promise((resolve, reject) => {\n    if (!navigator.geolocation) {\n      reject(new Error('Geolocation is not supported by this browser'));\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        resolve({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        });\n      },\n      (error) => {\n        reject(new Error(`Geolocation error: ${error.message}`));\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 300000, // 5 minutes\n      }\n    );\n  });\n};\n\n// Calculate distance between two points using Haversine formula\nexport const calculateDistance = (\n  lat1: number,\n  lon1: number,\n  lat2: number,\n  lon2: number\n): number => {\n  const R = 6371; // Earth's radius in kilometers\n  const dLat = (lat2 - lat1) * (Math.PI / 180);\n  const dLon = (lon2 - lon1) * (Math.PI / 180);\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(lat1 * (Math.PI / 180)) *\n      Math.cos(lat2 * (Math.PI / 180)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\n\n// Format distance for display\nexport const formatDistance = (distance: number): string => {\n  if (distance < 1) {\n    return `${Math.round(distance * 1000)}m`;\n  }\n  return `${distance.toFixed(1)}km`;\n};\n\n// Geocode an address to coordinates (using a free geocoding service)\nexport const geocodeAddress = async (address: string): Promise<Location> => {\n  try {\n    // Using Nominatim (OpenStreetMap) for free geocoding\n    const response = await fetch(\n      `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\n        address\n      )}&limit=1`\n    );\n    \n    if (!response.ok) {\n      throw new Error('Geocoding request failed');\n    }\n\n    const data = await response.json();\n    \n    if (data.length === 0) {\n      throw new Error('Address not found');\n    }\n\n    const result = data[0];\n    return {\n      latitude: parseFloat(result.lat),\n      longitude: parseFloat(result.lon),\n      address: result.display_name,\n    };\n  } catch (error) {\n    console.error('Geocoding error:', error);\n    throw new Error('Failed to geocode address');\n  }\n};\n\n// Reverse geocode coordinates to address\nexport const reverseGeocode = async (\n  latitude: number,\n  longitude: number\n): Promise<string> => {\n  try {\n    const response = await fetch(\n      `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&zoom=16`\n    );\n    \n    if (!response.ok) {\n      throw new Error('Reverse geocoding request failed');\n    }\n\n    const data = await response.json();\n    return data.display_name || 'Unknown location';\n  } catch (error) {\n    console.error('Reverse geocoding error:', error);\n    return 'Unknown location';\n  }\n};\n\n// Common cities in Malawi with their coordinates\nexport const MALAWI_CITIES = {\n  'Lilongwe': { latitude: -13.9626, longitude: 33.7741 },\n  'Blantyre': { latitude: -15.7861, longitude: 35.0058 },\n  'Mzuzu': { latitude: -11.4587, longitude: 34.0151 },\n  'Zomba': { latitude: -15.3833, longitude: 35.3333 },\n  'Kasungu': { latitude: -13.0333, longitude: 33.4833 },\n  'Mangochi': { latitude: -14.4667, longitude: 35.2667 },\n  'Karonga': { latitude: -9.9333, longitude: 33.9333 },\n  'Salima': { latitude: -13.7833, longitude: 34.4333 },\n  'Nkhotakota': { latitude: -12.9167, longitude: 34.3000 },\n  'Dedza': { latitude: -14.3667, longitude: 34.3333 },\n};\n\n// Get coordinates for a city\nexport const getCityCoordinates = (cityName: string): Location | null => {\n  const city = MALAWI_CITIES[cityName as keyof typeof MALAWI_CITIES];\n  return city ? { ...city, city: cityName } : null;\n};\n\n// Validate coordinates\nexport const isValidCoordinates = (latitude: number, longitude: number): boolean => {\n  return (\n    latitude >= -90 &&\n    latitude <= 90 &&\n    longitude >= -180 &&\n    longitude <= 180 &&\n    !isNaN(latitude) &&\n    !isNaN(longitude)\n  );\n};\n\n// Default radius options for location filtering\nexport const RADIUS_OPTIONS = [\n  { value: 1, label: '1 km' },\n  { value: 5, label: '5 km' },\n  { value: 10, label: '10 km' },\n  { value: 25, label: '25 km' },\n  { value: 50, label: '50 km' },\n  { value: 100, label: '100 km' },\n];","size_bytes":4712},"lib/supabase.ts":{"content":"import { createClient } from \"@supabase/supabase-js\"\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || \"https://whchjypvzwzkfbtazqeu.supabase.co\"\nconst supabaseAnonKey =\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ||\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndoY2hqeXB2end6a2ZidGF6cWV1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAwMTY5NTcsImV4cCI6MjA2NTU5Mjk1N30.Uik_7_WWJcLlDO1hSE9BVbmy5887G6Xm22yu8X3DSZE\"\n\nif (!supabaseUrl) {\n  throw new Error(\"Missing NEXT_PUBLIC_SUPABASE_URL environment variable\")\n}\n\nif (!supabaseAnonKey) {\n  throw new Error(\"Missing NEXT_PUBLIC_SUPABASE_ANON_KEY environment variable\")\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\nexport type Database = {\n  public: {\n    Tables: {\n      profiles: {\n        Row: {\n          id: string\n          email: string\n          full_name: string | null\n          phone: string | null\n          location: string | null\n          created_at: string\n        }\n        Insert: {\n          id: string\n          email: string\n          full_name?: string | null\n          phone?: string | null\n          location?: string | null\n          created_at?: string\n        }\n        Update: {\n          id?: string\n          email?: string\n          full_name?: string | null\n          phone?: string | null\n          location?: string | null\n          created_at?: string\n        }\n      }\n      food_items: {\n        Row: {\n          id: string\n          title: string\n          description: string | null\n          category: string\n          quantity: string\n          expiry_date: string | null\n          pickup_location: string\n          image_url: string | null\n          user_id: string\n          status: \"available\" | \"claimed\" | \"completed\"\n          created_at: string\n        }\n        Insert: {\n          id?: string\n          title: string\n          description?: string | null\n          category: string\n          quantity: string\n          expiry_date?: string | null\n          pickup_location: string\n          image_url?: string | null\n          user_id: string\n          status?: \"available\" | \"claimed\" | \"completed\"\n          created_at?: string\n        }\n        Update: {\n          id?: string\n          title?: string\n          description?: string | null\n          category?: string\n          quantity?: string\n          expiry_date?: string | null\n          pickup_location?: string\n          image_url?: string | null\n          user_id?: string\n          status?: \"available\" | \"claimed\" | \"completed\"\n          created_at?: string\n        }\n      }\n      claims: {\n        Row: {\n          id: string\n          food_item_id: string\n          claimer_id: string\n          owner_id: string\n          status: \"pending\" | \"accepted\" | \"rejected\" | \"completed\"\n          message: string | null\n          created_at: string\n        }\n        Insert: {\n          id?: string\n          food_item_id: string\n          claimer_id: string\n          owner_id: string\n          status?: \"pending\" | \"accepted\" | \"rejected\" | \"completed\"\n          message?: string | null\n          created_at?: string\n        }\n        Update: {\n          id?: string\n          food_item_id?: string\n          claimer_id?: string\n          owner_id?: string\n          status?: \"pending\" | \"accepted\" | \"rejected\" | \"completed\"\n          message?: string | null\n          created_at?: string\n        }\n      }\n    }\n  }\n}\n","size_bytes":3432},"lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"styles/globals.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n}\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 0 0% 3.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 0 0% 3.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 0 0% 3.9%;\n    --primary: 0 0% 9%;\n    --primary-foreground: 0 0% 98%;\n    --secondary: 0 0% 96.1%;\n    --secondary-foreground: 0 0% 9%;\n    --muted: 0 0% 96.1%;\n    --muted-foreground: 0 0% 45.1%;\n    --accent: 0 0% 96.1%;\n    --accent-foreground: 0 0% 9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 89.8%;\n    --input: 0 0% 89.8%;\n    --ring: 0 0% 3.9%;\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem;\n    --sidebar-background: 0 0% 98%;\n    --sidebar-foreground: 240 5.3% 26.1%;\n    --sidebar-primary: 240 5.9% 10%;\n    --sidebar-primary-foreground: 0 0% 98%;\n    --sidebar-accent: 240 4.8% 95.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 220 13% 91%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n  .dark {\n    --background: 0 0% 3.9%;\n    --foreground: 0 0% 98%;\n    --card: 0 0% 3.9%;\n    --card-foreground: 0 0% 98%;\n    --popover: 0 0% 3.9%;\n    --popover-foreground: 0 0% 98%;\n    --primary: 0 0% 98%;\n    --primary-foreground: 0 0% 9%;\n    --secondary: 0 0% 14.9%;\n    --secondary-foreground: 0 0% 98%;\n    --muted: 0 0% 14.9%;\n    --muted-foreground: 0 0% 63.9%;\n    --accent: 0 0% 14.9%;\n    --accent-foreground: 0 0% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 14.9%;\n    --input: 0 0% 14.9%;\n    --ring: 0 0% 83.1%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n    --sidebar-background: 240 5.9% 10%;\n    --sidebar-foreground: 240 4.8% 95.9%;\n    --sidebar-primary: 224.3 76.3% 48%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 240 4.8% 95.9%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 217.2 91.2% 59.8%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n","size_bytes":2428},"types/global.d.ts":{"content":"/// <reference types=\"react\" />\n/// <reference types=\"react-dom\" />\n\ndeclare namespace JSX {\n  interface IntrinsicElements {\n    [elemName: string]: any;\n  }\n}\n\ndeclare module '*.svg' {\n  const content: any;\n  export default content;\n}\n\ndeclare module '*.png' {\n  const content: any;\n  export default content;\n}\n\ndeclare module '*.jpg' {\n  const content: any;\n  export default content;\n}\n\ndeclare module '*.jpeg' {\n  const content: any;\n  export default content;\n}\n\ndeclare module '*.gif' {\n  const content: any;\n  export default content;\n}\n\ndeclare module '*.webp' {\n  const content: any;\n  export default content;\n}\n","size_bytes":618},"types/react.d.ts":{"content":"declare module 'react' {\n  export = React;\n  export as namespace React;\n}\n\ndeclare namespace React {\n  interface ReactElement<P = any, T extends string | JSXElementConstructor<any> = string | JSXElementConstructor<any>> {\n    type: T;\n    props: P;\n    key: Key | null;\n  }\n\n  type JSXElementConstructor<P> = ((props: P) => ReactElement | null) | (new (props: P) => Component<P, any>);\n\n  interface Component<P = {}, S = {}, SS = any> extends ComponentLifecycle<P, S, SS> {}\n\n  interface ComponentLifecycle<P, S, SS = any> {}\n\n  type Key = string | number;\n\n  interface ReactNode {\n    [key: string]: any;\n  }\n\n  interface ReactPortal extends ReactElement {\n    key: null | string;\n    children: ReactNode;\n  }\n\n  type ReactText = string | number;\n  type ReactChild = ReactElement | ReactText;\n\n  type ReactFragment = {} | Iterable<ReactNode>;\n\n  type ReactNode = ReactChild | ReactFragment | ReactPortal | boolean | null | undefined;\n}\n\ndeclare module 'react-dom' {\n  export = ReactDOM;\n  export as namespace ReactDOM;\n}\n\ndeclare namespace ReactDOM {\n  function render(element: React.ReactElement, container: Element | null): void;\n  function createPortal(children: React.ReactNode, container: Element): React.ReactPortal;\n}\n","size_bytes":1226},"app/admin/page.tsx":{"content":"\"use client\"\n\nimport { AdminAuthProvider, useAdminAuth } from \"@/contexts/AdminAuthContext\"\nimport AdminDashboard from \"@/components/admin/AdminDashboard\"\nimport AdminLogin from \"@/components/admin/AdminLogin\"\nimport AdminLoading from \"@/components/admin/AdminLoading\"\nimport StoriesManager from \"@/components/admin/StoriesManager\"\n\nfunction AdminPageContent() {\n  const { user, isAdmin, loading } = useAdminAuth()\n\n  if (loading) {\n    return <AdminLoading />\n  }\n\n  if (!user || !isAdmin) {\n    return <AdminLogin />\n  }\n\n  return <AdminDashboard />\n}\n\nexport default function AdminPage() {\n  return (\n    <AdminAuthProvider>\n      <AdminPageContent />\n    </AdminAuthProvider>\n  )\n}\n","size_bytes":686},"app/profile/page.tsx":{"content":"\"use client\"\n\nimport Profile from \"@/components/Profile\"\n\nexport default function ProfilePage() {\n  return <Profile />\n} ","size_bytes":121},"components/admin/AdminDashboard.tsx":{"content":"\"use client\"\n\nimport { useState, useEffect, lazy, Suspense } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAdminAuth } from \"@/contexts/AdminAuthContext\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { BarChart3, Users, Package, Flag, Settings, TrendingUp, LogOut, Shield } from \"lucide-react\"\nimport AdminLoading from \"./AdminLoading\"\nimport { StoriesSkeleton } from \"./AdminSkeleton\"\n\n// Lazy load admin components for better performance\nconst ListingsManager = lazy(() => import(\"./ListingsManager\"))\nconst ReportsManager = lazy(() => import(\"./ReportsManager\"))\nconst CategoriesManager = lazy(() => import(\"./CategoriesManager\"))\nconst UsersManager = lazy(() => import(\"./UsersManager\"))\nconst Analytics = lazy(() => import(\"./Analytics\"))\nconst StoriesManager = lazy(() => import(\"./StoriesManager\"))\n\ninterface DashboardStats {\n  totalItems: number\n  activeItems: number\n  totalUsers: number\n  pendingReports: number\n  weeklyItems: number\n  topCategory: string\n}\n\nexport default function AdminDashboard() {\n  const { user, isAdmin, adminRole, loading: authLoading, signOut } = useAdminAuth()\n  const [loading, setLoading] = useState(true)\n  const [stats, setStats] = useState<DashboardStats>({\n    totalItems: 0,\n    activeItems: 0,\n    totalUsers: 0,\n    pendingReports: 0,\n    weeklyItems: 0,\n    topCategory: \"\",\n  })\n\n  useEffect(() => {\n    if (!authLoading && isAdmin) {\n      fetchDashboardStats()\n    }\n  }, [authLoading, isAdmin])\n\n  const fetchDashboardStats = async () => {\n    try {\n      // Use Promise.all to run all queries in parallel for faster loading\n      const [\n        totalItemsResult,\n        activeItemsResult,\n        totalUsersResult,\n        pendingReportsResult,\n        weeklyItemsResult,\n        categoryDataResult\n      ] = await Promise.all([\n      // Get total items\n        supabase.from(\"items\").select(\"*\", { count: \"exact\", head: true }),\n\n      // Get active items\n        supabase\n        .from(\"items\")\n        .select(\"*\", { count: \"exact\", head: true })\n          .in(\"status\", [\"available\", \"requested\"]),\n\n      // Get total users\n        supabase.from(\"profiles\").select(\"*\", { count: \"exact\", head: true }),\n\n      // Get pending reports\n        supabase\n        .from(\"reports\")\n        .select(\"*\", { count: \"exact\", head: true })\n          .eq(\"status\", \"pending\"),\n\n      // Get weekly items (last 7 days)\n        (() => {\n      const weekAgo = new Date()\n      weekAgo.setDate(weekAgo.getDate() - 7)\n          return supabase\n        .from(\"items\")\n        .select(\"*\", { count: \"exact\", head: true })\n        .gte(\"created_at\", weekAgo.toISOString())\n        })(),\n\n        // Get top category (limit to 500 for better performance)\n        supabase.from(\"items\").select(\"category\").limit(500)\n      ])\n\n      // Process category data\n      const categoryCounts = categoryDataResult.data?.reduce((acc: any, item) => {\n        acc[item.category] = (acc[item.category] || 0) + 1\n        return acc\n      }, {})\n\n      const topCategory = Object.keys(categoryCounts || {}).reduce(\n        (a, b) => ((categoryCounts || {})[a] > (categoryCounts || {})[b] ? a : b),\n        \"\",\n      )\n\n      setStats({\n        totalItems: totalItemsResult.count || 0,\n        activeItems: activeItemsResult.count || 0,\n        totalUsers: totalUsersResult.count || 0,\n        pendingReports: pendingReportsResult.count || 0,\n        weeklyItems: weeklyItemsResult.count || 0,\n        topCategory: topCategory || \"N/A\",\n      })\n    } catch (error) {\n      console.error(\"Error fetching dashboard stats:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleSignOut = async () => {\n    try {\n      await signOut()\n    } catch (error) {\n      console.error(\"Error signing out:\", error)\n    }\n  }\n\n  // Show loading while checking auth\n  if (authLoading || loading) {\n    return <AdminLoading />\n  }\n\n  // This should not happen as the parent component handles auth,\n  // but keeping as fallback\n  if (!isAdmin) {\n    return null\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <header className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-2xl\">🤝</span>\n              <h1 className=\"text-xl font-bold text-green-700\">Tigawane Admin</h1>\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <div className=\"flex items-center gap-2\">\n                <Shield className=\"h-4 w-4 text-green-600\" />\n                <span className=\"text-sm text-gray-600\">{user?.email}</span>\n                <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\n                  {adminRole === \"super_admin\" ? \"Super Admin\" : \"Admin\"}\n                </Badge>\n              </div>\n              <Button variant=\"outline\" size=\"sm\" onClick={handleSignOut} className=\"flex items-center gap-2\">\n                <LogOut className=\"h-4 w-4\" />\n                <span className=\"hidden sm:inline\">Sign Out</span>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Dashboard Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Total Items</CardTitle>\n              <Package className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{stats.totalItems}</div>\n              <p className=\"text-xs text-muted-foreground\">{stats.activeItems} currently active</p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Total Users</CardTitle>\n              <Users className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{stats.totalUsers}</div>\n              <p className=\"text-xs text-muted-foreground\">Registered community members</p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Pending Reports</CardTitle>\n              <Flag className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-red-600\">{stats.pendingReports}</div>\n              <p className=\"text-xs text-muted-foreground\">Require review</p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">This Week</CardTitle>\n              <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-green-600\">{stats.weeklyItems}</div>\n              <p className=\"text-xs text-muted-foreground\">New items shared</p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Main Content Tabs */}\n        <Tabs defaultValue=\"listings\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-6 max-w-2xl mx-auto mb-8\">\n            <TabsTrigger value=\"listings\" className=\"flex flex-col items-center gap-1 text-xs p-2\">\n              <Package className=\"h-4 w-4\" />\n              <span>Listings</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"reports\" className=\"flex flex-col items-center gap-1 text-xs p-2\">\n              <Flag className=\"h-4 w-4\" />\n              <span>Reports</span>\n              {stats.pendingReports > 0 && (\n                <Badge className=\"h-4 w-4 rounded-full p-0 text-xs bg-red-500\">{stats.pendingReports}</Badge>\n              )}\n            </TabsTrigger>\n            <TabsTrigger value=\"categories\" className=\"flex flex-col items-center gap-1 text-xs p-2\">\n              <Settings className=\"h-4 w-4\" />\n              <span>Categories</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"users\" className=\"flex flex-col items-center gap-1 text-xs p-2\">\n              <Users className=\"h-4 w-4\" />\n              <span>Users</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"analytics\" className=\"flex flex-col items-center gap-1 text-xs p-2\">\n              <BarChart3 className=\"h-4 w-4\" />\n              <span>Analytics</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"stories\" className=\"flex flex-col items-center gap-1 text-xs p-2\">\n              <span role=\"img\" aria-label=\"Stories\">📖</span>\n              <span>Stories</span>\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"listings\">\n            <Suspense fallback={<AdminLoading />}>\n            <ListingsManager onStatsUpdate={fetchDashboardStats} />\n            </Suspense>\n          </TabsContent>\n\n          <TabsContent value=\"reports\">\n            <Suspense fallback={<AdminLoading />}>\n            <ReportsManager onStatsUpdate={fetchDashboardStats} />\n            </Suspense>\n          </TabsContent>\n\n          <TabsContent value=\"categories\">\n            <Suspense fallback={<AdminLoading />}>\n            <CategoriesManager />\n            </Suspense>\n          </TabsContent>\n\n          <TabsContent value=\"users\">\n            <Suspense fallback={<AdminLoading />}>\n            <UsersManager />\n            </Suspense>\n          </TabsContent>\n\n          <TabsContent value=\"analytics\">\n            <Suspense fallback={<AdminLoading />}>\n            <Analytics stats={stats} />\n            </Suspense>\n          </TabsContent>\n\n          <TabsContent value=\"stories\">\n            <Suspense fallback={<StoriesSkeleton />}>\n            <StoriesManager />\n            </Suspense>\n          </TabsContent>\n        </Tabs>\n      </main>\n    </div>\n  )\n}\n","size_bytes":10570},"components/admin/AdminLoading.tsx":{"content":"\"use client\"\n\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport { Shield, Loader2 } from \"lucide-react\"\nimport { DashboardSkeleton } from \"./AdminSkeleton\"\n\nexport default function AdminLoading() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header Skeleton */}\n      <header className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-2xl\">🤝</span>\n              <Skeleton className=\"h-6 w-32\" />\n            </div>\n            <Skeleton className=\"h-6 w-24\" />\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Loading Message */}\n        <div className=\"flex flex-col items-center justify-center mb-8\">\n          <div className=\"flex items-center gap-3 mb-4\">\n            <Shield className=\"h-8 w-8 text-green-600\" />\n            <Loader2 className=\"h-6 w-6 animate-spin text-green-600\" />\n          </div>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Loading Admin Dashboard</h2>\n          <p className=\"text-gray-600 text-center max-w-md\">\n            Verifying admin privileges and loading dashboard components...\n          </p>\n        </div>\n\n        {/* Dashboard Skeleton */}\n        <DashboardSkeleton />\n      </main>\n    </div>\n  )\n}\n","size_bytes":1487},"components/admin/AdminLogin.tsx":{"content":"\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\nimport { Eye, EyeOff, Shield, Loader2, AlertCircle } from \"lucide-react\"\nimport { useAdminAuth } from \"@/contexts/AdminAuthContext\"\n\nexport default function AdminLogin() {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [showPassword, setShowPassword] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [localError, setLocalError] = useState<string | null>(null)\n  const { signIn, error } = useAdminAuth()\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLocalError(null)\n\n    if (!email || !password) {\n      setLocalError(\"Please enter both email and password\")\n      return\n    }\n\n    setIsLoading(true)\n    try {\n      await signIn(email, password)\n    } catch (error: any) {\n      setLocalError(error.message)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const displayError = localError || error\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-green-50 to-blue-50 p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center\">\n          <div className=\"mx-auto mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-green-100\">\n            <Shield className=\"h-6 w-6 text-green-600\" />\n          </div>\n          <CardTitle className=\"text-2xl font-bold text-gray-900\">🤝 Tigawane Admin</CardTitle>\n          <CardDescription className=\"text-gray-600\">Sign in to access the admin dashboard</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">\n                Admin Email Address\n              </label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"admin@tigawane.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                disabled={isLoading}\n                className=\"w-full\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <Input\n                  id=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  placeholder=\"Enter your password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                  disabled={isLoading}\n                  className=\"w-full pr-10\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                  disabled={isLoading}\n                >\n                  {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                </button>\n              </div>\n            </div>\n\n            {displayError && (\n              <Alert variant=\"destructive\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <AlertDescription className=\"text-sm\">\n                  {displayError}\n                  {displayError.includes(\"not registered as an admin\") && (\n                    <div className=\"mt-2 text-xs\">\n                      <strong>Need admin access?</strong>\n                      <br />\n                      1. Sign up normally at the main app\n                      <br />\n                      2. Ask your system administrator to promote your account\n                      <br />\n                      3. Or run the admin setup scripts if you're the first admin\n                    </div>\n                  )}\n                </AlertDescription>\n              </Alert>\n            )}\n\n            <Button type=\"submit\" className=\"w-full bg-green-600 hover:bg-green-700\" disabled={isLoading}>\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Signing in...\n                </>\n              ) : (\n                \"Sign In to Admin Dashboard\"\n              )}\n            </Button>\n          </form>\n\n          <div className=\"mt-6 text-center\">\n            <div className=\"text-sm text-gray-600 space-y-2\">\n              <p className=\"font-medium\">🔒 Admin Access Required</p>\n              <p className=\"text-xs\">Only users with admin privileges can access this dashboard.</p>\n              <div className=\"text-xs text-gray-500 mt-3 p-2 bg-gray-50 rounded\">\n                <strong>First time setup?</strong>\n                <br />\n                1. Sign up at the main app first\n                <br />\n                2. Run the admin setup scripts\n                <br />\n                3. Come back here to sign in\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n","size_bytes":5519},"components/admin/AdminRegistration.tsx":{"content":"\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { supabase } from \"@/lib/supabase\"\n\nexport function AdminRegistration() {\n  const [email, setEmail] = useState(\"\")\n  const [role, setRole] = useState(\"admin\")\n  const [loading, setLoading] = useState(false)\n  const [message, setMessage] = useState(\"\")\n  const [error, setError] = useState(\"\")\n\n  const handlePromoteUser = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setLoading(true)\n    setMessage(\"\")\n    setError(\"\")\n\n    try {\n      // First, find the user by email\n      const { data: userData, error: userError } = await supabase\n        .from(\"profiles\")\n        .select(\"id\")\n        .eq(\"email\", email)\n        .single()\n\n      if (userError || !userData) {\n        throw new Error(\"User not found. Make sure they have signed up first.\")\n      }\n\n      // Check if user is already an admin\n      const { data: existingAdmin } = await supabase\n        .from(\"admin_users\")\n        .select(\"role\")\n        .eq(\"user_id\", userData.id)\n        .single()\n\n      if (existingAdmin) {\n        throw new Error(\"User is already an admin with role: \" + existingAdmin.role)\n      }\n\n      // Promote user to admin\n      const { error: adminError } = await supabase.from(\"admin_users\").insert({\n        user_id: userData.id,\n        role: role,\n      })\n\n      if (adminError) {\n        throw adminError\n      }\n\n      setMessage(`Successfully promoted ${email} to ${role}!`)\n      setEmail(\"\")\n      setRole(\"admin\")\n    } catch (err: any) {\n      console.error(\"Error promoting user:\", err)\n      setError(err.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Card className=\"w-full max-w-md mx-auto\">\n      <CardHeader>\n        <CardTitle>Promote User to Admin</CardTitle>\n        <CardDescription>Enter the email of an existing user to promote them to admin</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handlePromoteUser} className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium mb-2\">\n              User Email\n            </label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"user@example.com\"\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"role\" className=\"block text-sm font-medium mb-2\">\n              Admin Role\n            </label>\n            <Select value={role} onValueChange={setRole}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select role\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"admin\">Admin</SelectItem>\n                <SelectItem value=\"super_admin\">Super Admin</SelectItem>\n                <SelectItem value=\"moderator\">Moderator</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <Button type=\"submit\" className=\"w-full\" disabled={loading}>\n            {loading ? \"Promoting...\" : \"Promote to Admin\"}\n          </Button>\n        </form>\n\n        {message && (\n          <Alert className=\"mt-4\">\n            <AlertDescription className=\"text-green-600\">{message}</AlertDescription>\n          </Alert>\n        )}\n\n        {error && (\n          <Alert className=\"mt-4\" variant=\"destructive\">\n            <AlertDescription>{error}</AlertDescription>\n          </Alert>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n","size_bytes":3931},"components/admin/AdminSkeleton.tsx":{"content":"\"use client\"\n\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\n\nexport function DashboardSkeleton() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Cards Skeleton */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {Array.from({ length: 4 }).map((_, i) => (\n          <Card key={i}>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <Skeleton className=\"h-4 w-24\" />\n              <Skeleton className=\"h-4 w-4\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-8 w-16 mb-2\" />\n              <Skeleton className=\"h-3 w-32\" />\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Tabs Skeleton */}\n      <div className=\"space-y-4\">\n        <div className=\"flex justify-center\">\n          <Skeleton className=\"h-10 w-96\" />\n        </div>\n        <Card>\n          <CardHeader>\n            <Skeleton className=\"h-6 w-48\" />\n          </CardHeader>\n          <CardContent>\n            <Skeleton className=\"h-10 w-full mb-4\" />\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {Array.from({ length: 6 }).map((_, i) => (\n                <Card key={i}>\n                  <Skeleton className=\"h-32 w-full rounded-t-lg\" />\n                  <CardContent className=\"p-4\">\n                    <Skeleton className=\"h-4 w-3/4 mb-2\" />\n                    <Skeleton className=\"h-3 w-full mb-1\" />\n                    <Skeleton className=\"h-3 w-2/3 mb-3\" />\n                    <div className=\"flex gap-2\">\n                      <Skeleton className=\"h-8 flex-1\" />\n                      <Skeleton className=\"h-8 w-8\" />\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport function ListingsSkeleton() {\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <Skeleton className=\"h-6 w-48\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <Skeleton key={i} className=\"h-10 w-full\" />\n            ))}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {Array.from({ length: 9 }).map((_, i) => (\n              <Card key={i}>\n                <Skeleton className=\"h-32 w-full rounded-t-lg\" />\n                <CardContent className=\"p-4\">\n                  <Skeleton className=\"h-4 w-3/4 mb-2\" />\n                  <Skeleton className=\"h-3 w-full mb-1\" />\n                  <Skeleton className=\"h-3 w-2/3 mb-3\" />\n                  <div className=\"flex gap-2\">\n                    <Skeleton className=\"h-8 flex-1\" />\n                    <Skeleton className=\"h-8 w-8\" />\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nexport function UsersSkeleton() {\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <Skeleton className=\"h-6 w-48\" />\n        </CardHeader>\n        <CardContent>\n          <Skeleton className=\"h-10 w-full mb-6\" />\n          <div className=\"space-y-4\">\n            {Array.from({ length: 5 }).map((_, i) => (\n              <Card key={i}>\n                <CardContent className=\"p-4\">\n                  <div className=\"flex justify-between items-start\">\n                    <div className=\"flex-1\">\n                      <Skeleton className=\"h-5 w-32 mb-2\" />\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div className=\"space-y-1\">\n                          <Skeleton className=\"h-3 w-48\" />\n                          <Skeleton className=\"h-3 w-36\" />\n                        </div>\n                        <div className=\"space-y-1\">\n                          <Skeleton className=\"h-3 w-32\" />\n                          <Skeleton className=\"h-3 w-24\" />\n                        </div>\n                      </div>\n                    </div>\n                    <Skeleton className=\"h-8 w-20\" />\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nexport function StoriesSkeleton() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <Skeleton className=\"h-4 w-32\" />\n        <div className=\"flex items-center gap-2\">\n          <Skeleton className=\"h-8 w-16\" />\n          <Skeleton className=\"h-4 w-20\" />\n          <Skeleton className=\"h-8 w-16\" />\n        </div>\n      </div>\n      <div className=\"space-y-4\">\n        {Array.from({ length: 3 }).map((_, i) => (\n          <Card key={i} className=\"border-l-4 border-l-green-500\">\n            <CardHeader>\n              <div className=\"flex items-center gap-2\">\n                <Skeleton className=\"h-5 w-32\" />\n                <Skeleton className=\"h-5 w-16\" />\n                <Skeleton className=\"h-6 w-20\" />\n              </div>\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-4 w-full mb-2\" />\n              <Skeleton className=\"h-4 w-3/4 mb-4\" />\n              <div className=\"flex gap-2\">\n                <Skeleton className=\"h-8 w-20\" />\n                <Skeleton className=\"h-8 w-20\" />\n                <Skeleton className=\"h-8 w-16\" />\n                <Skeleton className=\"h-8 w-20\" />\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </div>\n  )\n}\n","size_bytes":5849},"components/admin/Analytics.tsx":{"content":"\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { BarChart3, TrendingUp, Package, Users, Calendar } from \"lucide-react\"\n\ninterface AnalyticsProps {\n  stats: {\n    totalItems: number\n    activeItems: number\n    totalUsers: number\n    pendingReports: number\n    weeklyItems: number\n    topCategory: string\n  }\n}\n\ninterface WeeklyData {\n  week: string\n  items: number\n}\n\ninterface CategoryData {\n  category: string\n  count: number\n}\n\ninterface LocationData {\n  location: string\n  count: number\n}\n\nexport default function Analytics({ stats }: AnalyticsProps) {\n  const [weeklyData, setWeeklyData] = useState<WeeklyData[]>([])\n  const [categoryData, setCategoryData] = useState<CategoryData[]>([])\n  const [locationData, setLocationData] = useState<LocationData[]>([])\n  const [timeRange, setTimeRange] = useState(\"30\")\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    fetchAnalytics()\n  }, [timeRange])\n\n  const fetchAnalytics = async () => {\n    try {\n      const daysAgo = Number.parseInt(timeRange)\n      const startDate = new Date()\n      startDate.setDate(startDate.getDate() - daysAgo)\n\n      // Fetch weekly data\n      const { data: itemsData } = await supabase\n        .from(\"items\")\n        .select(\"created_at\")\n        .gte(\"created_at\", startDate.toISOString())\n\n      // Group by week\n      const weeklyMap = new Map<string, number>()\n      itemsData?.forEach((item) => {\n        const date = new Date(item.created_at)\n        const weekStart = new Date(date.setDate(date.getDate() - date.getDay()))\n        const weekKey = weekStart.toISOString().split(\"T\")[0]\n        weeklyMap.set(weekKey, (weeklyMap.get(weekKey) || 0) + 1)\n      })\n\n      const weekly = Array.from(weeklyMap.entries())\n        .map(([week, items]) => ({ week, items }))\n        .sort((a, b) => a.week.localeCompare(b.week))\n\n      setWeeklyData(weekly)\n\n      // Fetch category data\n      const { data: categoryItems } = await supabase\n        .from(\"items\")\n        .select(\"category\")\n        .gte(\"created_at\", startDate.toISOString())\n\n      const categoryMap = new Map<string, number>()\n      categoryItems?.forEach((item) => {\n        categoryMap.set(item.category, (categoryMap.get(item.category) || 0) + 1)\n      })\n\n      const categories = Array.from(categoryMap.entries())\n        .map(([category, count]) => ({ category, count }))\n        .sort((a, b) => b.count - a.count)\n        .slice(0, 10)\n\n      setCategoryData(categories)\n\n      // Fetch location data\n      const { data: locationItems } = await supabase\n        .from(\"items\")\n        .select(\"pickup_location\")\n        .gte(\"created_at\", startDate.toISOString())\n\n      const locationMap = new Map<string, number>()\n      locationItems?.forEach((item) => {\n        // Extract city/area from pickup location\n        const location = item.pickup_location.split(\",\")[0].trim()\n        locationMap.set(location, (locationMap.get(location) || 0) + 1)\n      })\n\n      const locations = Array.from(locationMap.entries())\n        .map(([location, count]) => ({ location, count }))\n        .sort((a, b) => b.count - a.count)\n        .slice(0, 10)\n\n      setLocationData(locations)\n    } catch (error) {\n      console.error(\"Error fetching analytics:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-lg\">Loading analytics...</div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <div className=\"flex justify-between items-center\">\n            <CardTitle className=\"flex items-center gap-2\">\n              <BarChart3 className=\"h-5 w-5\" />\n              Platform Analytics\n            </CardTitle>\n            <Select value={timeRange} onValueChange={setTimeRange}>\n              <SelectTrigger className=\"w-40\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"7\">Last 7 days</SelectItem>\n                <SelectItem value=\"30\">Last 30 days</SelectItem>\n                <SelectItem value=\"90\">Last 90 days</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {/* Key Metrics */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <Package className=\"h-8 w-8 mx-auto mb-2 text-blue-600\" />\n              <div className=\"text-2xl font-bold text-blue-600\">{stats.totalItems}</div>\n              <div className=\"text-sm text-gray-600\">Total Items</div>\n            </div>\n            <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n              <TrendingUp className=\"h-8 w-8 mx-auto mb-2 text-green-600\" />\n              <div className=\"text-2xl font-bold text-green-600\">{stats.activeItems}</div>\n              <div className=\"text-sm text-gray-600\">Active Items</div>\n            </div>\n            <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <Users className=\"h-8 w-8 mx-auto mb-2 text-purple-600\" />\n              <div className=\"text-2xl font-bold text-purple-600\">{stats.totalUsers}</div>\n              <div className=\"text-sm text-gray-600\">Total Users</div>\n            </div>\n            <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n              <Calendar className=\"h-8 w-8 mx-auto mb-2 text-orange-600\" />\n              <div className=\"text-2xl font-bold text-orange-600\">{stats.weeklyItems}</div>\n              <div className=\"text-sm text-gray-600\">This Week</div>\n            </div>\n          </div>\n\n          {/* Charts */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Weekly Items Chart */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Items Shared Over Time</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  {weeklyData.map((week, index) => (\n                    <div key={week.week} className=\"flex items-center gap-3\">\n                      <div className=\"text-sm text-gray-600 w-20\">Week {index + 1}</div>\n                      <div className=\"flex-1 bg-gray-200 rounded-full h-4 relative\">\n                        <div\n                          className=\"bg-blue-500 h-4 rounded-full\"\n                          style={{\n                            width: `${Math.max(5, (week.items / Math.max(...weeklyData.map((w) => w.items))) * 100)}%`,\n                          }}\n                        />\n                      </div>\n                      <div className=\"text-sm font-medium w-8\">{week.items}</div>\n                    </div>\n                  ))}\n                </div>\n                {weeklyData.length === 0 && (\n                  <div className=\"text-center py-8 text-gray-500\">No data available for the selected period</div>\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Top Categories */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Top Categories</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  {categoryData.map((category, index) => (\n                    <div key={category.category} className=\"flex items-center gap-3\">\n                      <div className=\"text-sm text-gray-600 w-4\">#{index + 1}</div>\n                      <div className=\"text-sm capitalize flex-1\">{category.category.replace(\"-\", \" \")}</div>\n                      <div className=\"flex-1 bg-gray-200 rounded-full h-4 relative\">\n                        <div\n                          className=\"bg-green-500 h-4 rounded-full\"\n                          style={{\n                            width: `${Math.max(5, (category.count / Math.max(...categoryData.map((c) => c.count))) * 100)}%`,\n                          }}\n                        />\n                      </div>\n                      <div className=\"text-sm font-medium w-8\">{category.count}</div>\n                    </div>\n                  ))}\n                </div>\n                {categoryData.length === 0 && (\n                  <div className=\"text-center py-8 text-gray-500\">No category data available</div>\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Top Locations */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Top Locations</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  {locationData.map((location, index) => (\n                    <div key={location.location} className=\"flex items-center gap-3\">\n                      <div className=\"text-sm text-gray-600 w-4\">#{index + 1}</div>\n                      <div className=\"text-sm flex-1\">{location.location}</div>\n                      <div className=\"flex-1 bg-gray-200 rounded-full h-4 relative\">\n                        <div\n                          className=\"bg-purple-500 h-4 rounded-full\"\n                          style={{\n                            width: `${Math.max(5, (location.count / Math.max(...locationData.map((l) => l.count))) * 100)}%`,\n                          }}\n                        />\n                      </div>\n                      <div className=\"text-sm font-medium w-8\">{location.count}</div>\n                    </div>\n                  ))}\n                </div>\n                {locationData.length === 0 && (\n                  <div className=\"text-center py-8 text-gray-500\">No location data available</div>\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Summary Stats */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Quick Stats</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-600\">Most Popular Category</span>\n                    <span className=\"font-medium capitalize\">{stats.topCategory.replace(\"-\", \" \")}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-600\">Completion Rate</span>\n                    <span className=\"font-medium\">\n                      {stats.totalItems > 0\n                        ? Math.round(((stats.totalItems - stats.activeItems) / stats.totalItems) * 100)\n                        : 0}\n                      %\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-600\">Avg Items per User</span>\n                    <span className=\"font-medium\">\n                      {stats.totalUsers > 0 ? Math.round((stats.totalItems / stats.totalUsers) * 10) / 10 : 0}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-gray-600\">Growth This Week</span>\n                    <span className=\"font-medium text-green-600\">+{stats.weeklyItems}</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n","size_bytes":11860},"components/admin/CategoriesManager.tsx":{"content":"\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Settings, Plus, Edit, Trash2, Tag, Eye, EyeOff } from \"lucide-react\"\n\ninterface Category {\n  id: string\n  name: string\n  item_type: \"food\" | \"non-food\" | \"both\"\n  icon: string | null\n  is_active: boolean\n  created_at: string\n}\n\nexport default function CategoriesManager() {\n  const [categories, setCategories] = useState<Category[]>([])\n  const [loading, setLoading] = useState(true)\n  const [createDialogOpen, setCreateDialogOpen] = useState(false)\n  const [editDialogOpen, setEditDialogOpen] = useState(false)\n  const [selectedCategory, setSelectedCategory] = useState<Category | null>(null)\n  const [formData, setFormData] = useState({\n    name: \"\",\n    item_type: \"both\" as \"food\" | \"non-food\" | \"both\",\n    icon: \"\",\n    is_active: true,\n  })\n\n  useEffect(() => {\n    fetchCategories()\n  }, [])\n\n  const fetchCategories = async () => {\n    try {\n      const { data, error } = await supabase.from(\"categories\").select(\"*\").order(\"name\")\n\n      if (error) throw error\n      setCategories(data || [])\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleCreate = async () => {\n    try {\n      const { error } = await supabase.from(\"categories\").insert({\n        name: formData.name.toLowerCase().replace(/\\s+/g, \"-\"),\n        item_type: formData.item_type,\n        icon: formData.icon || null,\n        is_active: formData.is_active,\n      })\n\n      if (error) throw error\n\n      await fetchCategories()\n      setCreateDialogOpen(false)\n      setFormData({ name: \"\", item_type: \"both\", icon: \"\", is_active: true })\n      alert(\"Category created successfully!\")\n    } catch (error: any) {\n      console.error(\"Error creating category:\", error)\n      alert(`Error creating category: ${error.message}`)\n    }\n  }\n\n  const handleEdit = (category: Category) => {\n    setSelectedCategory(category)\n    setFormData({\n      name: category.name,\n      item_type: category.item_type,\n      icon: category.icon || \"\",\n      is_active: category.is_active,\n    })\n    setEditDialogOpen(true)\n  }\n\n  const handleUpdate = async () => {\n    if (!selectedCategory) return\n\n    try {\n      const { error } = await supabase\n        .from(\"categories\")\n        .update({\n          name: formData.name.toLowerCase().replace(/\\s+/g, \"-\"),\n          item_type: formData.item_type,\n          icon: formData.icon || null,\n          is_active: formData.is_active,\n        })\n        .eq(\"id\", selectedCategory.id)\n\n      if (error) throw error\n\n      await fetchCategories()\n      setEditDialogOpen(false)\n      alert(\"Category updated successfully!\")\n    } catch (error: any) {\n      console.error(\"Error updating category:\", error)\n      alert(`Error updating category: ${error.message}`)\n    }\n  }\n\n  const handleDelete = async (categoryId: string, categoryName: string) => {\n    if (!confirm(`Are you sure you want to delete the \"${categoryName}\" category? This action cannot be undone.`)) {\n      return\n    }\n\n    try {\n      const { error } = await supabase.from(\"categories\").delete().eq(\"id\", categoryId)\n\n      if (error) throw error\n\n      await fetchCategories()\n      alert(\"Category deleted successfully!\")\n    } catch (error: any) {\n      console.error(\"Error deleting category:\", error)\n      alert(`Error deleting category: ${error.message}`)\n    }\n  }\n\n  const toggleActive = async (categoryId: string, currentStatus: boolean) => {\n    try {\n      const { error } = await supabase.from(\"categories\").update({ is_active: !currentStatus }).eq(\"id\", categoryId)\n\n      if (error) throw error\n\n      await fetchCategories()\n    } catch (error: any) {\n      console.error(\"Error toggling category status:\", error)\n      alert(`Error updating category: ${error.message}`)\n    }\n  }\n\n  const getTypeBadge = (type: string) => {\n    const typeConfig = {\n      food: { color: \"bg-orange-100 text-orange-800\", label: \"Food\" },\n      \"non-food\": { color: \"bg-blue-100 text-blue-800\", label: \"Non-Food\" },\n      both: { color: \"bg-green-100 text-green-800\", label: \"Both\" },\n    }\n    const config = typeConfig[type as keyof typeof typeConfig] || typeConfig.both\n    return <Badge className={config.color}>{config.label}</Badge>\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-lg\">Loading categories...</div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <div className=\"flex justify-between items-center\">\n            <CardTitle className=\"flex items-center gap-2\">\n              <Settings className=\"h-5 w-5\" />\n              Manage Categories\n            </CardTitle>\n            <Dialog open={createDialogOpen} onOpenChange={setCreateDialogOpen}>\n              <DialogTrigger asChild>\n                <Button>\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Add Category\n                </Button>\n              </DialogTrigger>\n              <DialogContent className=\"max-w-md\">\n                <DialogHeader>\n                  <DialogTitle>Create New Category</DialogTitle>\n                </DialogHeader>\n                <div className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"name\">Category Name</Label>\n                    <Input\n                      id=\"name\"\n                      value={formData.name}\n                      onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                      placeholder=\"e.g., Electronics, Furniture\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"item_type\">Item Type</Label>\n                    <Select\n                      value={formData.item_type}\n                      onValueChange={(value: \"food\" | \"non-food\" | \"both\") =>\n                        setFormData({ ...formData, item_type: value })\n                      }\n                    >\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"food\">Food Only</SelectItem>\n                        <SelectItem value=\"non-food\">Non-Food Only</SelectItem>\n                        <SelectItem value=\"both\">Both Food & Non-Food</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"icon\">Icon (Emoji)</Label>\n                    <Input\n                      id=\"icon\"\n                      value={formData.icon}\n                      onChange={(e) => setFormData({ ...formData, icon: e.target.value })}\n                      placeholder=\"📱\"\n                      maxLength={2}\n                    />\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"is_active\"\n                      checked={formData.is_active}\n                      onCheckedChange={(checked) => setFormData({ ...formData, is_active: checked })}\n                    />\n                    <Label htmlFor=\"is_active\">Active</Label>\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <Button variant=\"outline\" onClick={() => setCreateDialogOpen(false)} className=\"flex-1\">\n                      Cancel\n                    </Button>\n                    <Button onClick={handleCreate} className=\"flex-1\">\n                      Create Category\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {categories.map((category) => (\n              <Card key={category.id} className={`${!category.is_active ? \"opacity-60\" : \"\"}`}>\n                <CardContent className=\"p-4\">\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div className=\"flex items-center gap-2\">\n                      {category.icon && <span className=\"text-lg\">{category.icon}</span>}\n                      <h3 className=\"font-medium capitalize\">{category.name.replace(/-/g, \" \")}</h3>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <Button\n                        size=\"sm\"\n                        variant=\"ghost\"\n                        onClick={() => toggleActive(category.id, category.is_active)}\n                        className=\"h-6 w-6 p-0\"\n                      >\n                        {category.is_active ? <Eye className=\"h-3 w-3\" /> : <EyeOff className=\"h-3 w-3\" />}\n                      </Button>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2 mb-3\">\n                    {getTypeBadge(category.item_type)}\n                    <Badge variant={category.is_active ? \"default\" : \"secondary\"}>\n                      {category.is_active ? \"Active\" : \"Inactive\"}\n                    </Badge>\n                  </div>\n\n                  <div className=\"text-xs text-gray-500 mb-3\">\n                    Created: {new Date(category.created_at).toLocaleDateString()}\n                  </div>\n\n                  <div className=\"flex gap-2\">\n                    <Button size=\"sm\" variant=\"outline\" onClick={() => handleEdit(category)} className=\"flex-1\">\n                      <Edit className=\"h-3 w-3 mr-1\" />\n                      Edit\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => handleDelete(category.id, category.name)}\n                      className=\"text-red-600 hover:text-red-700\"\n                    >\n                      <Trash2 className=\"h-3 w-3\" />\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {categories.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Tag className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No categories found</h3>\n              <p className=\"text-gray-600 mb-4\">Create your first category to get started.</p>\n              <Button onClick={() => setCreateDialogOpen(true)}>\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Add Category\n              </Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Edit Dialog */}\n      <Dialog open={editDialogOpen} onOpenChange={setEditDialogOpen}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle>Edit Category</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"edit_name\">Category Name</Label>\n              <Input\n                id=\"edit_name\"\n                value={formData.name}\n                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"edit_item_type\">Item Type</Label>\n              <Select\n                value={formData.item_type}\n                onValueChange={(value: \"food\" | \"non-food\" | \"both\") => setFormData({ ...formData, item_type: value })}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"food\">Food Only</SelectItem>\n                  <SelectItem value=\"non-food\">Non-Food Only</SelectItem>\n                  <SelectItem value=\"both\">Both Food & Non-Food</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div>\n              <Label htmlFor=\"edit_icon\">Icon (Emoji)</Label>\n              <Input\n                id=\"edit_icon\"\n                value={formData.icon}\n                onChange={(e) => setFormData({ ...formData, icon: e.target.value })}\n                placeholder=\"📱\"\n                maxLength={2}\n              />\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Switch\n                id=\"edit_is_active\"\n                checked={formData.is_active}\n                onCheckedChange={(checked) => setFormData({ ...formData, is_active: checked })}\n              />\n              <Label htmlFor=\"edit_is_active\">Active</Label>\n            </div>\n            <div className=\"flex gap-2\">\n              <Button variant=\"outline\" onClick={() => setEditDialogOpen(false)} className=\"flex-1\">\n                Cancel\n              </Button>\n              <Button onClick={handleUpdate} className=\"flex-1\">\n                Update Category\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","size_bytes":13713},"components/admin/ListingsManager.tsx":{"content":"\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Label } from \"@/components/ui/label\"\nimport { Search, Edit, Trash2, MapPin, Calendar, User, Package, AlertCircle } from \"lucide-react\"\nimport OptimizedImage from \"./OptimizedImage\"\n\ninterface Item {\n  id: string\n  title: string\n  description: string | null\n  category: string\n  item_type: \"food\" | \"non-food\"\n  quantity: string\n  condition?: string | null\n  expiry_date: string | null\n  pickup_location: string\n  image_url: string | null\n  status: string\n  created_at: string\n  user_id: string\n  owner_name?: string\n  owner_email?: string\n}\n\ninterface ListingsManagerProps {\n  onStatsUpdate: () => void\n}\n\nexport default function ListingsManager({ onStatsUpdate }: ListingsManagerProps) {\n  const [items, setItems] = useState<Item[]>([])\n  const [filteredItems, setFilteredItems] = useState<Item[]>([])\n  const [loading, setLoading] = useState(true)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [categoryFilter, setCategoryFilter] = useState(\"all\")\n  const [locationFilter, setLocationFilter] = useState(\"\")\n  const [statusFilter, setStatusFilter] = useState(\"all\")\n  const [selectedItem, setSelectedItem] = useState<Item | null>(null)\n  const [editDialogOpen, setEditDialogOpen] = useState(false)\n  const [editForm, setEditForm] = useState({\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    quantity: \"\",\n    pickup_location: \"\",\n  })\n  \n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(1)\n  const [totalItems, setTotalItems] = useState(0)\n  const itemsPerPage = 20\n\n  useEffect(() => {\n    fetchItems()\n  }, [currentPage, searchTerm, categoryFilter, locationFilter, statusFilter])\n\n  const fetchItems = async () => {\n    try {\n      setLoading(true)\n      console.log(\"🔍 Starting to fetch items...\")\n      \n      // Build query with filters - simplified without join\n      let query = supabase\n        .from(\"items\")\n        .select(\"*\", { count: 'exact' })\n        .order(\"created_at\", { ascending: false })\n\n      // Apply filters\n      if (searchTerm) {\n        query = query.or(`title.ilike.%${searchTerm}%,description.ilike.%${searchTerm}%`)\n      }\n      \n      if (categoryFilter !== \"all\") {\n        query = query.eq(\"category\", categoryFilter)\n      }\n      \n      if (locationFilter) {\n        query = query.ilike(\"pickup_location\", `%${locationFilter}%`)\n      }\n      \n      if (statusFilter !== \"all\") {\n        query = query.eq(\"status\", statusFilter)\n      }\n\n      // Apply pagination\n      const from = (currentPage - 1) * itemsPerPage\n      const to = from + itemsPerPage - 1\n      query = query.range(from, to)\n\n      const { data: itemsData, error, count } = await query\n\n      console.log(\"📊 Query result:\", { itemsData: itemsData?.length, error, count })\n\n      if (error) {\n        console.error(\"Supabase error:\", error)\n        throw new Error(`Database error: ${error.message || 'Unknown database error'}`)\n      }\n\n      // Fetch user profiles separately to avoid join issues\n      const userIds = [...new Set(itemsData?.map(item => item.user_id) || [])]\n      let profilesMap: Record<string, any> = {}\n      \n      console.log(\"👥 User IDs to fetch:\", userIds)\n      \n      if (userIds.length > 0) {\n        const { data: profilesData, error: profilesError } = await supabase\n          .from(\"profiles\")\n          .select(\"id, full_name, email\")\n          .in(\"id\", userIds)\n        \n        console.log(\"👥 Profiles result:\", { profilesData: profilesData?.length, profilesError })\n        \n        if (profilesError) {\n          console.warn(\"Error fetching profiles:\", profilesError)\n        } else {\n          profilesMap = profilesData?.reduce((acc, profile) => {\n            acc[profile.id] = profile\n            return acc\n          }, {} as Record<string, any>) || {}\n        }\n      }\n\n      // Transform data to include owner info\n      const itemsWithOwners = itemsData?.map((item: any) => ({\n          ...item,\n        owner_name: profilesMap[item.user_id]?.full_name || \"Unknown\",\n        owner_email: profilesMap[item.user_id]?.email || \"Unknown\",\n        })) || []\n\n      // Debug image URLs\n      console.log(\"🖼️ Items with image URLs:\", itemsWithOwners.map(item => ({\n        id: item.id,\n        title: item.title,\n        image_url: item.image_url,\n        hasImage: !!item.image_url\n      })))\n\n      setItems(itemsWithOwners)\n      setTotalItems(count || 0)\n      setTotalPages(Math.ceil((count || 0) / itemsPerPage))\n      \n      console.log(\"✅ Successfully fetched items:\", {\n        itemsCount: itemsWithOwners.length,\n        totalItems: count,\n        totalPages: Math.ceil((count || 0) / itemsPerPage)\n      })\n    } catch (error) {\n      console.error(\"Error fetching items:\", error)\n      console.error(\"Error type:\", typeof error)\n      console.error(\"Error message:\", error instanceof Error ? error.message : String(error))\n      console.error(\"Full error object:\", JSON.stringify(error, null, 2))\n      \n      setItems([])\n      setTotalItems(0)\n      setTotalPages(0)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Reset to first page when filters change\n  useEffect(() => {\n    setCurrentPage(1)\n  }, [searchTerm, categoryFilter, locationFilter, statusFilter])\n\n  const handleEdit = (item: Item) => {\n    setSelectedItem(item)\n    setEditForm({\n      title: item.title,\n      description: item.description || \"\",\n      category: item.category,\n      quantity: item.quantity,\n      pickup_location: item.pickup_location,\n    })\n    setEditDialogOpen(true)\n  }\n\n  const handleSaveEdit = async () => {\n    if (!selectedItem) return\n\n    try {\n      const { error } = await supabase\n        .from(\"items\")\n        .update({\n          title: editForm.title,\n          description: editForm.description || null,\n          category: editForm.category,\n          quantity: editForm.quantity,\n          pickup_location: editForm.pickup_location,\n        })\n        .eq(\"id\", selectedItem.id)\n\n      if (error) throw error\n\n      await fetchItems()\n      onStatsUpdate()\n      setEditDialogOpen(false)\n      alert(\"Item updated successfully!\")\n    } catch (error: any) {\n      console.error(\"Error updating item:\", error)\n      alert(`Error updating item: ${error.message}`)\n    }\n  }\n\n  const handleDelete = async (itemId: string) => {\n    if (!confirm(\"Are you sure you want to delete this item? This action cannot be undone.\")) {\n      return\n    }\n\n    try {\n      const { error } = await supabase.from(\"items\").delete().eq(\"id\", itemId)\n\n      if (error) throw error\n\n      await fetchItems()\n      onStatsUpdate()\n      alert(\"Item deleted successfully!\")\n    } catch (error: any) {\n      console.error(\"Error deleting item:\", error)\n      alert(`Error deleting item: ${error.message}`)\n    }\n  }\n\n  const getStatusBadge = (status: string) => {\n    const statusConfig = {\n      available: { color: \"bg-green-100 text-green-800\", label: \"Available\" },\n      requested: { color: \"bg-yellow-100 text-yellow-800\", label: \"Requested\" },\n      reserved: { color: \"bg-blue-100 text-blue-800\", label: \"Reserved\" },\n      completed: { color: \"bg-gray-100 text-gray-800\", label: \"Completed\" },\n      cancelled: { color: \"bg-red-100 text-red-800\", label: \"Cancelled\" },\n    }\n    const config = statusConfig[status as keyof typeof statusConfig] || statusConfig.available\n    return <Badge className={config.color}>{config.label}</Badge>\n  }\n\n  const categories = [\n    \"all\",\n    \"fruits\",\n    \"vegetables\",\n    \"grains\",\n    \"dairy\",\n    \"meat\",\n    \"prepared\",\n    \"clothing\",\n    \"shoes\",\n    \"household\",\n    \"electronics\",\n    \"books\",\n    \"toys\",\n    \"baby-items\",\n    \"other\",\n  ]\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-base sm:text-lg lg:text-xl\">Loading listings...</div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-xl sm:text-2xl lg:text-3xl\">Manage Listings</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {/* Filters */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n              <Input\n                placeholder=\"Search items...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10 text-sm sm:text-base\"\n              />\n            </div>\n\n            <Select value={categoryFilter} onValueChange={setCategoryFilter}>\n              <SelectTrigger className=\"text-sm sm:text-base\">\n                <SelectValue placeholder=\"Category\" />\n              </SelectTrigger>\n              <SelectContent>\n                {categories.map((category) => (\n                  <SelectItem key={category} value={category}>\n                    {category.charAt(0).toUpperCase() + category.slice(1).replace(\"-\", \" \")}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n\n            <Input\n              placeholder=\"Filter by location...\"\n              value={locationFilter}\n              onChange={(e) => setLocationFilter(e.target.value)}\n              className=\"text-sm sm:text-base\"\n            />\n\n            <Select value={statusFilter} onValueChange={setStatusFilter}>\n              <SelectTrigger className=\"text-sm sm:text-base\">\n                <SelectValue placeholder=\"Status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Status</SelectItem>\n                <SelectItem value=\"available\">Available</SelectItem>\n                <SelectItem value=\"requested\">Requested</SelectItem>\n                <SelectItem value=\"reserved\">Reserved</SelectItem>\n                <SelectItem value=\"completed\">Completed</SelectItem>\n                <SelectItem value=\"cancelled\">Cancelled</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Results Summary */}\n          <div className=\"mb-4 flex justify-between items-center\">\n            <p className=\"text-sm sm:text-base text-gray-600\">\n              Showing {items.length} of {totalItems} items\n            </p>\n            {totalPages > 1 && (\n              <div className=\"flex items-center gap-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n                  disabled={currentPage === 1}\n                >\n                  Previous\n                </Button>\n                <span className=\"text-sm text-gray-600\">\n                  Page {currentPage} of {totalPages}\n                </span>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n                  disabled={currentPage === totalPages}\n                >\n                  Next\n                </Button>\n              </div>\n            )}\n          </div>\n\n          {/* Items Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {items.map((item) => (\n              <Card \n                key={item.id} \n                clickable={true}\n                onClick={() => handleEdit(item)}\n              >\n                  <div className=\"relative h-32 w-full bg-gray-100\">\n                    {item.image_url && item.image_url.trim() !== '' ? (\n                      <OptimizedImage\n                        src={item.image_url}\n                      alt={item.title}\n                      fill\n                      className=\"object-cover rounded-t-lg\"\n                    />\n                    ) : (\n                      <div className=\"flex items-center justify-center h-full bg-gray-100 rounded-t-lg\">\n                        <div className=\"text-center\">\n                          <Package className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\n                          <span className=\"text-xs text-gray-500\">No image</span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                <CardContent className=\"p-4\">\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div className=\"relative group flex-1 min-w-0\">\n                      <h3 className=\"font-medium text-sm sm:text-base lg:text-lg line-clamp-1 group-hover:line-clamp-none group-hover:bg-gray-50 group-hover:p-2 group-hover:rounded group-hover:absolute group-hover:z-10 group-hover:shadow-lg group-hover:border group-hover:min-w-full group-hover:max-w-xs group-hover:transition-all group-hover:duration-200\">\n                        {item.title}\n                      </h3>\n                    </div>\n                    {getStatusBadge(item.status)}\n                  </div>\n\n                  <div className=\"relative group mb-2\">\n                    <p className=\"text-xs sm:text-sm lg:text-base text-gray-600 line-clamp-2 group-hover:line-clamp-none group-hover:bg-gray-50 group-hover:p-2 group-hover:rounded group-hover:absolute group-hover:z-10 group-hover:shadow-lg group-hover:border group-hover:min-w-full group-hover:max-w-xs group-hover:transition-all group-hover:duration-200\">\n                      {item.description}\n                    </p>\n                  </div>\n\n                  <div className=\"space-y-1 text-xs sm:text-sm text-gray-500 mb-3\">\n                    <div className=\"flex items-center gap-1\">\n                      <Package className=\"h-3 w-3\" />\n                      <span>\n                        {item.category} • {item.quantity}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <MapPin className=\"h-3 w-3\" />\n                      <span>{item.pickup_location}</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <User className=\"h-3 w-3\" />\n                      <span>{item.owner_name}</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <Calendar className=\"h-3 w-3\" />\n                      <span>{new Date(item.created_at).toLocaleDateString()}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"flex gap-2\">\n                    <Button \n                      size=\"sm\" \n                      variant=\"outline\" \n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleEdit(item);\n                      }} \n                      className=\"flex-1 text-xs sm:text-sm\"\n                    >\n                      <Edit className=\"h-3 w-3 mr-1\" />\n                      Edit\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleDelete(item.id);\n                      }}\n                      className=\"text-red-600 hover:text-red-700 text-xs sm:text-sm\"\n                    >\n                      <Trash2 className=\"h-3 w-3\" />\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {items.length === 0 && !loading && (\n            <div className=\"text-center py-12\">\n              <AlertCircle className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\n              <h3 className=\"text-lg sm:text-xl lg:text-2xl font-medium text-gray-900 mb-2\">No items found</h3>\n              <p className=\"text-sm sm:text-base lg:text-lg text-gray-600\">Try adjusting your filters to see more results.</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Edit Dialog */}\n      <Dialog open={editDialogOpen} onOpenChange={setEditDialogOpen}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"text-lg sm:text-xl lg:text-2xl\">Edit Item</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"title\" className=\"text-sm sm:text-base\">Title</Label>\n              <Input\n                id=\"title\"\n                value={editForm.title}\n                onChange={(e) => setEditForm({ ...editForm, title: e.target.value })}\n                className=\"text-sm sm:text-base\"\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"description\" className=\"text-sm sm:text-base\">Description</Label>\n              <Textarea\n                id=\"description\"\n                value={editForm.description}\n                onChange={(e) => setEditForm({ ...editForm, description: e.target.value })}\n                rows={3}\n                className=\"text-sm sm:text-base\"\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"category\" className=\"text-sm sm:text-base\">Category</Label>\n              <Select\n                value={editForm.category}\n                onValueChange={(value) => setEditForm({ ...editForm, category: value })}\n              >\n                <SelectTrigger className=\"text-sm sm:text-base\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {categories.slice(1).map((category) => (\n                    <SelectItem key={category} value={category}>\n                      {category.charAt(0).toUpperCase() + category.slice(1).replace(\"-\", \" \")}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div>\n              <Label htmlFor=\"quantity\" className=\"text-sm sm:text-base\">Quantity</Label>\n              <Input\n                id=\"quantity\"\n                value={editForm.quantity}\n                onChange={(e) => setEditForm({ ...editForm, quantity: e.target.value })}\n                className=\"text-sm sm:text-base\"\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"pickup_location\" className=\"text-sm sm:text-base\">Pickup Location</Label>\n              <Input\n                id=\"pickup_location\"\n                value={editForm.pickup_location}\n                onChange={(e) => setEditForm({ ...editForm, pickup_location: e.target.value })}\n                className=\"text-sm sm:text-base\"\n              />\n            </div>\n            <div className=\"flex gap-2\">\n              <Button variant=\"outline\" onClick={() => setEditDialogOpen(false)} className=\"flex-1 text-sm sm:text-base\">\n                Cancel\n              </Button>\n              <Button onClick={handleSaveEdit} className=\"flex-1 text-sm sm:text-base\">\n                Save Changes\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","size_bytes":19785},"components/admin/OptimizedImage.tsx":{"content":"\"use client\"\n\nimport { useState } from \"react\"\nimport Image from \"next/image\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport { Package } from \"lucide-react\"\n\ninterface OptimizedImageProps {\n  src: string | null\n  alt: string\n  className?: string\n  fill?: boolean\n  width?: number\n  height?: number\n}\n\nexport default function OptimizedImage({ \n  src, \n  alt, \n  className = \"\", \n  fill = false, \n  width, \n  height \n}: OptimizedImageProps) {\n  const [isLoading, setIsLoading] = useState(true)\n  const [hasError, setHasError] = useState(false)\n\n  // Debug logging\n  console.log(\"🖼️ OptimizedImage render:\", { src, alt, hasError, isLoading })\n\n  if (!src || src.trim() === '') {\n    return (\n      <div className={`bg-gray-200 flex items-center justify-center ${className}`}>\n        <Package className=\"h-8 w-8 text-gray-400\" />\n      </div>\n    )\n  }\n\n  if (hasError) {\n    return (\n      <div className={`bg-gray-200 flex items-center justify-center ${className}`}>\n        <span className=\"text-gray-400 text-sm\">Image failed to load</span>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"relative\">\n      {isLoading && (\n        <Skeleton className={`absolute inset-0 ${className}`} />\n      )}\n      <Image\n        src={src}\n        alt={alt}\n        fill={fill}\n        width={width}\n        height={height}\n        className={`${className} ${isLoading ? 'opacity-0' : 'opacity-100'} transition-opacity duration-300`}\n        onLoad={() => {\n          console.log(\"✅ Image loaded successfully:\", src)\n          setIsLoading(false)\n        }}\n        onError={(e) => {\n          console.error(\"❌ Image failed to load:\", src, e)\n          setIsLoading(false)\n          setHasError(true)\n        }}\n        sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n        priority={false}\n      />\n    </div>\n  )\n}\n","size_bytes":1852},"components/admin/ReportsManager.tsx":{"content":"\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Flag, CheckCircle, Trash2, Eye, Calendar, User, MessageSquare } from \"lucide-react\"\nimport Image from \"next/image\"\n\ninterface Report {\n  id: string\n  item_id: string\n  reporter_id: string\n  reason: string\n  description: string | null\n  status: string\n  created_at: string\n  item?: {\n    id: string\n    title: string\n    description: string | null\n    image_url: string | null\n    category: string\n    pickup_location: string\n    owner_name?: string\n  }\n  reporter_name?: string\n}\n\ninterface ReportsManagerProps {\n  onStatsUpdate: () => void\n}\n\nexport default function ReportsManager({ onStatsUpdate }: ReportsManagerProps) {\n  const [reports, setReports] = useState<Report[]>([])\n  const [loading, setLoading] = useState(true)\n  const [selectedReport, setSelectedReport] = useState<Report | null>(null)\n  const [detailsOpen, setDetailsOpen] = useState(false)\n  const [statusFilter, setStatusFilter] = useState(\"pending\")\n\n  useEffect(() => {\n    fetchReports()\n  }, [statusFilter])\n\n  const fetchReports = async () => {\n    try {\n      // Fetch reports\n      const { data: reportsData, error } = await supabase\n        .from(\"reports\")\n        .select(\"*\")\n        .eq(\"status\", statusFilter)\n        .order(\"created_at\", { ascending: false })\n\n      if (error) throw error\n\n      // Get related items and user information\n      const reportsWithDetails = await Promise.all(\n        (reportsData || []).map(async (report) => {\n          // Get item details\n          const { data: itemData } = await supabase.from(\"items\").select(\"*\").eq(\"id\", report.item_id).single()\n\n          // Get item owner name\n          let ownerName = \"Unknown\"\n          if (itemData) {\n            const { data: ownerProfile } = await supabase\n              .from(\"profiles\")\n              .select(\"full_name\")\n              .eq(\"id\", itemData.user_id)\n              .single()\n            ownerName = ownerProfile?.full_name || \"Unknown\"\n          }\n\n          // Get reporter name\n          const { data: reporterProfile } = await supabase\n            .from(\"profiles\")\n            .select(\"full_name\")\n            .eq(\"id\", report.reporter_id)\n            .single()\n\n          return {\n            ...report,\n            item: itemData ? { ...itemData, owner_name: ownerName } : null,\n            reporter_name: reporterProfile?.full_name || \"Anonymous\",\n          }\n        }),\n      )\n\n      setReports(reportsWithDetails)\n    } catch (error) {\n      console.error(\"Error fetching reports:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleMarkAsReviewed = async (reportId: string) => {\n    try {\n      const { error } = await supabase.from(\"reports\").update({ status: \"reviewed\" }).eq(\"id\", reportId)\n\n      if (error) throw error\n\n      await fetchReports()\n      onStatsUpdate()\n      alert(\"Report marked as reviewed!\")\n    } catch (error: any) {\n      console.error(\"Error updating report:\", error)\n      alert(`Error updating report: ${error.message}`)\n    }\n  }\n\n  const handleDeleteItem = async (itemId: string, reportId: string) => {\n    if (!confirm(\"Are you sure you want to delete this reported item? This action cannot be undone.\")) {\n      return\n    }\n\n    try {\n      // Delete the item\n      const { error: deleteError } = await supabase.from(\"items\").delete().eq(\"id\", itemId)\n\n      if (deleteError) throw deleteError\n\n      // Mark report as resolved\n      const { error: updateError } = await supabase.from(\"reports\").update({ status: \"resolved\" }).eq(\"id\", reportId)\n\n      if (updateError) throw updateError\n\n      await fetchReports()\n      onStatsUpdate()\n      alert(\"Item deleted and report resolved!\")\n    } catch (error: any) {\n      console.error(\"Error deleting item:\", error)\n      alert(`Error deleting item: ${error.message}`)\n    }\n  }\n\n  const getReasonBadge = (reason: string) => {\n    const reasonConfig = {\n      inappropriate: { color: \"bg-red-100 text-red-800\", label: \"Inappropriate\" },\n      spam: { color: \"bg-orange-100 text-orange-800\", label: \"Spam\" },\n      fake: { color: \"bg-yellow-100 text-yellow-800\", label: \"Fake\" },\n      offensive: { color: \"bg-purple-100 text-purple-800\", label: \"Offensive\" },\n      other: { color: \"bg-gray-100 text-gray-800\", label: \"Other\" },\n    }\n    const config = reasonConfig[reason as keyof typeof reasonConfig] || reasonConfig.other\n    return <Badge className={config.color}>{config.label}</Badge>\n  }\n\n  const getStatusBadge = (status: string) => {\n    const statusConfig = {\n      pending: { color: \"bg-yellow-100 text-yellow-800\", label: \"Pending\" },\n      reviewed: { color: \"bg-blue-100 text-blue-800\", label: \"Reviewed\" },\n      resolved: { color: \"bg-green-100 text-green-800\", label: \"Resolved\" },\n    }\n    const config = statusConfig[status as keyof typeof statusConfig] || statusConfig.pending\n    return <Badge className={config.color}>{config.label}</Badge>\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-lg\">Loading reports...</div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Flag className=\"h-5 w-5\" />\n            Reported Items\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {/* Status Filter */}\n          <div className=\"flex gap-2 mb-6\">\n            {[\"pending\", \"reviewed\", \"resolved\"].map((status) => (\n              <Button\n                key={status}\n                variant={statusFilter === status ? \"default\" : \"outline\"}\n                size=\"sm\"\n                onClick={() => setStatusFilter(status)}\n              >\n                {status.charAt(0).toUpperCase() + status.slice(1)}\n              </Button>\n            ))}\n          </div>\n\n          {/* Reports List */}\n          <div className=\"space-y-4\">\n            {reports.map((report) => (\n              <Card key={report.id} className=\"border-l-4 border-l-red-500\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div className=\"flex items-center gap-2\">\n                      {getReasonBadge(report.reason)}\n                      {getStatusBadge(report.status)}\n                    </div>\n                    <div className=\"flex gap-2\">\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => {\n                          setSelectedReport(report)\n                          setDetailsOpen(true)\n                        }}\n                      >\n                        <Eye className=\"h-3 w-3 mr-1\" />\n                        Details\n                      </Button>\n                      {report.status === \"pending\" && (\n                        <>\n                          <Button size=\"sm\" variant=\"outline\" onClick={() => handleMarkAsReviewed(report.id)}>\n                            <CheckCircle className=\"h-3 w-3 mr-1\" />\n                            Mark Reviewed\n                          </Button>\n                          {report.item && (\n                            <Button\n                              size=\"sm\"\n                              variant=\"outline\"\n                              onClick={() => handleDeleteItem(report.item!.id, report.id)}\n                              className=\"text-red-600 hover:text-red-700\"\n                            >\n                              <Trash2 className=\"h-3 w-3 mr-1\" />\n                              Delete Item\n                            </Button>\n                          )}\n                        </>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {/* Report Info */}\n                    <div>\n                      <h4 className=\"font-medium text-sm mb-2\">Report Details</h4>\n                      <div className=\"space-y-1 text-xs text-gray-600\">\n                        <div className=\"flex items-center gap-1\">\n                          <User className=\"h-3 w-3\" />\n                          <span>Reported by: {report.reporter_name}</span>\n                        </div>\n                        <div className=\"flex items-center gap-1\">\n                          <Calendar className=\"h-3 w-3\" />\n                          <span>{new Date(report.created_at).toLocaleString()}</span>\n                        </div>\n                        {report.description && (\n                          <div className=\"flex items-start gap-1\">\n                            <MessageSquare className=\"h-3 w-3 mt-0.5\" />\n                            <span className=\"line-clamp-2\">{report.description}</span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    {/* Item Info */}\n                    {report.item ? (\n                      <div>\n                        <h4 className=\"font-medium text-sm mb-2\">Reported Item</h4>\n                        <div className=\"flex gap-3\">\n                          {report.item.image_url && (\n                            <div className=\"relative w-16 h-16 flex-shrink-0\">\n                              <Image\n                                src={report.item.image_url || \"/placeholder.svg\"}\n                                alt={report.item.title}\n                                fill\n                                className=\"object-cover rounded\"\n                              />\n                            </div>\n                          )}\n                          <div className=\"flex-1 min-w-0\">\n                            <h5 className=\"font-medium text-sm line-clamp-1\">{report.item.title}</h5>\n                            <p className=\"text-xs text-gray-600 line-clamp-2\">{report.item.description}</p>\n                            <div className=\"text-xs text-gray-500 mt-1\">\n                              <span>\n                                {report.item.category} • {report.item.pickup_location}\n                              </span>\n                              <br />\n                              <span>Owner: {report.item.owner_name}</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ) : (\n                      <div>\n                        <h4 className=\"font-medium text-sm mb-2\">Reported Item</h4>\n                        <p className=\"text-xs text-red-600\">Item has been deleted</p>\n                      </div>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {reports.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Flag className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No {statusFilter} reports</h3>\n              <p className=\"text-gray-600\">\n                {statusFilter === \"pending\"\n                  ? \"Great! No reports need your attention right now.\"\n                  : `No ${statusFilter} reports found.`}\n              </p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Report Details Dialog */}\n      <Dialog open={detailsOpen} onOpenChange={setDetailsOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Report Details</DialogTitle>\n          </DialogHeader>\n          {selectedReport && (\n            <div className=\"space-y-6\">\n              {/* Report Information */}\n              <div>\n                <h3 className=\"font-medium mb-3\">Report Information</h3>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <span className=\"text-gray-600\">Reason:</span>\n                    <div className=\"mt-1\">{getReasonBadge(selectedReport.reason)}</div>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-600\">Status:</span>\n                    <div className=\"mt-1\">{getStatusBadge(selectedReport.status)}</div>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-600\">Reporter:</span>\n                    <div className=\"mt-1\">{selectedReport.reporter_name}</div>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-600\">Date:</span>\n                    <div className=\"mt-1\">{new Date(selectedReport.created_at).toLocaleString()}</div>\n                  </div>\n                </div>\n                {selectedReport.description && (\n                  <div className=\"mt-4\">\n                    <span className=\"text-gray-600\">Description:</span>\n                    <p className=\"mt-1 text-sm bg-gray-50 p-3 rounded\">{selectedReport.description}</p>\n                  </div>\n                )}\n              </div>\n\n              {/* Item Information */}\n              {selectedReport.item && (\n                <div>\n                  <h3 className=\"font-medium mb-3\">Reported Item</h3>\n                  <div className=\"border rounded-lg p-4\">\n                    <div className=\"flex gap-4\">\n                      {selectedReport.item.image_url && (\n                        <div className=\"relative w-24 h-24 flex-shrink-0\">\n                          <Image\n                            src={selectedReport.item.image_url || \"/placeholder.svg\"}\n                            alt={selectedReport.item.title}\n                            fill\n                            className=\"object-cover rounded\"\n                          />\n                        </div>\n                      )}\n                      <div className=\"flex-1\">\n                        <h4 className=\"font-medium\">{selectedReport.item.title}</h4>\n                        <p className=\"text-sm text-gray-600 mt-1\">{selectedReport.item.description}</p>\n                        <div className=\"text-sm text-gray-500 mt-2\">\n                          <p>Category: {selectedReport.item.category}</p>\n                          <p>Location: {selectedReport.item.pickup_location}</p>\n                          <p>Owner: {selectedReport.item.owner_name}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Actions */}\n              {selectedReport.status === \"pending\" && (\n                <div className=\"flex gap-2\">\n                  <Button\n                    onClick={() => {\n                      handleMarkAsReviewed(selectedReport.id)\n                      setDetailsOpen(false)\n                    }}\n                    className=\"flex-1\"\n                  >\n                    <CheckCircle className=\"h-4 w-4 mr-2\" />\n                    Mark as Reviewed\n                  </Button>\n                  {selectedReport.item && (\n                    <Button\n                      variant=\"outline\"\n                      onClick={() => {\n                        handleDeleteItem(selectedReport.item!.id, selectedReport.id)\n                        setDetailsOpen(false)\n                      }}\n                      className=\"flex-1 text-red-600 hover:text-red-700\"\n                    >\n                      <Trash2 className=\"h-4 w-4 mr-2\" />\n                      Delete Item\n                    </Button>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","size_bytes":16067},"components/admin/StoriesManager.tsx":{"content":"\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Dialog, DialogTrigger, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Edit, Trash2, Loader2, CheckCircle, XCircle } from \"lucide-react\"\n\nexport default function StoriesManager() {\n  const [stories, setStories] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [actionLoading, setActionLoading] = useState<string | null>(null)\n  const [editDialogOpen, setEditDialogOpen] = useState(false)\n  const [editStory, setEditStory] = useState<any | null>(null)\n  const [editForm, setEditForm] = useState({\n    name: \"\",\n    location: \"\",\n    story: \"\",\n  })\n  const [editLoading, setEditLoading] = useState(false)\n  const [deleteLoading, setDeleteLoading] = useState<string | null>(null)\n\n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(1)\n  const [totalStories, setTotalStories] = useState(0)\n  const storiesPerPage = 10\n\n  useEffect(() => {\n    fetchStories()\n  }, [currentPage])\n\n  const fetchStories = async () => {\n    try {\n      setLoading(true)\n      const from = (currentPage - 1) * storiesPerPage\n      const to = from + storiesPerPage - 1\n      \n      const { data, error, count } = await supabase\n        .from(\"stories\")\n        .select(\"*\", { count: 'exact' })\n        .order(\"created_at\", { ascending: false })\n        .range(from, to)\n      \n      if (error) throw error\n      \n      setStories(data || [])\n      setTotalStories(count || 0)\n      setTotalPages(Math.ceil((count || 0) / storiesPerPage))\n    } catch (error) {\n      console.error(\"Error fetching stories:\", error)\n      console.error(\"Error details:\", {\n        message: error instanceof Error ? error.message : 'Unknown error',\n        stack: error instanceof Error ? error.stack : undefined,\n        error\n      })\n      setStories([])\n      setTotalStories(0)\n      setTotalPages(0)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleApprove = async (id: string) => {\n    setActionLoading(id)\n    await supabase.from(\"stories\").update({ status: \"approved\" }).eq(\"id\", id)\n    await fetchStories()\n    setActionLoading(null)\n  }\n\n  const handleReject = async (id: string) => {\n    setActionLoading(id)\n    await supabase.from(\"stories\").update({ status: \"rejected\" }).eq(\"id\", id)\n    await fetchStories()\n    setActionLoading(null)\n  }\n\n  const handleEdit = (story: any) => {\n    setEditStory(story)\n    setEditForm({\n      name: story.name || \"\",\n      location: story.location || \"\",\n      story: story.story || \"\",\n    })\n    setEditDialogOpen(true)\n  }\n\n  const handleSaveEdit = async () => {\n    if (!editStory) return\n    setEditLoading(true)\n    await supabase.from(\"stories\").update({\n      name: editForm.name,\n      location: editForm.location,\n      story: editForm.story,\n    }).eq(\"id\", editStory.id)\n    setEditLoading(false)\n    setEditDialogOpen(false)\n    setEditStory(null)\n    await fetchStories()\n  }\n\n  const handleDelete = async (id: string) => {\n    if (!confirm(\"Are you sure you want to delete this story? This action cannot be undone.\")) return\n    setDeleteLoading(id)\n    await supabase.from(\"stories\").delete().eq(\"id\", id)\n    setDeleteLoading(null)\n    await fetchStories()\n  }\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex justify-center items-center h-32\">\n          <div className=\"flex items-center gap-2\">\n            <Loader2 className=\"h-6 w-6 animate-spin text-green-600\" />\n            <span className=\"text-gray-600\">Loading stories...</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Results Summary */}\n      <div className=\"flex justify-between items-center\">\n        <p className=\"text-sm text-gray-600\">\n          Showing {stories.length} of {totalStories} stories\n        </p>\n        {totalPages > 1 && (\n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n              disabled={currentPage === 1}\n            >\n              Previous\n            </Button>\n            <span className=\"text-sm text-gray-600\">\n              Page {currentPage} of {totalPages}\n            </span>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n              disabled={currentPage === totalPages}\n            >\n              Next\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {stories.length === 0 && !loading && (\n        <div className=\"text-center py-12\">\n          <div className=\"text-gray-400 text-lg\">No stories submitted yet.</div>\n        </div>\n      )}\n      {stories.map(story => (\n        <Card key={story.id} className=\"border-l-4 mb-4 border-l-green-500\">\n          <CardHeader>\n            <CardTitle>\n              {story.name} <span className=\"text-gray-400 text-sm\">({story.location})</span>\n              <Badge className=\"ml-2\" variant={\n                story.status === \"approved\"\n                  ? \"default\"\n                  : story.status === \"pending\"\n                  ? \"secondary\"\n                  : \"destructive\"\n              }>\n                {story.status}\n              </Badge>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <blockquote className=\"italic mb-2\">\"{story.story}\"</blockquote>\n            <div className=\"flex flex-wrap gap-2 mt-2\">\n              {story.status === \"pending\" && (\n                <>\n                  <Button size=\"sm\" onClick={() => handleApprove(story.id)} disabled={actionLoading === story.id} className=\"flex items-center gap-1 min-w-[90px]\">\n                    {actionLoading === story.id ? <Loader2 className=\"animate-spin h-4 w-4\" /> : <CheckCircle className=\"h-3 w-3\" />}\n                    {actionLoading === story.id ? \"Approving...\" : \"Approve\"}\n                  </Button>\n                  <Button size=\"sm\" variant=\"destructive\" onClick={() => handleReject(story.id)} disabled={actionLoading === story.id} className=\"flex items-center gap-1 min-w-[90px]\">\n                    {actionLoading === story.id ? <Loader2 className=\"animate-spin h-4 w-4\" /> : <XCircle className=\"h-3 w-3\" />}\n                    {actionLoading === story.id ? \"Rejecting...\" : \"Reject\"}\n                  </Button>\n                </>\n              )}\n              {story.status === \"approved\" && (\n                <span className=\"text-green-600 font-semibold\">Approved</span>\n              )}\n              {story.status === \"rejected\" && (\n                <span className=\"text-red-600 font-semibold\">Rejected</span>\n              )}\n              <Button size=\"sm\" variant=\"outline\" onClick={() => handleEdit(story)} className=\"flex items-center gap-1 min-w-[90px]\">\n                <Edit className=\"h-3 w-3\" /> Edit\n              </Button>\n              <Button size=\"sm\" variant=\"outline\" onClick={() => handleDelete(story.id)} className=\"text-red-600 hover:text-red-700 flex items-center gap-1 min-w-[90px]\" disabled={deleteLoading === story.id}>\n                {deleteLoading === story.id ? <Loader2 className=\"animate-spin h-4 w-4\" /> : <Trash2 className=\"h-3 w-3\" />}\n                {deleteLoading === story.id ? \"Deleting...\" : \"Delete\"}\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      ))}\n      <Dialog open={editDialogOpen} onOpenChange={setEditDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Edit Story</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">Name</label>\n              <Input\n                value={editForm.name}\n                onChange={e => setEditForm({ ...editForm, name: e.target.value })}\n                placeholder=\"Name\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">Location</label>\n              <Input\n                value={editForm.location}\n                onChange={e => setEditForm({ ...editForm, location: e.target.value })}\n                placeholder=\"Location\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">Story</label>\n              <Textarea\n                value={editForm.story}\n                onChange={e => setEditForm({ ...editForm, story: e.target.value })}\n                placeholder=\"Story\"\n                rows={5}\n              />\n            </div>\n          </div>\n          <DialogFooter className=\"mt-4\">\n            <Button variant=\"outline\" onClick={() => setEditDialogOpen(false)}>\n              Cancel\n            </Button>\n            <Button onClick={handleSaveEdit} disabled={editLoading}>\n              {editLoading ? \"Saving...\" : \"Save Changes\"}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n} ","size_bytes":9519},"components/admin/UsersManager.tsx":{"content":"\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Label } from \"@/components/ui/label\"\nimport { Users, Search, UserX, UserCheck, Mail, Calendar, Package, AlertTriangle } from \"lucide-react\"\n\ninterface UserStats {\n  user_id: string\n  full_name: string | null\n  email: string\n  total_items: number\n  active_items: number\n  completed_items: number\n  reports_count: number\n  last_activity: string | null\n  is_suspended?: boolean\n  suspension_reason?: string\n}\n\nexport default function UsersManager() {\n  const [users, setUsers] = useState<UserStats[]>([])\n  const [loading, setLoading] = useState(true)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [suspendDialogOpen, setSuspendDialogOpen] = useState(false)\n  const [selectedUser, setSelectedUser] = useState<UserStats | null>(null)\n  const [suspensionForm, setSuspensionForm] = useState({\n    reason: \"\",\n    isPermanent: false,\n    suspendedUntil: \"\",\n  })\n  \n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(1)\n  const [totalUsers, setTotalUsers] = useState(0)\n  const usersPerPage = 15\n\n  useEffect(() => {\n    fetchUsers()\n  }, [currentPage, searchTerm])\n\n  const fetchUsers = async () => {\n    try {\n      setLoading(true)\n      \n      // Get user stats with pagination\n      const { data: userStats, error, count } = await supabase\n        .rpc(\"get_user_stats\", {}, { count: 'exact' })\n        .range((currentPage - 1) * usersPerPage, currentPage * usersPerPage - 1)\n\n      if (error) throw error\n\n      // Get all user IDs for suspension check\n      const userIds = userStats?.map(user => user.user_id) || []\n      \n      // Get suspensions in one query\n      const { data: suspensions } = await supabase\n        .from(\"user_suspensions\")\n        .select(\"user_id, reason, suspended_until, is_permanent\")\n        .in(\"user_id\", userIds)\n        .or(`is_permanent.eq.true,suspended_until.gte.${new Date().toISOString()}`)\n        .order(\"created_at\", { ascending: false })\n\n      // Create suspension map\n      const suspensionMap = new Map()\n      suspensions?.forEach(suspension => {\n        if (!suspensionMap.has(suspension.user_id)) {\n          suspensionMap.set(suspension.user_id, suspension)\n        }\n      })\n\n      // Combine user stats with suspension info\n      const usersWithSuspensions = userStats?.map(user => ({\n        ...user,\n        is_suspended: suspensionMap.has(user.user_id),\n        suspension_reason: suspensionMap.get(user.user_id)?.reason || null,\n      })) || []\n\n      setUsers(usersWithSuspensions)\n      setTotalUsers(count || 0)\n      setTotalPages(Math.ceil((count || 0) / usersPerPage))\n    } catch (error) {\n      console.error(\"Error fetching users:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Reset to first page when search changes\n  useEffect(() => {\n    setCurrentPage(1)\n  }, [searchTerm])\n\n  const handleSuspendUser = async () => {\n    if (!selectedUser) return\n\n    try {\n      const suspendedUntil = suspensionForm.isPermanent\n        ? null\n        : suspensionForm.suspendedUntil\n          ? new Date(suspensionForm.suspendedUntil).toISOString()\n          : null\n\n      const { error } = await supabase.from(\"user_suspensions\").insert({\n        user_id: selectedUser.user_id,\n        admin_id: (await supabase.auth.getUser()).data.user?.id,\n        reason: suspensionForm.reason,\n        suspended_until: suspendedUntil,\n        is_permanent: suspensionForm.isPermanent,\n      })\n\n      if (error) throw error\n\n      await fetchUsers()\n      setSuspendDialogOpen(false)\n      setSuspensionForm({ reason: \"\", isPermanent: false, suspendedUntil: \"\" })\n      alert(\"User suspended successfully!\")\n    } catch (error: any) {\n      console.error(\"Error suspending user:\", error)\n      alert(`Error suspending user: ${error.message}`)\n    }\n  }\n\n  const handleUnsuspendUser = async (userId: string) => {\n    if (!confirm(\"Are you sure you want to unsuspend this user?\")) {\n      return\n    }\n\n    try {\n      const { error } = await supabase.from(\"user_suspensions\").delete().eq(\"user_id\", userId)\n\n      if (error) throw error\n\n      await fetchUsers()\n      alert(\"User unsuspended successfully!\")\n    } catch (error: any) {\n      console.error(\"Error unsuspending user:\", error)\n      alert(`Error unsuspending user: ${error.message}`)\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-lg\">Loading users...</div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Users className=\"h-5 w-5\" />\n            User Management\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {/* Search */}\n          <div className=\"relative mb-6\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <Input\n              placeholder=\"Search users by name or email...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n\n          {/* Users List */}\n          <div className=\"space-y-4\">\n            {users.map((user) => (\n              <Card key={user.user_id} className={`${user.is_suspended ? \"border-red-200 bg-red-50\" : \"\"}`}>\n                <CardContent className=\"p-4\">\n                  <div className=\"flex justify-between items-start\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <h3 className=\"font-medium\">{user.full_name || \"No Name\"}</h3>\n                        {user.is_suspended && (\n                          <Badge className=\"bg-red-100 text-red-800\">\n                            <UserX className=\"h-3 w-3 mr-1\" />\n                            Suspended\n                          </Badge>\n                        )}\n                      </div>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600\">\n                        <div className=\"space-y-1\">\n                          <div className=\"flex items-center gap-1\">\n                            <Mail className=\"h-3 w-3\" />\n                            <span>{user.email}</span>\n                          </div>\n                          {user.last_activity && (\n                            <div className=\"flex items-center gap-1\">\n                              <Calendar className=\"h-3 w-3\" />\n                              <span>Last active: {new Date(user.last_activity).toLocaleDateString()}</span>\n                            </div>\n                          )}\n                        </div>\n\n                        <div className=\"space-y-1\">\n                          <div className=\"flex items-center gap-1\">\n                            <Package className=\"h-3 w-3\" />\n                            <span>{user.total_items} total items</span>\n                          </div>\n                          <div className=\"flex items-center gap-1\">\n                            <span className=\"w-3 h-3 bg-green-500 rounded-full\"></span>\n                            <span>{user.active_items} active</span>\n                          </div>\n                          <div className=\"flex items-center gap-1\">\n                            <span className=\"w-3 h-3 bg-blue-500 rounded-full\"></span>\n                            <span>{user.completed_items} completed</span>\n                          </div>\n                          {user.reports_count > 0 && (\n                            <div className=\"flex items-center gap-1\">\n                              <AlertTriangle className=\"h-3 w-3 text-red-500\" />\n                              <span className=\"text-red-600\">{user.reports_count} reports</span>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n\n                      {user.is_suspended && user.suspension_reason && (\n                        <div className=\"mt-2 p-2 bg-red-100 rounded text-sm\">\n                          <strong>Suspension reason:</strong> {user.suspension_reason}\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"flex gap-2 ml-4\">\n                      {user.is_suspended ? (\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => handleUnsuspendUser(user.user_id)}\n                          className=\"text-green-600 hover:text-green-700\"\n                        >\n                          <UserCheck className=\"h-3 w-3 mr-1\" />\n                          Unsuspend\n                        </Button>\n                      ) : (\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => {\n                            setSelectedUser(user)\n                            setSuspendDialogOpen(true)\n                          }}\n                          className=\"text-red-600 hover:text-red-700\"\n                        >\n                          <UserX className=\"h-3 w-3 mr-1\" />\n                          Suspend\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className=\"flex justify-center items-center gap-2 mt-6\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n                disabled={currentPage === 1}\n              >\n                Previous\n              </Button>\n              <span className=\"text-sm text-gray-600\">\n                Page {currentPage} of {totalPages}\n              </span>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n                disabled={currentPage === totalPages}\n              >\n                Next\n              </Button>\n            </div>\n          )}\n\n          {users.length === 0 && !loading && (\n            <div className=\"text-center py-12\">\n              <Users className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No users found</h3>\n              <p className=\"text-gray-600\">Try adjusting your search terms.</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Suspend User Dialog */}\n      <Dialog open={suspendDialogOpen} onOpenChange={setSuspendDialogOpen}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle>Suspend User</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <p className=\"text-sm text-gray-600 mb-4\">\n                You are about to suspend <strong>{selectedUser?.full_name || selectedUser?.email}</strong>\n              </p>\n            </div>\n\n            <div>\n              <Label htmlFor=\"reason\">Reason for suspension *</Label>\n              <Textarea\n                id=\"reason\"\n                value={suspensionForm.reason}\n                onChange={(e) => setSuspensionForm({ ...suspensionForm, reason: e.target.value })}\n                placeholder=\"Explain why this user is being suspended...\"\n                rows={3}\n                required\n              />\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                id=\"isPermanent\"\n                checked={suspensionForm.isPermanent}\n                onChange={(e) => setSuspensionForm({ ...suspensionForm, isPermanent: e.target.checked })}\n              />\n              <Label htmlFor=\"isPermanent\">Permanent suspension</Label>\n            </div>\n\n            {!suspensionForm.isPermanent && (\n              <div>\n                <Label htmlFor=\"suspendedUntil\">Suspend until</Label>\n                <Input\n                  id=\"suspendedUntil\"\n                  type=\"datetime-local\"\n                  value={suspensionForm.suspendedUntil}\n                  onChange={(e) => setSuspensionForm({ ...suspensionForm, suspendedUntil: e.target.value })}\n                />\n              </div>\n            )}\n\n            <div className=\"flex gap-2\">\n              <Button variant=\"outline\" onClick={() => setSuspendDialogOpen(false)} className=\"flex-1\">\n                Cancel\n              </Button>\n              <Button\n                onClick={handleSuspendUser}\n                className=\"flex-1 bg-red-600 hover:bg-red-700\"\n                disabled={!suspensionForm.reason.trim()}\n              >\n                Suspend User\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n","size_bytes":13635},"components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive: \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div ref={ref} role=\"alert\" className={cn(alertVariants({ variant }), className)} {...props} />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"text-sm [&_p]:leading-relaxed\", className)} {...props} />\n  ),\n)\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertDescription }\n","size_bytes":1232},"components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"components/ui/card.tsx":{"content":"import * as React from \"react\"\nimport Link from \"next/link\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & { clickable?: boolean }\n>(({ className, clickable = false, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      clickable && \"cursor-pointer transition-all duration-200 hover:shadow-lg hover:scale-[1.02] hover:-translate-y-1 active:scale-[0.98]\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":2073},"components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3849},"components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"components/ui/label.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":724},"components/ui/scroll-area.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1656},"components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName = SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\",\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label ref={ref} className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)} {...props} />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator ref={ref} className={cn(\"-mx-1 my-1 h-px bg-muted\", className)} {...props} />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5567},"components/ui/skeleton.tsx":{"content":"import type React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nfunction Skeleton({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return <div className={cn(\"animate-pulse rounded-md bg-muted\", className)} {...props} />\n}\n\nexport { Skeleton }\n","size_bytes":262},"components/ui/switch.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1153},"components/ui/tabs.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1897},"components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"app/collaborations/[id]/page.tsx":{"content":"\n\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"next/navigation\"\nimport { supabase } from \"@/lib/supabase\"\nimport { useAuth } from \"@/contexts/AuthContext\"\nimport ItemList from \"@/components/ItemList\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Users, MapPin, Calendar, ArrowLeft } from \"lucide-react\"\nimport Link from \"next/link\"\n\ninterface Collaboration {\n  id: string\n  title: string\n  description: string\n  location: string\n  target_date: string | null\n  status: string\n  created_at: string\n  creator_id: string\n  creator_name?: string\n  participant_count?: number\n  is_participant?: boolean\n}\n\nexport default function CollaborationPage() {\n  const params = useParams()\n  const collaborationId = params?.id as string\n  const { user } = useAuth()\n  const [collaboration, setCollaboration] = useState<Collaboration | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    if (!collaborationId) return\n\n    const fetchCollaboration = async () => {\n      setLoading(true)\n      try {\n        // Fetch collaboration details\n        const { data: collabData, error: collabError } = await supabase\n          .from(\"collaboration_requests\")\n          .select(\"*\")\n          .eq(\"id\", collaborationId)\n          .single()\n\n        if (collabError) throw collabError\n\n        // Fetch creator name\n        const { data: profileData } = await supabase\n          .from(\"profiles\")\n          .select(\"full_name\")\n          .eq(\"id\", collabData.creator_id)\n          .single()\n\n        // Fetch participant count\n        const { data: participantData } = await supabase\n          .from(\"collaboration_participants\")\n          .select(\"user_id\")\n          .eq(\"collaboration_id\", collaborationId)\n\n        // Check if current user is a participant\n        let isParticipant = false\n        if (user && participantData) {\n          isParticipant = participantData.some((p) => p.user_id === user.id)\n        }\n\n        setCollaboration({\n          ...collabData,\n          creator_name: profileData?.full_name || \"Anonymous\",\n          participant_count: participantData?.length || 0,\n          is_participant: isParticipant,\n        })\n      } catch (error: any) {\n        console.error(\"Error fetching collaboration:\", error)\n        setError(\"Failed to load collaboration details\")\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchCollaboration()\n  }, [collaborationId, user])\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 p-4\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center py-8\">Loading collaboration...</div>\n        </div>\n      </div>\n    )\n  }\n\n  if (error || !collaboration) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 p-4\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"text-center py-8 text-red-600\">\n            {error || \"Collaboration not found\"}\n          </div>\n          <div className=\"text-center\">\n            <Link href=\"/\">\n              <Button variant=\"outline\">\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Back to Home\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4\">\n      <div className=\"max-w-6xl mx-auto space-y-6\">\n        {/* Back Button */}\n        <Link href=\"/\">\n          <Button variant=\"outline\">\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to Home\n          </Button>\n        </Link>\n\n        {/* Collaboration Header */}\n        <Card>\n          <CardHeader>\n            <div className=\"flex justify-between items-start\">\n              <div>\n                <CardTitle className=\"text-2xl text-green-700\">\n                  {collaboration.title}\n                </CardTitle>\n                <CardDescription className=\"mt-2\">\n                  {collaboration.description}\n                </CardDescription>\n              </div>\n              <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-800\">\n                <Users className=\"h-3 w-3 mr-1\" />\n                {collaboration.participant_count} participants\n              </Badge>\n            </div>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <MapPin className=\"h-4 w-4\" />\n              <span>{collaboration.location}</span>\n            </div>\n\n            {collaboration.target_date && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <Calendar className=\"h-4 w-4\" />\n                <span>Target: {new Date(collaboration.target_date).toLocaleDateString()}</span>\n              </div>\n            )}\n\n            <div className=\"text-sm text-gray-500\">\n              Created by {collaboration.creator_name} • {new Date(collaboration.created_at).toLocaleDateString()}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Items Section */}\n        <div className=\"space-y-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Food Donations</h2>\n          <ItemList itemType=\"food\" collaborationId={collaborationId} />\n          \n          <h2 className=\"text-xl font-semibold text-gray-900\">Item Donations</h2>\n          <ItemList itemType=\"non-food\" collaborationId={collaborationId} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","size_bytes":5694},"replit.md":{"content":"# Overview\n\nTigawane is a community sharing platform designed for Malawi that enables users to share food and non-food items within their local communities. The platform focuses on reducing waste and strengthening community bonds by connecting people who have items to share with those who need them. The application features location-based filtering to help users find nearby items, collaboration tools for community organizing, and a comprehensive chat system for coordination.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: Next.js 15 with React 19 and TypeScript\n- **Styling**: Tailwind CSS with shadcn/ui components for consistent UI design\n- **State Management**: React Context API for authentication and location state\n- **Component Structure**: Modular component architecture with reusable UI components\n\n## Backend Architecture\n- **Database**: Supabase (PostgreSQL) for data storage and real-time functionality\n- **Authentication**: Supabase Auth with custom profile management\n- **Real-time Features**: Supabase real-time subscriptions for chat and notifications\n- **File Storage**: Supabase Storage for item images\n\n## Data Storage Solutions\n- **Primary Database**: PostgreSQL through Supabase with tables for:\n  - `profiles` - User information with location coordinates\n  - `items` - Food and non-food items with GPS coordinates\n  - `claims` - Item requests and claim management\n  - `messages` - Chat system for item coordination\n  - `collaboration_requests` - Community collaboration organizing\n  - `notifications` - Real-time user notifications\n  - `stories` - Community success stories\n- **Location Data**: GPS coordinates stored for both users and items with distance calculation functions\n- **Image Storage**: Supabase bucket storage for item photographs\n\n## Authentication and Authorization\n- **User Authentication**: Supabase Auth with email/password\n- **Admin System**: Role-based access control with `admin_users` table\n- **Profile Management**: Automatic profile creation with location data\n- **Session Management**: Context-based authentication state management\n\n## Location-Based Features\n- **GPS Integration**: Browser geolocation API for current position\n- **Geocoding**: OpenStreetMap integration for address-to-coordinates conversion\n- **Distance Calculation**: Haversine formula implementation for proximity filtering\n- **City Selection**: Predefined Malawi cities with coordinate mapping\n- **Radius Filtering**: Configurable search radius from 1km to 100km\n\n## Communication System\n- **Item Claims**: Request system for item sharing with messaging\n- **Real-time Chat**: Supabase real-time subscriptions for instant messaging\n- **Collaboration Chat**: Group messaging for community organizing\n- **Notifications**: Real-time notification system for user engagement\n\n## Admin Dashboard\n- **Content Management**: Admin interface for managing items, users, and reports\n- **Analytics**: Usage statistics and community insights\n- **Story Management**: Moderation system for community success stories\n- **User Management**: User suspension and account management tools\n\n# External Dependencies\n\n## Primary Services\n- **Supabase**: Backend-as-a-Service providing PostgreSQL database, authentication, real-time subscriptions, and file storage\n- **OpenStreetMap**: Geocoding service for converting addresses to GPS coordinates\n- **Browser Geolocation API**: Device location services for GPS positioning\n\n## UI and Styling\n- **shadcn/ui**: React component library built on Radix UI primitives\n- **Tailwind CSS**: Utility-first CSS framework for styling\n- **Lucide React**: Icon library for consistent iconography\n- **Radix UI**: Headless UI primitives for accessibility and functionality\n\n## Development Tools\n- **Next.js**: React framework with App Router for routing and SSR\n- **TypeScript**: Static typing for improved development experience\n- **React Query/TanStack Query**: Data fetching and caching (configured but usage unclear)\n- **Class Variance Authority**: Utility for managing component variants\n\n## Image and Media\n- **Next.js Image**: Optimized image loading and display\n- **Image optimization**: Built-in Next.js image optimization pipeline\n\n## Location Services\n- **Malawi Cities Database**: Hardcoded coordinates for major Malawi cities (Lilongwe, Blantyre, Mzuzu, etc.)\n- **Distance Calculation**: Custom Haversine formula implementation for GPS distance calculation","size_bytes":4500},"pnpm-lock.yaml":{"content":"lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    dependencies:\n      '@hookform/resolvers':\n        specifier: ^3.9.1\n        version: 3.9.1(react-hook-form@7.54.1(react@19.0.0))\n      '@radix-ui/react-accordion':\n        specifier: 1.2.2\n        version: 1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-alert-dialog':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-aspect-ratio':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-avatar':\n        specifier: 1.1.2\n        version: 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-checkbox':\n        specifier: 1.1.3\n        version: 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-collapsible':\n        specifier: 1.1.2\n        version: 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-context-menu':\n        specifier: 2.2.4\n        version: 2.2.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-dialog':\n        specifier: latest\n        version: 1.1.14(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-dropdown-menu':\n        specifier: 2.1.4\n        version: 2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-hover-card':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-label':\n        specifier: latest\n        version: 2.1.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-menubar':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-navigation-menu':\n        specifier: 1.2.3\n        version: 1.2.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-popover':\n        specifier: 1.1.4\n        version: 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-progress':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-radio-group':\n        specifier: 1.2.2\n        version: 1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-scroll-area':\n        specifier: latest\n        version: 1.2.9(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-select':\n        specifier: latest\n        version: 2.2.5(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-separator':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slider':\n        specifier: 1.2.2\n        version: 1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot':\n        specifier: latest\n        version: 1.2.3(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-switch':\n        specifier: latest\n        version: 1.2.5(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-tabs':\n        specifier: latest\n        version: 1.1.12(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-toast':\n        specifier: 1.2.4\n        version: 1.2.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-toggle':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-toggle-group':\n        specifier: 1.1.1\n        version: 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-tooltip':\n        specifier: 1.1.6\n        version: 1.1.6(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@supabase/supabase-js':\n        specifier: latest\n        version: 2.50.0\n      autoprefixer:\n        specifier: ^10.4.20\n        version: 10.4.20(postcss@8.5.0)\n      class-variance-authority:\n        specifier: ^0.7.1\n        version: 0.7.1\n      clsx:\n        specifier: ^2.1.1\n        version: 2.1.1\n      cmdk:\n        specifier: 1.0.4\n        version: 1.0.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      date-fns:\n        specifier: 4.1.0\n        version: 4.1.0\n      embla-carousel-react:\n        specifier: 8.5.1\n        version: 8.5.1(react@19.0.0)\n      input-otp:\n        specifier: 1.4.1\n        version: 1.4.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      lucide-react:\n        specifier: ^0.454.0\n        version: 0.454.0(react@19.0.0)\n      next:\n        specifier: 15.2.4\n        version: 15.2.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      next-themes:\n        specifier: latest\n        version: 0.4.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react:\n        specifier: ^19\n        version: 19.0.0\n      react-day-picker:\n        specifier: 8.10.1\n        version: 8.10.1(date-fns@4.1.0)(react@19.0.0)\n      react-dom:\n        specifier: ^19\n        version: 19.0.0(react@19.0.0)\n      react-hook-form:\n        specifier: ^7.54.1\n        version: 7.54.1(react@19.0.0)\n      react-resizable-panels:\n        specifier: ^2.1.7\n        version: 2.1.7(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      recharts:\n        specifier: 2.15.0\n        version: 2.15.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      sonner:\n        specifier: ^1.7.1\n        version: 1.7.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      tailwind-merge:\n        specifier: ^2.5.5\n        version: 2.5.5\n      tailwindcss-animate:\n        specifier: ^1.0.7\n        version: 1.0.7(tailwindcss@3.4.17)\n      vaul:\n        specifier: ^0.9.6\n        version: 0.9.6(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      zod:\n        specifier: ^3.24.1\n        version: 3.24.1\n    devDependencies:\n      '@types/node':\n        specifier: ^22\n        version: 22.0.0\n      '@types/react':\n        specifier: ^19\n        version: 19.0.0\n      '@types/react-dom':\n        specifier: ^19\n        version: 19.0.0\n      postcss:\n        specifier: ^8.5\n        version: 8.5.0\n      tailwindcss:\n        specifier: ^3.4.17\n        version: 3.4.17\n      typescript:\n        specifier: ^5\n        version: 5.0.2\n\npackages:\n\n  '@alloc/quick-lru@5.2.0':\n    resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}\n    engines: {node: '>=10'}\n\n  '@babel/runtime@7.27.6':\n    resolution: {integrity: sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==}\n    engines: {node: '>=6.9.0'}\n\n  '@emnapi/runtime@1.4.3':\n    resolution: {integrity: sha512-pBPWdu6MLKROBX05wSNKcNb++m5Er+KQ9QkB+WVM+pW2Kx9hoSrVTnu3BdkI5eBLZoKu/J6mW/B6i6bJB2ytXQ==}\n\n  '@floating-ui/core@1.7.1':\n    resolution: {integrity: sha512-azI0DrjMMfIug/ExbBaeDVJXcY0a7EPvPjb2xAJPa4HeimBX+Z18HK8QQR3jb6356SnDDdxx+hinMLcJEDdOjw==}\n\n  '@floating-ui/dom@1.7.1':\n    resolution: {integrity: sha512-cwsmW/zyw5ltYTUeeYJ60CnQuPqmGwuGVhG9w0PRaRKkAyi38BT5CKrpIbb+jtahSwUl04cWzSx9ZOIxeS6RsQ==}\n\n  '@floating-ui/react-dom@2.1.3':\n    resolution: {integrity: sha512-huMBfiU9UnQ2oBwIhgzyIiSpVgvlDstU8CX0AF+wS+KzmYMs0J2a3GwuFHV1Lz+jlrQGeC1fF+Nv0QoumyV0bA==}\n    peerDependencies:\n      react: '>=16.8.0'\n      react-dom: '>=16.8.0'\n\n  '@floating-ui/utils@0.2.9':\n    resolution: {integrity: sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==}\n\n  '@hookform/resolvers@3.9.1':\n    resolution: {integrity: sha512-ud2HqmGBM0P0IABqoskKWI6PEf6ZDDBZkFqe2Vnl+mTHCEHzr3ISjjZyCwTjC/qpL25JC9aIDkloQejvMeq0ug==}\n    peerDependencies:\n      react-hook-form: ^7.0.0\n\n  '@img/sharp-darwin-arm64@0.33.5':\n    resolution: {integrity: sha512-UT4p+iz/2H4twwAoLCqfA9UH5pI6DggwKEGuaPy7nCVQ8ZsiY5PIcrRvD1DzuY3qYL07NtIQcWnBSY/heikIFQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@img/sharp-darwin-x64@0.33.5':\n    resolution: {integrity: sha512-fyHac4jIc1ANYGRDxtiqelIbdWkIuQaI84Mv45KvGRRxSAa7o7d1ZKAOBaYbnepLC1WqxfpimdeWfvqqSGwR2Q==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [darwin]\n\n  '@img/sharp-libvips-darwin-arm64@1.0.4':\n    resolution: {integrity: sha512-XblONe153h0O2zuFfTAbQYAX2JhYmDHeWikp1LM9Hul9gVPjFY427k6dFEcOL72O01QxQsWi761svJ/ev9xEDg==}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@img/sharp-libvips-darwin-x64@1.0.4':\n    resolution: {integrity: sha512-xnGR8YuZYfJGmWPvmlunFaWJsb9T/AO2ykoP3Fz/0X5XV2aoYBPkX6xqCQvUTKKiLddarLaxpzNe+b1hjeWHAQ==}\n    cpu: [x64]\n    os: [darwin]\n\n  '@img/sharp-libvips-linux-arm64@1.0.4':\n    resolution: {integrity: sha512-9B+taZ8DlyyqzZQnoeIvDVR/2F4EbMepXMc/NdVbkzsJbzkUjhXv/70GQJ7tdLA4YJgNP25zukcxpX2/SueNrA==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-arm@1.0.5':\n    resolution: {integrity: sha512-gvcC4ACAOPRNATg/ov8/MnbxFDJqf/pDePbBnuBDcjsI8PssmjoKMAz4LtLaVi+OnSb5FK/yIOamqDwGmXW32g==}\n    cpu: [arm]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-s390x@1.0.4':\n    resolution: {integrity: sha512-u7Wz6ntiSSgGSGcjZ55im6uvTrOxSIS8/dgoVMoiGE9I6JAfU50yH5BoDlYA1tcuGS7g/QNtetJnxA6QEsCVTA==}\n    cpu: [s390x]\n    os: [linux]\n\n  '@img/sharp-libvips-linux-x64@1.0.4':\n    resolution: {integrity: sha512-MmWmQ3iPFZr0Iev+BAgVMb3ZyC4KeFc3jFxnNbEPas60e1cIfevbtuyf9nDGIzOaW9PdnDciJm+wFFaTlj5xYw==}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-libvips-linuxmusl-arm64@1.0.4':\n    resolution: {integrity: sha512-9Ti+BbTYDcsbp4wfYib8Ctm1ilkugkA/uscUn6UXK1ldpC1JjiXbLfFZtRlBhjPZ5o1NCLiDbg8fhUPKStHoTA==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-libvips-linuxmusl-x64@1.0.4':\n    resolution: {integrity: sha512-viYN1KX9m+/hGkJtvYYp+CCLgnJXwiQB39damAO7WMdKWlIhmYTfHjwSbQeUK/20vY154mwezd9HflVFM1wVSw==}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-linux-arm64@0.33.5':\n    resolution: {integrity: sha512-JMVv+AMRyGOHtO1RFBiJy/MBsgz0x4AWrT6QoEVVTyh1E39TrCUpTRI7mx9VksGX4awWASxqCYLCV4wBZHAYxA==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-linux-arm@0.33.5':\n    resolution: {integrity: sha512-JTS1eldqZbJxjvKaAkxhZmBqPRGmxgu+qFKSInv8moZ2AmT5Yib3EQ1c6gp493HvrvV8QgdOXdyaIBrhvFhBMQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm]\n    os: [linux]\n\n  '@img/sharp-linux-s390x@0.33.5':\n    resolution: {integrity: sha512-y/5PCd+mP4CA/sPDKl2961b+C9d+vPAveS33s6Z3zfASk2j5upL6fXVPZi7ztePZ5CuH+1kW8JtvxgbuXHRa4Q==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [s390x]\n    os: [linux]\n\n  '@img/sharp-linux-x64@0.33.5':\n    resolution: {integrity: sha512-opC+Ok5pRNAzuvq1AG0ar+1owsu842/Ab+4qvU879ippJBHvyY5n2mxF1izXqkPYlGuP/M556uh53jRLJmzTWA==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-linuxmusl-arm64@0.33.5':\n    resolution: {integrity: sha512-XrHMZwGQGvJg2V/oRSUfSAfjfPxO+4DkiRh6p2AFjLQztWUuY/o8Mq0eMQVIY7HJ1CDQUJlxGGZRw1a5bqmd1g==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [arm64]\n    os: [linux]\n\n  '@img/sharp-linuxmusl-x64@0.33.5':\n    resolution: {integrity: sha512-WT+d/cgqKkkKySYmqoZ8y3pxx7lx9vVejxW/W4DOFMYVSkErR+w7mf2u8m/y4+xHe7yY9DAXQMWQhpnMuFfScw==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [linux]\n\n  '@img/sharp-wasm32@0.33.5':\n    resolution: {integrity: sha512-ykUW4LVGaMcU9lu9thv85CbRMAwfeadCJHRsg2GmeRa/cJxsVY9Rbd57JcMxBkKHag5U/x7TSBpScF4U8ElVzg==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [wasm32]\n\n  '@img/sharp-win32-ia32@0.33.5':\n    resolution: {integrity: sha512-T36PblLaTwuVJ/zw/LaH0PdZkRz5rd3SmMHX8GSmR7vtNSP5Z6bQkExdSK7xGWyxLw4sUknBuugTelgw2faBbQ==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [ia32]\n    os: [win32]\n\n  '@img/sharp-win32-x64@0.33.5':\n    resolution: {integrity: sha512-MpY/o8/8kj+EcnxwvrP4aTJSWw/aZ7JIGR4aBeZkZw5B7/Jn+tY9/VNwtcoGmdT7GfggGIU4kygOMSbYnOrAbg==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n    cpu: [x64]\n    os: [win32]\n\n  '@isaacs/cliui@8.0.2':\n    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}\n    engines: {node: '>=12'}\n\n  '@jridgewell/gen-mapping@0.3.8':\n    resolution: {integrity: sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/resolve-uri@3.1.2':\n    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/set-array@1.2.1':\n    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/sourcemap-codec@1.5.0':\n    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}\n\n  '@next/env@15.2.4':\n    resolution: {integrity: sha512-+SFtMgoiYP3WoSswuNmxJOCwi06TdWE733D+WPjpXIe4LXGULwEaofiiAy6kbS0+XjM5xF5n3lKuBwN2SnqD9g==}\n\n  '@next/swc-darwin-arm64@15.2.4':\n    resolution: {integrity: sha512-1AnMfs655ipJEDC/FHkSr0r3lXBgpqKo4K1kiwfUf3iE68rDFXZ1TtHdMvf7D0hMItgDZ7Vuq3JgNMbt/+3bYw==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@next/swc-darwin-x64@15.2.4':\n    resolution: {integrity: sha512-3qK2zb5EwCwxnO2HeO+TRqCubeI/NgCe+kL5dTJlPldV/uwCnUgC7VbEzgmxbfrkbjehL4H9BPztWOEtsoMwew==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@next/swc-linux-arm64-gnu@15.2.4':\n    resolution: {integrity: sha512-HFN6GKUcrTWvem8AZN7tT95zPb0GUGv9v0d0iyuTb303vbXkkbHDp/DxufB04jNVD+IN9yHy7y/6Mqq0h0YVaQ==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@next/swc-linux-arm64-musl@15.2.4':\n    resolution: {integrity: sha512-Oioa0SORWLwi35/kVB8aCk5Uq+5/ZIumMK1kJV+jSdazFm2NzPDztsefzdmzzpx5oGCJ6FkUC7vkaUseNTStNA==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@next/swc-linux-x64-gnu@15.2.4':\n    resolution: {integrity: sha512-yb5WTRaHdkgOqFOZiu6rHV1fAEK0flVpaIN2HB6kxHVSy/dIajWbThS7qON3W9/SNOH2JWkVCyulgGYekMePuw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@next/swc-linux-x64-musl@15.2.4':\n    resolution: {integrity: sha512-Dcdv/ix6srhkM25fgXiyOieFUkz+fOYkHlydWCtB0xMST6X9XYI3yPDKBZt1xuhOytONsIFJFB08xXYsxUwJLw==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [linux]\n\n  '@next/swc-win32-arm64-msvc@15.2.4':\n    resolution: {integrity: sha512-dW0i7eukvDxtIhCYkMrZNQfNicPDExt2jPb9AZPpL7cfyUo7QSNl1DjsHjmmKp6qNAqUESyT8YFl/Aw91cNJJg==}\n    engines: {node: '>= 10'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@next/swc-win32-x64-msvc@15.2.4':\n    resolution: {integrity: sha512-SbnWkJmkS7Xl3kre8SdMF6F/XDh1DTFEhp0jRTj/uB8iPKoU2bb2NDfcu+iifv1+mxQEd1g2vvSxcZbXSKyWiQ==}\n    engines: {node: '>= 10'}\n    cpu: [x64]\n    os: [win32]\n\n  '@nodelib/fs.scandir@2.1.5':\n    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.stat@2.0.5':\n    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.walk@1.2.8':\n    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}\n    engines: {node: '>= 8'}\n\n  '@pkgjs/parseargs@0.11.0':\n    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}\n    engines: {node: '>=14'}\n\n  '@radix-ui/number@1.1.0':\n    resolution: {integrity: sha512-V3gRzhVNU1ldS5XhAPTom1fOIo4ccrjjJgmE+LI2h/WaFpHmx0MQApT+KZHnx8abG6Avtfcz4WoEciMnpFT3HQ==}\n\n  '@radix-ui/number@1.1.1':\n    resolution: {integrity: sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g==}\n\n  '@radix-ui/primitive@1.1.1':\n    resolution: {integrity: sha512-SJ31y+Q/zAyShtXJc8x83i9TYdbAfHZ++tUZnvjJJqFjzsdUnKsxPL6IEtBlxKkU7yzer//GQtZSV4GbldL3YA==}\n\n  '@radix-ui/primitive@1.1.2':\n    resolution: {integrity: sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==}\n\n  '@radix-ui/react-accordion@1.2.2':\n    resolution: {integrity: sha512-b1oh54x4DMCdGsB4/7ahiSrViXxaBwRPotiZNnYXjLha9vfuURSAZErki6qjDoSIV0eXx5v57XnTGVtGwnfp2g==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-alert-dialog@1.1.4':\n    resolution: {integrity: sha512-A6Kh23qZDLy3PSU4bh2UJZznOrUdHImIXqF8YtUa6CN73f8EOO9XlXSCd9IHyPvIquTaa/kwaSWzZTtUvgXVGw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-arrow@1.1.1':\n    resolution: {integrity: sha512-NaVpZfmv8SKeZbn4ijN2V3jlHA9ngBG16VnIIm22nUR0Yk8KUALyBxT3KYEUnNuch9sTE8UTsS3whzBgKOL30w==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-arrow@1.1.7':\n    resolution: {integrity: sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-aspect-ratio@1.1.1':\n    resolution: {integrity: sha512-kNU4FIpcFMBLkOUcgeIteH06/8JLBcYY6Le1iKenDGCYNYFX3TQqCZjzkOsz37h7r94/99GTb7YhEr98ZBJibw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-avatar@1.1.2':\n    resolution: {integrity: sha512-GaC7bXQZ5VgZvVvsJ5mu/AEbjYLnhhkoidOboC50Z6FFlLA03wG2ianUoH+zgDQ31/9gCF59bE4+2bBgTyMiig==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-checkbox@1.1.3':\n    resolution: {integrity: sha512-HD7/ocp8f1B3e6OHygH0n7ZKjONkhciy1Nh0yuBgObqThc3oyx+vuMfFHKAknXRHHWVE9XvXStxJFyjUmB8PIw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-collapsible@1.1.2':\n    resolution: {integrity: sha512-PliMB63vxz7vggcyq0IxNYk8vGDrLXVWw4+W4B8YnwI1s18x7YZYqlG9PLX7XxAJUi0g2DxP4XKJMFHh/iVh9A==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-collection@1.1.1':\n    resolution: {integrity: sha512-LwT3pSho9Dljg+wY2KN2mrrh6y3qELfftINERIzBUO9e0N+t0oMTyn3k9iv+ZqgrwGkRnLpNJrsMv9BZlt2yuA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-collection@1.1.7':\n    resolution: {integrity: sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-compose-refs@1.1.1':\n    resolution: {integrity: sha512-Y9VzoRDSJtgFMUCoiZBDVo084VQ5hfpXxVE+NgkdNsjiDBByiImMZKKhxMwCbdHvhlENG6a833CbFkOQvTricw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-compose-refs@1.1.2':\n    resolution: {integrity: sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-context-menu@2.2.4':\n    resolution: {integrity: sha512-ap4wdGwK52rJxGkwukU1NrnEodsUFQIooANKu+ey7d6raQ2biTcEf8za1zr0mgFHieevRTB2nK4dJeN8pTAZGQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-context@1.1.1':\n    resolution: {integrity: sha512-UASk9zi+crv9WteK/NU4PLvOoL3OuE6BWVKNF6hPRBtYBDXQ2u5iu3O59zUlJiTVvkyuycnqrztsHVJwcK9K+Q==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-context@1.1.2':\n    resolution: {integrity: sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-dialog@1.1.14':\n    resolution: {integrity: sha512-+CpweKjqpzTmwRwcYECQcNYbI8V9VSQt0SNFKeEBLgfucbsLssU6Ppq7wUdNXEGb573bMjFhVjKVll8rmV6zMw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-dialog@1.1.4':\n    resolution: {integrity: sha512-Ur7EV1IwQGCyaAuyDRiOLA5JIUZxELJljF+MbM/2NC0BYwfuRrbpS30BiQBJrVruscgUkieKkqXYDOoByaxIoA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-direction@1.1.0':\n    resolution: {integrity: sha512-BUuBvgThEiAXh2DWu93XsT+a3aWrGqolGlqqw5VU1kG7p/ZH2cuDlM1sRLNnY3QcBS69UIz2mcKhMxDsdewhjg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-direction@1.1.1':\n    resolution: {integrity: sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-dismissable-layer@1.1.10':\n    resolution: {integrity: sha512-IM1zzRV4W3HtVgftdQiiOmA0AdJlCtMLe00FXaHwgt3rAnNsIyDqshvkIW3hj/iu5hu8ERP7KIYki6NkqDxAwQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-dismissable-layer@1.1.3':\n    resolution: {integrity: sha512-onrWn/72lQoEucDmJnr8uczSNTujT0vJnA/X5+3AkChVPowr8n1yvIKIabhWyMQeMvvmdpsvcyDqx3X1LEXCPg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-dropdown-menu@2.1.4':\n    resolution: {integrity: sha512-iXU1Ab5ecM+yEepGAWK8ZhMyKX4ubFdCNtol4sT9D0OVErG9PNElfx3TQhjw7n7BC5nFVz68/5//clWy+8TXzA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-focus-guards@1.1.1':\n    resolution: {integrity: sha512-pSIwfrT1a6sIoDASCSpFwOasEwKTZWDw/iBdtnqKO7v6FeOzYJ7U53cPzYFVR3geGGXgVHaH+CdngrrAzqUGxg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-focus-guards@1.1.2':\n    resolution: {integrity: sha512-fyjAACV62oPV925xFCrH8DR5xWhg9KYtJT4s3u54jxp+L/hbpTY2kIeEFFbFe+a/HCE94zGQMZLIpVTPVZDhaA==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-focus-scope@1.1.1':\n    resolution: {integrity: sha512-01omzJAYRxXdG2/he/+xy+c8a8gCydoQ1yOxnWNcRhrrBW5W+RQJ22EK1SaO8tb3WoUsuEw7mJjBozPzihDFjA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-focus-scope@1.1.7':\n    resolution: {integrity: sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-hover-card@1.1.4':\n    resolution: {integrity: sha512-QSUUnRA3PQ2UhvoCv3eYvMnCAgGQW+sTu86QPuNb+ZMi+ZENd6UWpiXbcWDQ4AEaKF9KKpCHBeaJz9Rw6lRlaQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-id@1.1.0':\n    resolution: {integrity: sha512-EJUrI8yYh7WOjNOqpoJaf1jlFIH2LvtgAl+YcFqNCa+4hj64ZXmPkAKOFs/ukjz3byN6bdb/AVUqHkI8/uWWMA==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-id@1.1.1':\n    resolution: {integrity: sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-label@2.1.7':\n    resolution: {integrity: sha512-YT1GqPSL8kJn20djelMX7/cTRp/Y9w5IZHvfxQTVHrOqa2yMl7i/UfMqKRU5V7mEyKTrUVgJXhNQPVCG8PBLoQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-menu@2.1.4':\n    resolution: {integrity: sha512-BnOgVoL6YYdHAG6DtXONaR29Eq4nvbi8rutrV/xlr3RQCMMb3yqP85Qiw/3NReozrSW+4dfLkK+rc1hb4wPU/A==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-menubar@1.1.4':\n    resolution: {integrity: sha512-+KMpi7VAZuB46+1LD7a30zb5IxyzLgC8m8j42gk3N4TUCcViNQdX8FhoH1HDvYiA8quuqcek4R4bYpPn/SY1GA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-navigation-menu@1.2.3':\n    resolution: {integrity: sha512-IQWAsQ7dsLIYDrn0WqPU+cdM7MONTv9nqrLVYoie3BPiabSfUVDe6Fr+oEt0Cofsr9ONDcDe9xhmJbL1Uq1yKg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-popover@1.1.4':\n    resolution: {integrity: sha512-aUACAkXx8LaFymDma+HQVji7WhvEhpFJ7+qPz17Nf4lLZqtreGOFRiNQWQmhzp7kEWg9cOyyQJpdIMUMPc/CPw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-popper@1.2.1':\n    resolution: {integrity: sha512-3kn5Me69L+jv82EKRuQCXdYyf1DqHwD2U/sxoNgBGCB7K9TRc3bQamQ+5EPM9EvyPdli0W41sROd+ZU1dTCztw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-popper@1.2.7':\n    resolution: {integrity: sha512-IUFAccz1JyKcf/RjB552PlWwxjeCJB8/4KxT7EhBHOJM+mN7LdW+B3kacJXILm32xawcMMjb2i0cIZpo+f9kiQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-portal@1.1.3':\n    resolution: {integrity: sha512-NciRqhXnGojhT93RPyDaMPfLH3ZSl4jjIFbZQ1b/vxvZEdHsBZ49wP9w8L3HzUQwep01LcWtkUvm0OVB5JAHTw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-portal@1.1.9':\n    resolution: {integrity: sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-presence@1.1.2':\n    resolution: {integrity: sha512-18TFr80t5EVgL9x1SwF/YGtfG+l0BS0PRAlCWBDoBEiDQjeKgnNZRVJp/oVBl24sr3Gbfwc/Qpj4OcWTQMsAEg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-presence@1.1.4':\n    resolution: {integrity: sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-primitive@2.0.1':\n    resolution: {integrity: sha512-sHCWTtxwNn3L3fH8qAfnF3WbUZycW93SM1j3NFDzXBiz8D6F5UTTy8G1+WFEaiCdvCVRJWj6N2R4Xq6HdiHmDg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-primitive@2.1.3':\n    resolution: {integrity: sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-progress@1.1.1':\n    resolution: {integrity: sha512-6diOawA84f/eMxFHcWut0aE1C2kyE9dOyCTQOMRR2C/qPiXz/X0SaiA/RLbapQaXUCmy0/hLMf9meSccD1N0pA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-radio-group@1.2.2':\n    resolution: {integrity: sha512-E0MLLGfOP0l8P/NxgVzfXJ8w3Ch8cdO6UDzJfDChu4EJDy+/WdO5LqpdY8PYnCErkmZH3gZhDL1K7kQ41fAHuQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-roving-focus@1.1.1':\n    resolution: {integrity: sha512-QE1RoxPGJ/Nm8Qmk0PxP8ojmoaS67i0s7hVssS7KuI2FQoc/uzVlZsqKfQvxPE6D8hICCPHJ4D88zNhT3OOmkw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-roving-focus@1.1.10':\n    resolution: {integrity: sha512-dT9aOXUen9JSsxnMPv/0VqySQf5eDQ6LCk5Sw28kamz8wSOW2bJdlX2Bg5VUIIcV+6XlHpWTIuTPCf/UNIyq8Q==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-scroll-area@1.2.9':\n    resolution: {integrity: sha512-YSjEfBXnhUELsO2VzjdtYYD4CfQjvao+lhhrX5XsHD7/cyUNzljF1FHEbgTPN7LH2MClfwRMIsYlqTYpKTTe2A==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-select@2.2.5':\n    resolution: {integrity: sha512-HnMTdXEVuuyzx63ME0ut4+sEMYW6oouHWNGUZc7ddvUWIcfCva/AMoqEW/3wnEllriMWBa0RHspCYnfCWJQYmA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-separator@1.1.1':\n    resolution: {integrity: sha512-RRiNRSrD8iUiXriq/Y5n4/3iE8HzqgLHsusUSg5jVpU2+3tqcUFPJXHDymwEypunc2sWxDUS3UC+rkZRlHedsw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-slider@1.2.2':\n    resolution: {integrity: sha512-sNlU06ii1/ZcbHf8I9En54ZPW0Vil/yPVg4vQMcFNjrIx51jsHbFl1HYHQvCIWJSr1q0ZmA+iIs/ZTv8h7HHSA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-slot@1.1.1':\n    resolution: {integrity: sha512-RApLLOcINYJA+dMVbOju7MYv1Mb2EBp2nH4HdDzXTSyaR5optlm6Otrz1euW3HbdOR8UmmFK06TD+A9frYWv+g==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-slot@1.2.3':\n    resolution: {integrity: sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-switch@1.2.5':\n    resolution: {integrity: sha512-5ijLkak6ZMylXsaImpZ8u4Rlf5grRmoc0p0QeX9VJtlrM4f5m3nCTX8tWga/zOA8PZYIR/t0p2Mnvd7InrJ6yQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-tabs@1.1.12':\n    resolution: {integrity: sha512-GTVAlRVrQrSw3cEARM0nAx73ixrWDPNZAruETn3oHCNP6SbZ/hNxdxp+u7VkIEv3/sFoLq1PfcHrl7Pnp0CDpw==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-toast@1.2.4':\n    resolution: {integrity: sha512-Sch9idFJHJTMH9YNpxxESqABcAFweJG4tKv+0zo0m5XBvUSL8FM5xKcJLFLXononpePs8IclyX1KieL5SDUNgA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-toggle-group@1.1.1':\n    resolution: {integrity: sha512-OgDLZEA30Ylyz8YSXvnGqIHtERqnUt1KUYTKdw/y8u7Ci6zGiJfXc02jahmcSNK3YcErqioj/9flWC9S1ihfwg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-toggle@1.1.1':\n    resolution: {integrity: sha512-i77tcgObYr743IonC1hrsnnPmszDRn8p+EGUsUt+5a/JFn28fxaM88Py6V2mc8J5kELMWishI0rLnuGLFD/nnQ==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-tooltip@1.1.6':\n    resolution: {integrity: sha512-TLB5D8QLExS1uDn7+wH/bjEmRurNMTzNrtq7IjaS4kjion9NtzsTGkvR5+i7yc9q01Pi2KMM2cN3f8UG4IvvXA==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-use-callback-ref@1.1.0':\n    resolution: {integrity: sha512-CasTfvsy+frcFkbXtSJ2Zu9JHpN8TYKxkgJGWbjiZhFivxaeW7rMeZt7QELGVLaYVfFMsKHjb7Ak0nMEe+2Vfw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-callback-ref@1.1.1':\n    resolution: {integrity: sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-controllable-state@1.1.0':\n    resolution: {integrity: sha512-MtfMVJiSr2NjzS0Aa90NPTnvTSg6C/JLCV7ma0W6+OMV78vd8OyRpID+Ng9LxzsPbLeuBnWBA1Nq30AtBIDChw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-controllable-state@1.2.2':\n    resolution: {integrity: sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-effect-event@0.0.2':\n    resolution: {integrity: sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-escape-keydown@1.1.0':\n    resolution: {integrity: sha512-L7vwWlR1kTTQ3oh7g1O0CBF3YCyyTj8NmhLR+phShpyA50HCfBFKVJTpshm9PzLiKmehsrQzTYTpX9HvmC9rhw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-escape-keydown@1.1.1':\n    resolution: {integrity: sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-layout-effect@1.1.0':\n    resolution: {integrity: sha512-+FPE0rOdziWSrH9athwI1R0HDVbWlEhd+FR+aSDk4uWGmSJ9Z54sdZVDQPZAinJhJXwfT+qnj969mCsT2gfm5w==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-layout-effect@1.1.1':\n    resolution: {integrity: sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-previous@1.1.0':\n    resolution: {integrity: sha512-Z/e78qg2YFnnXcW88A4JmTtm4ADckLno6F7OXotmkQfeuCVaKuYzqAATPhVzl3delXE7CxIV8shofPn3jPc5Og==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-previous@1.1.1':\n    resolution: {integrity: sha512-2dHfToCj/pzca2Ck724OZ5L0EVrr3eHRNsG/b3xQJLA2hZpVCS99bLAX+hm1IHXDEnzU6by5z/5MIY794/a8NQ==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-rect@1.1.0':\n    resolution: {integrity: sha512-0Fmkebhr6PiseyZlYAOtLS+nb7jLmpqTrJyv61Pe68MKYW6OWdRE2kI70TaYY27u7H0lajqM3hSMMLFq18Z7nQ==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-rect@1.1.1':\n    resolution: {integrity: sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-size@1.1.0':\n    resolution: {integrity: sha512-XW3/vWuIXHa+2Uwcc2ABSfcCledmXhhQPlGbfcRXbiUQI5Icjcg19BGCZVKKInYbvUCut/ufbbLLPFC5cbb1hw==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-use-size@1.1.1':\n    resolution: {integrity: sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  '@radix-ui/react-visually-hidden@1.1.1':\n    resolution: {integrity: sha512-vVfA2IZ9q/J+gEamvj761Oq1FpWgCDaNOOIfbPVp2MVPLEomUr5+Vf7kJGwQ24YxZSlQVar7Bes8kyTo5Dshpg==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/react-visually-hidden@1.2.3':\n    resolution: {integrity: sha512-pzJq12tEaaIhqjbzpCuv/OypJY/BPavOofm+dbab+MHLajy277+1lLm6JFcGgF5eskJ6mquGirhXY2GD/8u8Ug==}\n    peerDependencies:\n      '@types/react': '*'\n      '@types/react-dom': '*'\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n      '@types/react-dom':\n        optional: true\n\n  '@radix-ui/rect@1.1.0':\n    resolution: {integrity: sha512-A9+lCBZoaMJlVKcRBz2YByCG+Cp2t6nAnMnNba+XiWxnj6r4JUFqfsgwocMBZU9LPtdxC6wB56ySYpc7LQIoJg==}\n\n  '@radix-ui/rect@1.1.1':\n    resolution: {integrity: sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw==}\n\n  '@supabase/auth-js@2.70.0':\n    resolution: {integrity: sha512-BaAK/tOAZFJtzF1sE3gJ2FwTjLf4ky3PSvcvLGEgEmO4BSBkwWKu8l67rLLIBZPDnCyV7Owk2uPyKHa0kj5QGg==}\n\n  '@supabase/functions-js@2.4.4':\n    resolution: {integrity: sha512-WL2p6r4AXNGwop7iwvul2BvOtuJ1YQy8EbOd0dhG1oN1q8el/BIRSFCFnWAMM/vJJlHWLi4ad22sKbKr9mvjoA==}\n\n  '@supabase/node-fetch@2.6.15':\n    resolution: {integrity: sha512-1ibVeYUacxWYi9i0cf5efil6adJ9WRyZBLivgjs+AUpewx1F3xPi7gLgaASI2SmIQxPoCEjAsLAzKPgMJVgOUQ==}\n    engines: {node: 4.x || >=6.0.0}\n\n  '@supabase/postgrest-js@1.19.4':\n    resolution: {integrity: sha512-O4soKqKtZIW3olqmbXXbKugUtByD2jPa8kL2m2c1oozAO11uCcGrRhkZL0kVxjBLrXHE0mdSkFsMj7jDSfyNpw==}\n\n  '@supabase/realtime-js@2.11.10':\n    resolution: {integrity: sha512-SJKVa7EejnuyfImrbzx+HaD9i6T784khuw1zP+MBD7BmJYChegGxYigPzkKX8CK8nGuDntmeSD3fvriaH0EGZA==}\n\n  '@supabase/storage-js@2.7.1':\n    resolution: {integrity: sha512-asYHcyDR1fKqrMpytAS1zjyEfvxuOIp1CIXX7ji4lHHcJKqyk+sLl/Vxgm4sN6u8zvuUtae9e4kDxQP2qrwWBA==}\n\n  '@supabase/supabase-js@2.50.0':\n    resolution: {integrity: sha512-M1Gd5tPaaghYZ9OjeO1iORRqbTWFEz/cF3pPubRnMPzA+A8SiUsXXWDP+DWsASZcjEcVEcVQIAF38i5wrijYOg==}\n\n  '@swc/counter@0.1.3':\n    resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}\n\n  '@swc/helpers@0.5.15':\n    resolution: {integrity: sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==}\n\n  '@types/d3-array@3.2.1':\n    resolution: {integrity: sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==}\n\n  '@types/d3-color@3.1.3':\n    resolution: {integrity: sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==}\n\n  '@types/d3-ease@3.0.2':\n    resolution: {integrity: sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==}\n\n  '@types/d3-interpolate@3.0.4':\n    resolution: {integrity: sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==}\n\n  '@types/d3-path@3.1.1':\n    resolution: {integrity: sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==}\n\n  '@types/d3-scale@4.0.9':\n    resolution: {integrity: sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==}\n\n  '@types/d3-shape@3.1.7':\n    resolution: {integrity: sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==}\n\n  '@types/d3-time@3.0.4':\n    resolution: {integrity: sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==}\n\n  '@types/d3-timer@3.0.2':\n    resolution: {integrity: sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==}\n\n  '@types/node@22.0.0':\n    resolution: {integrity: sha512-VT7KSYudcPOzP5Q0wfbowyNLaVR8QWUdw+088uFWwfvpY6uCWaXpqV6ieLAu9WBcnTa7H4Z5RLK8I5t2FuOcqw==}\n\n  '@types/phoenix@1.6.6':\n    resolution: {integrity: sha512-PIzZZlEppgrpoT2QgbnDU+MMzuR6BbCjllj0bM70lWoejMeNJAxCchxnv7J3XFkI8MpygtRpzXrIlmWUBclP5A==}\n\n  '@types/react-dom@19.0.0':\n    resolution: {integrity: sha512-1KfiQKsH1o00p9m5ag12axHQSb3FOU9H20UTrujVSkNhuCrRHiQWFqgEnTNK5ZNfnzZv8UWrnXVqCmCF9fgY3w==}\n\n  '@types/react@19.0.0':\n    resolution: {integrity: sha512-MY3oPudxvMYyesqs/kW1Bh8y9VqSmf+tzqw3ae8a9DZW68pUe3zAdHeI1jc6iAysuRdACnVknHP8AhwD4/dxtg==}\n\n  '@types/ws@8.18.1':\n    resolution: {integrity: sha512-ThVF6DCVhA8kUGy+aazFQ4kXQ7E1Ty7A3ypFOe0IcJV8O/M511G99AW24irKrW56Wt44yG9+ij8FaqoBGkuBXg==}\n\n  ansi-regex@5.0.1:\n    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}\n    engines: {node: '>=8'}\n\n  ansi-regex@6.1.0:\n    resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}\n    engines: {node: '>=12'}\n\n  ansi-styles@4.3.0:\n    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}\n    engines: {node: '>=8'}\n\n  ansi-styles@6.2.1:\n    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}\n    engines: {node: '>=12'}\n\n  any-promise@1.3.0:\n    resolution: {integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==}\n\n  anymatch@3.1.3:\n    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}\n    engines: {node: '>= 8'}\n\n  arg@5.0.2:\n    resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}\n\n  aria-hidden@1.2.6:\n    resolution: {integrity: sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==}\n    engines: {node: '>=10'}\n\n  autoprefixer@10.4.20:\n    resolution: {integrity: sha512-XY25y5xSv/wEoqzDyXXME4AFfkZI0P23z6Fs3YgymDnKJkCGOnkL0iTxCa85UTqaSgfcqyf3UA6+c7wUvx/16g==}\n    engines: {node: ^10 || ^12 || >=14}\n    hasBin: true\n    peerDependencies:\n      postcss: ^8.1.0\n\n  balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n\n  binary-extensions@2.3.0:\n    resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}\n    engines: {node: '>=8'}\n\n  brace-expansion@2.0.2:\n    resolution: {integrity: sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==}\n\n  braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n\n  browserslist@4.25.0:\n    resolution: {integrity: sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==}\n    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n    hasBin: true\n\n  busboy@1.6.0:\n    resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}\n    engines: {node: '>=10.16.0'}\n\n  camelcase-css@2.0.1:\n    resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}\n    engines: {node: '>= 6'}\n\n  caniuse-lite@1.0.30001723:\n    resolution: {integrity: sha512-1R/elMjtehrFejxwmexeXAtae5UO9iSyFn6G/I806CYC/BLyyBk1EPhrKBkWhy6wM6Xnm47dSJQec+tLJ39WHw==}\n\n  chokidar@3.6.0:\n    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}\n    engines: {node: '>= 8.10.0'}\n\n  class-variance-authority@0.7.1:\n    resolution: {integrity: sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==}\n\n  client-only@0.0.1:\n    resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}\n\n  clsx@2.1.1:\n    resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}\n    engines: {node: '>=6'}\n\n  cmdk@1.0.4:\n    resolution: {integrity: sha512-AnsjfHyHpQ/EFeAnG216WY7A5LiYCoZzCSygiLvfXC3H3LFGCprErteUcszaVluGOhuOTbJS3jWHrSDYPBBygg==}\n    peerDependencies:\n      react: ^18 || ^19 || ^19.0.0-rc\n      react-dom: ^18 || ^19 || ^19.0.0-rc\n\n  color-convert@2.0.1:\n    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}\n    engines: {node: '>=7.0.0'}\n\n  color-name@1.1.4:\n    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}\n\n  color-string@1.9.1:\n    resolution: {integrity: sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==}\n\n  color@4.2.3:\n    resolution: {integrity: sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==}\n    engines: {node: '>=12.5.0'}\n\n  commander@4.1.1:\n    resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}\n    engines: {node: '>= 6'}\n\n  cross-spawn@7.0.6:\n    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}\n    engines: {node: '>= 8'}\n\n  cssesc@3.0.0:\n    resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}\n    engines: {node: '>=4'}\n    hasBin: true\n\n  csstype@3.1.3:\n    resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}\n\n  d3-array@3.2.4:\n    resolution: {integrity: sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==}\n    engines: {node: '>=12'}\n\n  d3-color@3.1.0:\n    resolution: {integrity: sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==}\n    engines: {node: '>=12'}\n\n  d3-ease@3.0.1:\n    resolution: {integrity: sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==}\n    engines: {node: '>=12'}\n\n  d3-format@3.1.0:\n    resolution: {integrity: sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==}\n    engines: {node: '>=12'}\n\n  d3-interpolate@3.0.1:\n    resolution: {integrity: sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==}\n    engines: {node: '>=12'}\n\n  d3-path@3.1.0:\n    resolution: {integrity: sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==}\n    engines: {node: '>=12'}\n\n  d3-scale@4.0.2:\n    resolution: {integrity: sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==}\n    engines: {node: '>=12'}\n\n  d3-shape@3.2.0:\n    resolution: {integrity: sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==}\n    engines: {node: '>=12'}\n\n  d3-time-format@4.1.0:\n    resolution: {integrity: sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==}\n    engines: {node: '>=12'}\n\n  d3-time@3.1.0:\n    resolution: {integrity: sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==}\n    engines: {node: '>=12'}\n\n  d3-timer@3.0.1:\n    resolution: {integrity: sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==}\n    engines: {node: '>=12'}\n\n  date-fns@4.1.0:\n    resolution: {integrity: sha512-Ukq0owbQXxa/U3EGtsdVBkR1w7KOQ5gIBqdH2hkvknzZPYvBxb/aa6E8L7tmjFtkwZBu3UXBbjIgPo/Ez4xaNg==}\n\n  decimal.js-light@2.5.1:\n    resolution: {integrity: sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==}\n\n  detect-libc@2.0.4:\n    resolution: {integrity: sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==}\n    engines: {node: '>=8'}\n\n  detect-node-es@1.1.0:\n    resolution: {integrity: sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==}\n\n  didyoumean@1.2.2:\n    resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}\n\n  dlv@1.1.3:\n    resolution: {integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==}\n\n  dom-helpers@5.2.1:\n    resolution: {integrity: sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==}\n\n  eastasianwidth@0.2.0:\n    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}\n\n  electron-to-chromium@1.5.169:\n    resolution: {integrity: sha512-q7SQx6mkLy0GTJK9K9OiWeaBMV4XQtBSdf6MJUzDB/H/5tFXfIiX38Lci1Kl6SsgiEhz1SQI1ejEOU5asWEhwQ==}\n\n  embla-carousel-react@8.5.1:\n    resolution: {integrity: sha512-z9Y0K84BJvhChXgqn2CFYbfEi6AwEr+FFVVKm/MqbTQ2zIzO1VQri6w67LcfpVF0AjbhwVMywDZqY4alYkjW5w==}\n    peerDependencies:\n      react: ^16.8.0 || ^17.0.1 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n\n  embla-carousel-reactive-utils@8.5.1:\n    resolution: {integrity: sha512-n7VSoGIiiDIc4MfXF3ZRTO59KDp820QDuyBDGlt5/65+lumPHxX2JLz0EZ23hZ4eg4vZGUXwMkYv02fw2JVo/A==}\n    peerDependencies:\n      embla-carousel: 8.5.1\n\n  embla-carousel@8.5.1:\n    resolution: {integrity: sha512-JUb5+FOHobSiWQ2EJNaueCNT/cQU9L6XWBbWmorWPQT9bkbk+fhsuLr8wWrzXKagO3oWszBO7MSx+GfaRk4E6A==}\n\n  emoji-regex@8.0.0:\n    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}\n\n  emoji-regex@9.2.2:\n    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}\n\n  escalade@3.2.0:\n    resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}\n    engines: {node: '>=6'}\n\n  eventemitter3@4.0.7:\n    resolution: {integrity: sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==}\n\n  fast-equals@5.2.2:\n    resolution: {integrity: sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==}\n    engines: {node: '>=6.0.0'}\n\n  fast-glob@3.3.3:\n    resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}\n    engines: {node: '>=8.6.0'}\n\n  fastq@1.19.1:\n    resolution: {integrity: sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==}\n\n  fill-range@7.1.1:\n    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n    engines: {node: '>=8'}\n\n  foreground-child@3.3.1:\n    resolution: {integrity: sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==}\n    engines: {node: '>=14'}\n\n  fraction.js@4.3.7:\n    resolution: {integrity: sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==}\n\n  fsevents@2.3.3:\n    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}\n    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}\n    os: [darwin]\n\n  function-bind@1.1.2:\n    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}\n\n  get-nonce@1.0.1:\n    resolution: {integrity: sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==}\n    engines: {node: '>=6'}\n\n  glob-parent@5.1.2:\n    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}\n    engines: {node: '>= 6'}\n\n  glob-parent@6.0.2:\n    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}\n    engines: {node: '>=10.13.0'}\n\n  glob@10.4.5:\n    resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}\n    hasBin: true\n\n  hasown@2.0.2:\n    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}\n    engines: {node: '>= 0.4'}\n\n  input-otp@1.4.1:\n    resolution: {integrity: sha512-+yvpmKYKHi9jIGngxagY9oWiiblPB7+nEO75F2l2o4vs+6vpPZZmUl4tBNYuTCvQjhvEIbdNeJu70bhfYP2nbw==}\n    peerDependencies:\n      react: ^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc\n\n  internmap@2.0.3:\n    resolution: {integrity: sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==}\n    engines: {node: '>=12'}\n\n  is-arrayish@0.3.2:\n    resolution: {integrity: sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==}\n\n  is-binary-path@2.1.0:\n    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}\n    engines: {node: '>=8'}\n\n  is-core-module@2.16.1:\n    resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}\n    engines: {node: '>= 0.4'}\n\n  is-extglob@2.1.1:\n    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}\n    engines: {node: '>=0.10.0'}\n\n  is-fullwidth-code-point@3.0.0:\n    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}\n    engines: {node: '>=8'}\n\n  is-glob@4.0.3:\n    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}\n    engines: {node: '>=0.10.0'}\n\n  is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n\n  isexe@2.0.0:\n    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}\n\n  jackspeak@3.4.3:\n    resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}\n\n  jiti@1.21.7:\n    resolution: {integrity: sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==}\n    hasBin: true\n\n  js-tokens@4.0.0:\n    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}\n\n  lilconfig@3.1.3:\n    resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}\n    engines: {node: '>=14'}\n\n  lines-and-columns@1.2.4:\n    resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}\n\n  lodash@4.17.21:\n    resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}\n\n  loose-envify@1.4.0:\n    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}\n    hasBin: true\n\n  lru-cache@10.4.3:\n    resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}\n\n  lucide-react@0.454.0:\n    resolution: {integrity: sha512-hw7zMDwykCLnEzgncEEjHeA6+45aeEzRYuKHuyRSOPkhko+J3ySGjGIzu+mmMfDFG1vazHepMaYFYHbTFAZAAQ==}\n    peerDependencies:\n      react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc\n\n  merge2@1.4.1:\n    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}\n    engines: {node: '>= 8'}\n\n  micromatch@4.0.8:\n    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}\n    engines: {node: '>=8.6'}\n\n  minimatch@9.0.5:\n    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  minipass@7.1.2:\n    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  mz@2.7.0:\n    resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}\n\n  nanoid@3.3.11:\n    resolution: {integrity: sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==}\n    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n    hasBin: true\n\n  next-themes@0.4.6:\n    resolution: {integrity: sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==}\n    peerDependencies:\n      react: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n      react-dom: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc\n\n  next@15.2.4:\n    resolution: {integrity: sha512-VwL+LAaPSxEkd3lU2xWbgEOtrM8oedmyhBqaVNmgKB+GvZlCy9rgaEc+y2on0wv+l0oSFqLtYD6dcC1eAedUaQ==}\n    engines: {node: ^18.18.0 || ^19.8.0 || >= 20.0.0}\n    hasBin: true\n    peerDependencies:\n      '@opentelemetry/api': ^1.1.0\n      '@playwright/test': ^1.41.2\n      babel-plugin-react-compiler: '*'\n      react: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0\n      react-dom: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0\n      sass: ^1.3.0\n    peerDependenciesMeta:\n      '@opentelemetry/api':\n        optional: true\n      '@playwright/test':\n        optional: true\n      babel-plugin-react-compiler:\n        optional: true\n      sass:\n        optional: true\n\n  node-releases@2.0.19:\n    resolution: {integrity: sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==}\n\n  normalize-path@3.0.0:\n    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}\n    engines: {node: '>=0.10.0'}\n\n  normalize-range@0.1.2:\n    resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}\n    engines: {node: '>=0.10.0'}\n\n  object-assign@4.1.1:\n    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}\n    engines: {node: '>=0.10.0'}\n\n  object-hash@3.0.0:\n    resolution: {integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==}\n    engines: {node: '>= 6'}\n\n  package-json-from-dist@1.0.1:\n    resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}\n\n  path-key@3.1.1:\n    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}\n    engines: {node: '>=8'}\n\n  path-parse@1.0.7:\n    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}\n\n  path-scurry@1.11.1:\n    resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}\n    engines: {node: '>=16 || 14 >=14.18'}\n\n  picocolors@1.1.1:\n    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}\n\n  picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n\n  pify@2.3.0:\n    resolution: {integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==}\n    engines: {node: '>=0.10.0'}\n\n  pirates@4.0.7:\n    resolution: {integrity: sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==}\n    engines: {node: '>= 6'}\n\n  postcss-import@15.1.0:\n    resolution: {integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==}\n    engines: {node: '>=14.0.0'}\n    peerDependencies:\n      postcss: ^8.0.0\n\n  postcss-js@4.0.1:\n    resolution: {integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==}\n    engines: {node: ^12 || ^14 || >= 16}\n    peerDependencies:\n      postcss: ^8.4.21\n\n  postcss-load-config@4.0.2:\n    resolution: {integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==}\n    engines: {node: '>= 14'}\n    peerDependencies:\n      postcss: '>=8.0.9'\n      ts-node: '>=9.0.0'\n    peerDependenciesMeta:\n      postcss:\n        optional: true\n      ts-node:\n        optional: true\n\n  postcss-nested@6.2.0:\n    resolution: {integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==}\n    engines: {node: '>=12.0'}\n    peerDependencies:\n      postcss: ^8.2.14\n\n  postcss-selector-parser@6.1.2:\n    resolution: {integrity: sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==}\n    engines: {node: '>=4'}\n\n  postcss-value-parser@4.2.0:\n    resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}\n\n  postcss@8.4.31:\n    resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  postcss@8.5.0:\n    resolution: {integrity: sha512-27VKOqrYfPncKA2NrFOVhP5MGAfHKLYn/Q0mz9cNQyRAKYi3VNHwYU2qKKqPCqgBmeeJ0uAFB56NumXZ5ZReXg==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  prop-types@15.8.1:\n    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}\n\n  queue-microtask@1.2.3:\n    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n\n  react-day-picker@8.10.1:\n    resolution: {integrity: sha512-TMx7fNbhLk15eqcMt+7Z7S2KF7mfTId/XJDjKE8f+IUcFn0l08/kI4FiYTL/0yuOLmEcbR4Fwe3GJf/NiiMnPA==}\n    peerDependencies:\n      date-fns: ^2.28.0 || ^3.0.0\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0\n\n  react-dom@19.0.0:\n    resolution: {integrity: sha512-4GV5sHFG0e/0AD4X+ySy6UJd3jVl1iNsNHdpad0qhABJ11twS3TTBnseqsKurKcsNqCEFeGL3uLpVChpIO3QfQ==}\n    peerDependencies:\n      react: ^19.0.0\n\n  react-hook-form@7.54.1:\n    resolution: {integrity: sha512-PUNzFwQeQ5oHiiTUO7GO/EJXGEtuun2Y1A59rLnZBBj+vNEOWt/3ERTiG1/zt7dVeJEM+4vDX/7XQ/qanuvPMg==}\n    engines: {node: '>=18.0.0'}\n    peerDependencies:\n      react: ^16.8.0 || ^17 || ^18 || ^19\n\n  react-is@16.13.1:\n    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}\n\n  react-is@18.3.1:\n    resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}\n\n  react-remove-scroll-bar@2.3.8:\n    resolution: {integrity: sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react-remove-scroll@2.7.1:\n    resolution: {integrity: sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react-resizable-panels@2.1.7:\n    resolution: {integrity: sha512-JtT6gI+nURzhMYQYsx8DKkx6bSoOGFp7A3CwMrOb8y5jFHFyqwo9m68UhmXRw57fRVJksFn1TSlm3ywEQ9vMgA==}\n    peerDependencies:\n      react: ^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n      react-dom: ^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n\n  react-smooth@4.0.4:\n    resolution: {integrity: sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==}\n    peerDependencies:\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n      react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n\n  react-style-singleton@2.2.3:\n    resolution: {integrity: sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  react-transition-group@4.4.5:\n    resolution: {integrity: sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==}\n    peerDependencies:\n      react: '>=16.6.0'\n      react-dom: '>=16.6.0'\n\n  react@19.0.0:\n    resolution: {integrity: sha512-V8AVnmPIICiWpGfm6GLzCR/W5FXLchHop40W4nXBmdlEceh16rCN8O8LNWm5bh5XUX91fh7KpA+W0TgMKmgTpQ==}\n    engines: {node: '>=0.10.0'}\n\n  read-cache@1.0.0:\n    resolution: {integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==}\n\n  readdirp@3.6.0:\n    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}\n    engines: {node: '>=8.10.0'}\n\n  recharts-scale@0.4.5:\n    resolution: {integrity: sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==}\n\n  recharts@2.15.0:\n    resolution: {integrity: sha512-cIvMxDfpAmqAmVgc4yb7pgm/O1tmmkl/CjrvXuW+62/+7jj/iF9Ykm+hb/UJt42TREHMyd3gb+pkgoa2MxgDIw==}\n    engines: {node: '>=14'}\n    peerDependencies:\n      react: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n      react-dom: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n\n  resolve@1.22.10:\n    resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}\n    engines: {node: '>= 0.4'}\n    hasBin: true\n\n  reusify@1.1.0:\n    resolution: {integrity: sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==}\n    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}\n\n  run-parallel@1.2.0:\n    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}\n\n  scheduler@0.25.0:\n    resolution: {integrity: sha512-xFVuu11jh+xcO7JOAGJNOXld8/TcEHK/4CituBUeUb5hqxJLj9YuemAEuvm9gQ/+pgXYfbQuqAkiYu+u7YEsNA==}\n\n  semver@7.7.2:\n    resolution: {integrity: sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  sharp@0.33.5:\n    resolution: {integrity: sha512-haPVm1EkS9pgvHrQ/F3Xy+hgcuMV0Wm9vfIBSiwZ05k+xgb0PkBQpGsAA/oWdDobNaZTH5ppvHtzCFbnSEwHVw==}\n    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}\n\n  shebang-command@2.0.0:\n    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}\n    engines: {node: '>=8'}\n\n  shebang-regex@3.0.0:\n    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}\n    engines: {node: '>=8'}\n\n  signal-exit@4.1.0:\n    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}\n    engines: {node: '>=14'}\n\n  simple-swizzle@0.2.2:\n    resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}\n\n  sonner@1.7.1:\n    resolution: {integrity: sha512-b6LHBfH32SoVasRFECrdY8p8s7hXPDn3OHUFbZZbiB1ctLS9Gdh6rpX2dVrpQA0kiL5jcRzDDldwwLkSKk3+QQ==}\n    peerDependencies:\n      react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n      react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n\n  source-map-js@1.2.1:\n    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}\n    engines: {node: '>=0.10.0'}\n\n  streamsearch@1.1.0:\n    resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}\n    engines: {node: '>=10.0.0'}\n\n  string-width@4.2.3:\n    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}\n    engines: {node: '>=8'}\n\n  string-width@5.1.2:\n    resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}\n    engines: {node: '>=12'}\n\n  strip-ansi@6.0.1:\n    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}\n    engines: {node: '>=8'}\n\n  strip-ansi@7.1.0:\n    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}\n    engines: {node: '>=12'}\n\n  styled-jsx@5.1.6:\n    resolution: {integrity: sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==}\n    engines: {node: '>= 12.0.0'}\n    peerDependencies:\n      '@babel/core': '*'\n      babel-plugin-macros: '*'\n      react: '>= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0'\n    peerDependenciesMeta:\n      '@babel/core':\n        optional: true\n      babel-plugin-macros:\n        optional: true\n\n  sucrase@3.35.0:\n    resolution: {integrity: sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==}\n    engines: {node: '>=16 || 14 >=14.17'}\n    hasBin: true\n\n  supports-preserve-symlinks-flag@1.0.0:\n    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n    engines: {node: '>= 0.4'}\n\n  tailwind-merge@2.5.5:\n    resolution: {integrity: sha512-0LXunzzAZzo0tEPxV3I297ffKZPlKDrjj7NXphC8V5ak9yHC5zRmxnOe2m/Rd/7ivsOMJe3JZ2JVocoDdQTRBA==}\n\n  tailwindcss-animate@1.0.7:\n    resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}\n    peerDependencies:\n      tailwindcss: '>=3.0.0 || insiders'\n\n  tailwindcss@3.4.17:\n    resolution: {integrity: sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==}\n    engines: {node: '>=14.0.0'}\n    hasBin: true\n\n  thenify-all@1.6.0:\n    resolution: {integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==}\n    engines: {node: '>=0.8'}\n\n  thenify@3.3.1:\n    resolution: {integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==}\n\n  tiny-invariant@1.3.3:\n    resolution: {integrity: sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==}\n\n  to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n\n  tr46@0.0.3:\n    resolution: {integrity: sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==}\n\n  ts-interface-checker@0.1.13:\n    resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}\n\n  tslib@2.8.1:\n    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}\n\n  typescript@5.0.2:\n    resolution: {integrity: sha512-wVORMBGO/FAs/++blGNeAVdbNKtIh1rbBL2EyQ1+J9lClJ93KiiKe8PmFIVdXhHcyv44SL9oglmfeSsndo0jRw==}\n    engines: {node: '>=12.20'}\n    hasBin: true\n\n  undici-types@6.11.1:\n    resolution: {integrity: sha512-mIDEX2ek50x0OlRgxryxsenE5XaQD4on5U2inY7RApK3SOJpofyw7uW2AyfMKkhAxXIceo2DeWGVGwyvng1GNQ==}\n\n  update-browserslist-db@1.1.3:\n    resolution: {integrity: sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==}\n    hasBin: true\n    peerDependencies:\n      browserslist: '>= 4.21.0'\n\n  use-callback-ref@1.3.3:\n    resolution: {integrity: sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  use-sidecar@1.1.3:\n    resolution: {integrity: sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      '@types/react': '*'\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\n    peerDependenciesMeta:\n      '@types/react':\n        optional: true\n\n  use-sync-external-store@1.5.0:\n    resolution: {integrity: sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==}\n    peerDependencies:\n      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\n\n  util-deprecate@1.0.2:\n    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n\n  vaul@0.9.6:\n    resolution: {integrity: sha512-Ykk5FSu4ibeD6qfKQH/CkBRdSGWkxi35KMNei0z59kTPAlgzpE/Qf1gTx2sxih8Q05KBO/aFhcF/UkBW5iI1Ww==}\n    peerDependencies:\n      react: ^16.8 || ^17.0 || ^18.0\n      react-dom: ^16.8 || ^17.0 || ^18.0\n\n  victory-vendor@36.9.2:\n    resolution: {integrity: sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==}\n\n  webidl-conversions@3.0.1:\n    resolution: {integrity: sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==}\n\n  whatwg-url@5.0.0:\n    resolution: {integrity: sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==}\n\n  which@2.0.2:\n    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}\n    engines: {node: '>= 8'}\n    hasBin: true\n\n  wrap-ansi@7.0.0:\n    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}\n    engines: {node: '>=10'}\n\n  wrap-ansi@8.1.0:\n    resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}\n    engines: {node: '>=12'}\n\n  ws@8.18.2:\n    resolution: {integrity: sha512-DMricUmwGZUVr++AEAe2uiVM7UoO9MAVZMDu05UQOaUII0lp+zOzLLU4Xqh/JvTqklB1T4uELaaPBKyjE1r4fQ==}\n    engines: {node: '>=10.0.0'}\n    peerDependencies:\n      bufferutil: ^4.0.1\n      utf-8-validate: '>=5.0.2'\n    peerDependenciesMeta:\n      bufferutil:\n        optional: true\n      utf-8-validate:\n        optional: true\n\n  yaml@2.8.0:\n    resolution: {integrity: sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==}\n    engines: {node: '>= 14.6'}\n    hasBin: true\n\n  zod@3.24.1:\n    resolution: {integrity: sha512-muH7gBL9sI1nciMZV67X5fTKKBLtwpZ5VBp1vsOQzj1MhrBZ4wlVCm3gedKZWLp0Oyel8sIGfeiz54Su+OVT+A==}\n\nsnapshots:\n\n  '@alloc/quick-lru@5.2.0': {}\n\n  '@babel/runtime@7.27.6': {}\n\n  '@emnapi/runtime@1.4.3':\n    dependencies:\n      tslib: 2.8.1\n    optional: true\n\n  '@floating-ui/core@1.7.1':\n    dependencies:\n      '@floating-ui/utils': 0.2.9\n\n  '@floating-ui/dom@1.7.1':\n    dependencies:\n      '@floating-ui/core': 1.7.1\n      '@floating-ui/utils': 0.2.9\n\n  '@floating-ui/react-dom@2.1.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@floating-ui/dom': 1.7.1\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  '@floating-ui/utils@0.2.9': {}\n\n  '@hookform/resolvers@3.9.1(react-hook-form@7.54.1(react@19.0.0))':\n    dependencies:\n      react-hook-form: 7.54.1(react@19.0.0)\n\n  '@img/sharp-darwin-arm64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-darwin-arm64': 1.0.4\n    optional: true\n\n  '@img/sharp-darwin-x64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-darwin-x64': 1.0.4\n    optional: true\n\n  '@img/sharp-libvips-darwin-arm64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-darwin-x64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linux-arm64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linux-arm@1.0.5':\n    optional: true\n\n  '@img/sharp-libvips-linux-s390x@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linux-x64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linuxmusl-arm64@1.0.4':\n    optional: true\n\n  '@img/sharp-libvips-linuxmusl-x64@1.0.4':\n    optional: true\n\n  '@img/sharp-linux-arm64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-arm64': 1.0.4\n    optional: true\n\n  '@img/sharp-linux-arm@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-arm': 1.0.5\n    optional: true\n\n  '@img/sharp-linux-s390x@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-s390x': 1.0.4\n    optional: true\n\n  '@img/sharp-linux-x64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linux-x64': 1.0.4\n    optional: true\n\n  '@img/sharp-linuxmusl-arm64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linuxmusl-arm64': 1.0.4\n    optional: true\n\n  '@img/sharp-linuxmusl-x64@0.33.5':\n    optionalDependencies:\n      '@img/sharp-libvips-linuxmusl-x64': 1.0.4\n    optional: true\n\n  '@img/sharp-wasm32@0.33.5':\n    dependencies:\n      '@emnapi/runtime': 1.4.3\n    optional: true\n\n  '@img/sharp-win32-ia32@0.33.5':\n    optional: true\n\n  '@img/sharp-win32-x64@0.33.5':\n    optional: true\n\n  '@isaacs/cliui@8.0.2':\n    dependencies:\n      string-width: 5.1.2\n      string-width-cjs: string-width@4.2.3\n      strip-ansi: 7.1.0\n      strip-ansi-cjs: strip-ansi@6.0.1\n      wrap-ansi: 8.1.0\n      wrap-ansi-cjs: wrap-ansi@7.0.0\n\n  '@jridgewell/gen-mapping@0.3.8':\n    dependencies:\n      '@jridgewell/set-array': 1.2.1\n      '@jridgewell/sourcemap-codec': 1.5.0\n      '@jridgewell/trace-mapping': 0.3.25\n\n  '@jridgewell/resolve-uri@3.1.2': {}\n\n  '@jridgewell/set-array@1.2.1': {}\n\n  '@jridgewell/sourcemap-codec@1.5.0': {}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    dependencies:\n      '@jridgewell/resolve-uri': 3.1.2\n      '@jridgewell/sourcemap-codec': 1.5.0\n\n  '@next/env@15.2.4': {}\n\n  '@next/swc-darwin-arm64@15.2.4':\n    optional: true\n\n  '@next/swc-darwin-x64@15.2.4':\n    optional: true\n\n  '@next/swc-linux-arm64-gnu@15.2.4':\n    optional: true\n\n  '@next/swc-linux-arm64-musl@15.2.4':\n    optional: true\n\n  '@next/swc-linux-x64-gnu@15.2.4':\n    optional: true\n\n  '@next/swc-linux-x64-musl@15.2.4':\n    optional: true\n\n  '@next/swc-win32-arm64-msvc@15.2.4':\n    optional: true\n\n  '@next/swc-win32-x64-msvc@15.2.4':\n    optional: true\n\n  '@nodelib/fs.scandir@2.1.5':\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      run-parallel: 1.2.0\n\n  '@nodelib/fs.stat@2.0.5': {}\n\n  '@nodelib/fs.walk@1.2.8':\n    dependencies:\n      '@nodelib/fs.scandir': 2.1.5\n      fastq: 1.19.1\n\n  '@pkgjs/parseargs@0.11.0':\n    optional: true\n\n  '@radix-ui/number@1.1.0': {}\n\n  '@radix-ui/number@1.1.1': {}\n\n  '@radix-ui/primitive@1.1.1': {}\n\n  '@radix-ui/primitive@1.1.2': {}\n\n  '@radix-ui/react-accordion@1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collapsible': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-alert-dialog@1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dialog': 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-arrow@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-arrow@1.1.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-aspect-ratio@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-avatar@1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-checkbox@1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-collapsible@1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-collection@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-collection@1.1.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-compose-refs@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-compose-refs@1.1.2(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-context-menu@2.2.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-menu': 2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-context@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-context@1.1.2(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-dialog@1.1.14(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-focus-guards': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-focus-scope': 1.1.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.9(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.0.0)(react@19.0.0)\n      aria-hidden: 1.2.6\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-remove-scroll: 2.7.1(@types/react@19.0.0)(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-dialog@1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-focus-guards': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-focus-scope': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      aria-hidden: 1.2.6\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-remove-scroll: 2.7.1(@types/react@19.0.0)(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-direction@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-direction@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-dismissable-layer@1.1.10(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-escape-keydown': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-dismissable-layer@1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-escape-keydown': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-dropdown-menu@2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-menu': 2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-focus-guards@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-focus-guards@1.1.2(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-focus-scope@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-focus-scope@1.1.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-hover-card@1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-id@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-id@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-label@2.1.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-menu@2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-focus-guards': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-focus-scope': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      aria-hidden: 1.2.6\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-remove-scroll: 2.7.1(@types/react@19.0.0)(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-menubar@1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-menu': 2.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-navigation-menu@1.2.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-visually-hidden': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-popover@1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-focus-guards': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-focus-scope': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      aria-hidden: 1.2.6\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-remove-scroll: 2.7.1(@types/react@19.0.0)(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-popper@1.2.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@floating-ui/react-dom': 2.1.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-arrow': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-rect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/rect': 1.1.0\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-popper@1.2.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@floating-ui/react-dom': 2.1.3(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-arrow': 1.1.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-rect': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-size': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/rect': 1.1.1\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-portal@1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-portal@1.1.9(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-presence@1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-presence@1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-primitive@2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-primitive@2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-progress@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-radio-group@1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-roving-focus@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-roving-focus@1.1.10(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-collection': 1.1.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-scroll-area@1.2.9(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/number': 1.1.1\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-select@2.2.5(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/number': 1.1.1\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-collection': 1.1.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-focus-guards': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-focus-scope': 1.1.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-popper': 1.2.7(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.9(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.2.3(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-visually-hidden': 1.2.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      aria-hidden: 1.2.6\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-remove-scroll: 2.7.1(@types/react@19.0.0)(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-separator@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-slider@1.2.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/number': 1.1.0\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-size': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-slot@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-slot@1.2.3(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-switch@1.2.5(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-compose-refs': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-previous': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-size': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-tabs@1.1.12(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.2\n      '@radix-ui/react-context': 1.1.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-roving-focus': 1.1.10(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-toast@1.2.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-collection': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-visually-hidden': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-toggle-group@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-direction': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-roving-focus': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-toggle': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-toggle@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-tooltip@1.1.6(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/primitive': 1.1.1\n      '@radix-ui/react-compose-refs': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-context': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-dismissable-layer': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-popper': 1.2.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-portal': 1.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-presence': 1.1.2(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-slot': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-visually-hidden': 1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-use-callback-ref@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-callback-ref@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-controllable-state@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-controllable-state@1.2.2(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-effect-event': 0.0.2(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-effect-event@0.0.2(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-escape-keydown@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-escape-keydown@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-layout-effect@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-layout-effect@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-previous@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-previous@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-rect@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/rect': 1.1.0\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-rect@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/rect': 1.1.1\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-size@1.1.0(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-use-size@1.1.1(@types/react@19.0.0)(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      react: 19.0.0\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  '@radix-ui/react-visually-hidden@1.1.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.0.1(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/react-visually-hidden@1.2.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':\n    dependencies:\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n      '@types/react-dom': 19.0.0\n\n  '@radix-ui/rect@1.1.0': {}\n\n  '@radix-ui/rect@1.1.1': {}\n\n  '@supabase/auth-js@2.70.0':\n    dependencies:\n      '@supabase/node-fetch': 2.6.15\n\n  '@supabase/functions-js@2.4.4':\n    dependencies:\n      '@supabase/node-fetch': 2.6.15\n\n  '@supabase/node-fetch@2.6.15':\n    dependencies:\n      whatwg-url: 5.0.0\n\n  '@supabase/postgrest-js@1.19.4':\n    dependencies:\n      '@supabase/node-fetch': 2.6.15\n\n  '@supabase/realtime-js@2.11.10':\n    dependencies:\n      '@supabase/node-fetch': 2.6.15\n      '@types/phoenix': 1.6.6\n      '@types/ws': 8.18.1\n      ws: 8.18.2\n    transitivePeerDependencies:\n      - bufferutil\n      - utf-8-validate\n\n  '@supabase/storage-js@2.7.1':\n    dependencies:\n      '@supabase/node-fetch': 2.6.15\n\n  '@supabase/supabase-js@2.50.0':\n    dependencies:\n      '@supabase/auth-js': 2.70.0\n      '@supabase/functions-js': 2.4.4\n      '@supabase/node-fetch': 2.6.15\n      '@supabase/postgrest-js': 1.19.4\n      '@supabase/realtime-js': 2.11.10\n      '@supabase/storage-js': 2.7.1\n    transitivePeerDependencies:\n      - bufferutil\n      - utf-8-validate\n\n  '@swc/counter@0.1.3': {}\n\n  '@swc/helpers@0.5.15':\n    dependencies:\n      tslib: 2.8.1\n\n  '@types/d3-array@3.2.1': {}\n\n  '@types/d3-color@3.1.3': {}\n\n  '@types/d3-ease@3.0.2': {}\n\n  '@types/d3-interpolate@3.0.4':\n    dependencies:\n      '@types/d3-color': 3.1.3\n\n  '@types/d3-path@3.1.1': {}\n\n  '@types/d3-scale@4.0.9':\n    dependencies:\n      '@types/d3-time': 3.0.4\n\n  '@types/d3-shape@3.1.7':\n    dependencies:\n      '@types/d3-path': 3.1.1\n\n  '@types/d3-time@3.0.4': {}\n\n  '@types/d3-timer@3.0.2': {}\n\n  '@types/node@22.0.0':\n    dependencies:\n      undici-types: 6.11.1\n\n  '@types/phoenix@1.6.6': {}\n\n  '@types/react-dom@19.0.0':\n    dependencies:\n      '@types/react': 19.0.0\n\n  '@types/react@19.0.0':\n    dependencies:\n      csstype: 3.1.3\n\n  '@types/ws@8.18.1':\n    dependencies:\n      '@types/node': 22.0.0\n\n  ansi-regex@5.0.1: {}\n\n  ansi-regex@6.1.0: {}\n\n  ansi-styles@4.3.0:\n    dependencies:\n      color-convert: 2.0.1\n\n  ansi-styles@6.2.1: {}\n\n  any-promise@1.3.0: {}\n\n  anymatch@3.1.3:\n    dependencies:\n      normalize-path: 3.0.0\n      picomatch: 2.3.1\n\n  arg@5.0.2: {}\n\n  aria-hidden@1.2.6:\n    dependencies:\n      tslib: 2.8.1\n\n  autoprefixer@10.4.20(postcss@8.5.0):\n    dependencies:\n      browserslist: 4.25.0\n      caniuse-lite: 1.0.30001723\n      fraction.js: 4.3.7\n      normalize-range: 0.1.2\n      picocolors: 1.1.1\n      postcss: 8.5.0\n      postcss-value-parser: 4.2.0\n\n  balanced-match@1.0.2: {}\n\n  binary-extensions@2.3.0: {}\n\n  brace-expansion@2.0.2:\n    dependencies:\n      balanced-match: 1.0.2\n\n  braces@3.0.3:\n    dependencies:\n      fill-range: 7.1.1\n\n  browserslist@4.25.0:\n    dependencies:\n      caniuse-lite: 1.0.30001723\n      electron-to-chromium: 1.5.169\n      node-releases: 2.0.19\n      update-browserslist-db: 1.1.3(browserslist@4.25.0)\n\n  busboy@1.6.0:\n    dependencies:\n      streamsearch: 1.1.0\n\n  camelcase-css@2.0.1: {}\n\n  caniuse-lite@1.0.30001723: {}\n\n  chokidar@3.6.0:\n    dependencies:\n      anymatch: 3.1.3\n      braces: 3.0.3\n      glob-parent: 5.1.2\n      is-binary-path: 2.1.0\n      is-glob: 4.0.3\n      normalize-path: 3.0.0\n      readdirp: 3.6.0\n    optionalDependencies:\n      fsevents: 2.3.3\n\n  class-variance-authority@0.7.1:\n    dependencies:\n      clsx: 2.1.1\n\n  client-only@0.0.1: {}\n\n  clsx@2.1.1: {}\n\n  cmdk@1.0.4(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      '@radix-ui/react-dialog': 1.1.14(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      '@radix-ui/react-id': 1.1.1(@types/react@19.0.0)(react@19.0.0)\n      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      use-sync-external-store: 1.5.0(react@19.0.0)\n    transitivePeerDependencies:\n      - '@types/react'\n      - '@types/react-dom'\n\n  color-convert@2.0.1:\n    dependencies:\n      color-name: 1.1.4\n\n  color-name@1.1.4: {}\n\n  color-string@1.9.1:\n    dependencies:\n      color-name: 1.1.4\n      simple-swizzle: 0.2.2\n    optional: true\n\n  color@4.2.3:\n    dependencies:\n      color-convert: 2.0.1\n      color-string: 1.9.1\n    optional: true\n\n  commander@4.1.1: {}\n\n  cross-spawn@7.0.6:\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n\n  cssesc@3.0.0: {}\n\n  csstype@3.1.3: {}\n\n  d3-array@3.2.4:\n    dependencies:\n      internmap: 2.0.3\n\n  d3-color@3.1.0: {}\n\n  d3-ease@3.0.1: {}\n\n  d3-format@3.1.0: {}\n\n  d3-interpolate@3.0.1:\n    dependencies:\n      d3-color: 3.1.0\n\n  d3-path@3.1.0: {}\n\n  d3-scale@4.0.2:\n    dependencies:\n      d3-array: 3.2.4\n      d3-format: 3.1.0\n      d3-interpolate: 3.0.1\n      d3-time: 3.1.0\n      d3-time-format: 4.1.0\n\n  d3-shape@3.2.0:\n    dependencies:\n      d3-path: 3.1.0\n\n  d3-time-format@4.1.0:\n    dependencies:\n      d3-time: 3.1.0\n\n  d3-time@3.1.0:\n    dependencies:\n      d3-array: 3.2.4\n\n  d3-timer@3.0.1: {}\n\n  date-fns@4.1.0: {}\n\n  decimal.js-light@2.5.1: {}\n\n  detect-libc@2.0.4:\n    optional: true\n\n  detect-node-es@1.1.0: {}\n\n  didyoumean@1.2.2: {}\n\n  dlv@1.1.3: {}\n\n  dom-helpers@5.2.1:\n    dependencies:\n      '@babel/runtime': 7.27.6\n      csstype: 3.1.3\n\n  eastasianwidth@0.2.0: {}\n\n  electron-to-chromium@1.5.169: {}\n\n  embla-carousel-react@8.5.1(react@19.0.0):\n    dependencies:\n      embla-carousel: 8.5.1\n      embla-carousel-reactive-utils: 8.5.1(embla-carousel@8.5.1)\n      react: 19.0.0\n\n  embla-carousel-reactive-utils@8.5.1(embla-carousel@8.5.1):\n    dependencies:\n      embla-carousel: 8.5.1\n\n  embla-carousel@8.5.1: {}\n\n  emoji-regex@8.0.0: {}\n\n  emoji-regex@9.2.2: {}\n\n  escalade@3.2.0: {}\n\n  eventemitter3@4.0.7: {}\n\n  fast-equals@5.2.2: {}\n\n  fast-glob@3.3.3:\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      '@nodelib/fs.walk': 1.2.8\n      glob-parent: 5.1.2\n      merge2: 1.4.1\n      micromatch: 4.0.8\n\n  fastq@1.19.1:\n    dependencies:\n      reusify: 1.1.0\n\n  fill-range@7.1.1:\n    dependencies:\n      to-regex-range: 5.0.1\n\n  foreground-child@3.3.1:\n    dependencies:\n      cross-spawn: 7.0.6\n      signal-exit: 4.1.0\n\n  fraction.js@4.3.7: {}\n\n  fsevents@2.3.3:\n    optional: true\n\n  function-bind@1.1.2: {}\n\n  get-nonce@1.0.1: {}\n\n  glob-parent@5.1.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob-parent@6.0.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob@10.4.5:\n    dependencies:\n      foreground-child: 3.3.1\n      jackspeak: 3.4.3\n      minimatch: 9.0.5\n      minipass: 7.1.2\n      package-json-from-dist: 1.0.1\n      path-scurry: 1.11.1\n\n  hasown@2.0.2:\n    dependencies:\n      function-bind: 1.1.2\n\n  input-otp@1.4.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  internmap@2.0.3: {}\n\n  is-arrayish@0.3.2:\n    optional: true\n\n  is-binary-path@2.1.0:\n    dependencies:\n      binary-extensions: 2.3.0\n\n  is-core-module@2.16.1:\n    dependencies:\n      hasown: 2.0.2\n\n  is-extglob@2.1.1: {}\n\n  is-fullwidth-code-point@3.0.0: {}\n\n  is-glob@4.0.3:\n    dependencies:\n      is-extglob: 2.1.1\n\n  is-number@7.0.0: {}\n\n  isexe@2.0.0: {}\n\n  jackspeak@3.4.3:\n    dependencies:\n      '@isaacs/cliui': 8.0.2\n    optionalDependencies:\n      '@pkgjs/parseargs': 0.11.0\n\n  jiti@1.21.7: {}\n\n  js-tokens@4.0.0: {}\n\n  lilconfig@3.1.3: {}\n\n  lines-and-columns@1.2.4: {}\n\n  lodash@4.17.21: {}\n\n  loose-envify@1.4.0:\n    dependencies:\n      js-tokens: 4.0.0\n\n  lru-cache@10.4.3: {}\n\n  lucide-react@0.454.0(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n\n  merge2@1.4.1: {}\n\n  micromatch@4.0.8:\n    dependencies:\n      braces: 3.0.3\n      picomatch: 2.3.1\n\n  minimatch@9.0.5:\n    dependencies:\n      brace-expansion: 2.0.2\n\n  minipass@7.1.2: {}\n\n  mz@2.7.0:\n    dependencies:\n      any-promise: 1.3.0\n      object-assign: 4.1.1\n      thenify-all: 1.6.0\n\n  nanoid@3.3.11: {}\n\n  next-themes@0.4.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  next@15.2.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      '@next/env': 15.2.4\n      '@swc/counter': 0.1.3\n      '@swc/helpers': 0.5.15\n      busboy: 1.6.0\n      caniuse-lite: 1.0.30001723\n      postcss: 8.4.31\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      styled-jsx: 5.1.6(react@19.0.0)\n    optionalDependencies:\n      '@next/swc-darwin-arm64': 15.2.4\n      '@next/swc-darwin-x64': 15.2.4\n      '@next/swc-linux-arm64-gnu': 15.2.4\n      '@next/swc-linux-arm64-musl': 15.2.4\n      '@next/swc-linux-x64-gnu': 15.2.4\n      '@next/swc-linux-x64-musl': 15.2.4\n      '@next/swc-win32-arm64-msvc': 15.2.4\n      '@next/swc-win32-x64-msvc': 15.2.4\n      sharp: 0.33.5\n    transitivePeerDependencies:\n      - '@babel/core'\n      - babel-plugin-macros\n\n  node-releases@2.0.19: {}\n\n  normalize-path@3.0.0: {}\n\n  normalize-range@0.1.2: {}\n\n  object-assign@4.1.1: {}\n\n  object-hash@3.0.0: {}\n\n  package-json-from-dist@1.0.1: {}\n\n  path-key@3.1.1: {}\n\n  path-parse@1.0.7: {}\n\n  path-scurry@1.11.1:\n    dependencies:\n      lru-cache: 10.4.3\n      minipass: 7.1.2\n\n  picocolors@1.1.1: {}\n\n  picomatch@2.3.1: {}\n\n  pify@2.3.0: {}\n\n  pirates@4.0.7: {}\n\n  postcss-import@15.1.0(postcss@8.5.0):\n    dependencies:\n      postcss: 8.5.0\n      postcss-value-parser: 4.2.0\n      read-cache: 1.0.0\n      resolve: 1.22.10\n\n  postcss-js@4.0.1(postcss@8.5.0):\n    dependencies:\n      camelcase-css: 2.0.1\n      postcss: 8.5.0\n\n  postcss-load-config@4.0.2(postcss@8.5.0):\n    dependencies:\n      lilconfig: 3.1.3\n      yaml: 2.8.0\n    optionalDependencies:\n      postcss: 8.5.0\n\n  postcss-nested@6.2.0(postcss@8.5.0):\n    dependencies:\n      postcss: 8.5.0\n      postcss-selector-parser: 6.1.2\n\n  postcss-selector-parser@6.1.2:\n    dependencies:\n      cssesc: 3.0.0\n      util-deprecate: 1.0.2\n\n  postcss-value-parser@4.2.0: {}\n\n  postcss@8.4.31:\n    dependencies:\n      nanoid: 3.3.11\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  postcss@8.5.0:\n    dependencies:\n      nanoid: 3.3.11\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  prop-types@15.8.1:\n    dependencies:\n      loose-envify: 1.4.0\n      object-assign: 4.1.1\n      react-is: 16.13.1\n\n  queue-microtask@1.2.3: {}\n\n  react-day-picker@8.10.1(date-fns@4.1.0)(react@19.0.0):\n    dependencies:\n      date-fns: 4.1.0\n      react: 19.0.0\n\n  react-dom@19.0.0(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      scheduler: 0.25.0\n\n  react-hook-form@7.54.1(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n\n  react-is@16.13.1: {}\n\n  react-is@18.3.1: {}\n\n  react-remove-scroll-bar@2.3.8(@types/react@19.0.0)(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-style-singleton: 2.2.3(@types/react@19.0.0)(react@19.0.0)\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  react-remove-scroll@2.7.1(@types/react@19.0.0)(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-remove-scroll-bar: 2.3.8(@types/react@19.0.0)(react@19.0.0)\n      react-style-singleton: 2.2.3(@types/react@19.0.0)(react@19.0.0)\n      tslib: 2.8.1\n      use-callback-ref: 1.3.3(@types/react@19.0.0)(react@19.0.0)\n      use-sidecar: 1.1.3(@types/react@19.0.0)(react@19.0.0)\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  react-resizable-panels@2.1.7(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  react-smooth@4.0.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      fast-equals: 5.2.2\n      prop-types: 15.8.1\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-transition-group: 4.4.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n\n  react-style-singleton@2.2.3(@types/react@19.0.0)(react@19.0.0):\n    dependencies:\n      get-nonce: 1.0.1\n      react: 19.0.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  react-transition-group@4.4.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      '@babel/runtime': 7.27.6\n      dom-helpers: 5.2.1\n      loose-envify: 1.4.0\n      prop-types: 15.8.1\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  react@19.0.0: {}\n\n  read-cache@1.0.0:\n    dependencies:\n      pify: 2.3.0\n\n  readdirp@3.6.0:\n    dependencies:\n      picomatch: 2.3.1\n\n  recharts-scale@0.4.5:\n    dependencies:\n      decimal.js-light: 2.5.1\n\n  recharts@2.15.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      clsx: 2.1.1\n      eventemitter3: 4.0.7\n      lodash: 4.17.21\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n      react-is: 18.3.1\n      react-smooth: 4.0.4(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      recharts-scale: 0.4.5\n      tiny-invariant: 1.3.3\n      victory-vendor: 36.9.2\n\n  resolve@1.22.10:\n    dependencies:\n      is-core-module: 2.16.1\n      path-parse: 1.0.7\n      supports-preserve-symlinks-flag: 1.0.0\n\n  reusify@1.1.0: {}\n\n  run-parallel@1.2.0:\n    dependencies:\n      queue-microtask: 1.2.3\n\n  scheduler@0.25.0: {}\n\n  semver@7.7.2:\n    optional: true\n\n  sharp@0.33.5:\n    dependencies:\n      color: 4.2.3\n      detect-libc: 2.0.4\n      semver: 7.7.2\n    optionalDependencies:\n      '@img/sharp-darwin-arm64': 0.33.5\n      '@img/sharp-darwin-x64': 0.33.5\n      '@img/sharp-libvips-darwin-arm64': 1.0.4\n      '@img/sharp-libvips-darwin-x64': 1.0.4\n      '@img/sharp-libvips-linux-arm': 1.0.5\n      '@img/sharp-libvips-linux-arm64': 1.0.4\n      '@img/sharp-libvips-linux-s390x': 1.0.4\n      '@img/sharp-libvips-linux-x64': 1.0.4\n      '@img/sharp-libvips-linuxmusl-arm64': 1.0.4\n      '@img/sharp-libvips-linuxmusl-x64': 1.0.4\n      '@img/sharp-linux-arm': 0.33.5\n      '@img/sharp-linux-arm64': 0.33.5\n      '@img/sharp-linux-s390x': 0.33.5\n      '@img/sharp-linux-x64': 0.33.5\n      '@img/sharp-linuxmusl-arm64': 0.33.5\n      '@img/sharp-linuxmusl-x64': 0.33.5\n      '@img/sharp-wasm32': 0.33.5\n      '@img/sharp-win32-ia32': 0.33.5\n      '@img/sharp-win32-x64': 0.33.5\n    optional: true\n\n  shebang-command@2.0.0:\n    dependencies:\n      shebang-regex: 3.0.0\n\n  shebang-regex@3.0.0: {}\n\n  signal-exit@4.1.0: {}\n\n  simple-swizzle@0.2.2:\n    dependencies:\n      is-arrayish: 0.3.2\n    optional: true\n\n  sonner@1.7.1(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n\n  source-map-js@1.2.1: {}\n\n  streamsearch@1.1.0: {}\n\n  string-width@4.2.3:\n    dependencies:\n      emoji-regex: 8.0.0\n      is-fullwidth-code-point: 3.0.0\n      strip-ansi: 6.0.1\n\n  string-width@5.1.2:\n    dependencies:\n      eastasianwidth: 0.2.0\n      emoji-regex: 9.2.2\n      strip-ansi: 7.1.0\n\n  strip-ansi@6.0.1:\n    dependencies:\n      ansi-regex: 5.0.1\n\n  strip-ansi@7.1.0:\n    dependencies:\n      ansi-regex: 6.1.0\n\n  styled-jsx@5.1.6(react@19.0.0):\n    dependencies:\n      client-only: 0.0.1\n      react: 19.0.0\n\n  sucrase@3.35.0:\n    dependencies:\n      '@jridgewell/gen-mapping': 0.3.8\n      commander: 4.1.1\n      glob: 10.4.5\n      lines-and-columns: 1.2.4\n      mz: 2.7.0\n      pirates: 4.0.7\n      ts-interface-checker: 0.1.13\n\n  supports-preserve-symlinks-flag@1.0.0: {}\n\n  tailwind-merge@2.5.5: {}\n\n  tailwindcss-animate@1.0.7(tailwindcss@3.4.17):\n    dependencies:\n      tailwindcss: 3.4.17\n\n  tailwindcss@3.4.17:\n    dependencies:\n      '@alloc/quick-lru': 5.2.0\n      arg: 5.0.2\n      chokidar: 3.6.0\n      didyoumean: 1.2.2\n      dlv: 1.1.3\n      fast-glob: 3.3.3\n      glob-parent: 6.0.2\n      is-glob: 4.0.3\n      jiti: 1.21.7\n      lilconfig: 3.1.3\n      micromatch: 4.0.8\n      normalize-path: 3.0.0\n      object-hash: 3.0.0\n      picocolors: 1.1.1\n      postcss: 8.5.0\n      postcss-import: 15.1.0(postcss@8.5.0)\n      postcss-js: 4.0.1(postcss@8.5.0)\n      postcss-load-config: 4.0.2(postcss@8.5.0)\n      postcss-nested: 6.2.0(postcss@8.5.0)\n      postcss-selector-parser: 6.1.2\n      resolve: 1.22.10\n      sucrase: 3.35.0\n    transitivePeerDependencies:\n      - ts-node\n\n  thenify-all@1.6.0:\n    dependencies:\n      thenify: 3.3.1\n\n  thenify@3.3.1:\n    dependencies:\n      any-promise: 1.3.0\n\n  tiny-invariant@1.3.3: {}\n\n  to-regex-range@5.0.1:\n    dependencies:\n      is-number: 7.0.0\n\n  tr46@0.0.3: {}\n\n  ts-interface-checker@0.1.13: {}\n\n  tslib@2.8.1: {}\n\n  typescript@5.0.2: {}\n\n  undici-types@6.11.1: {}\n\n  update-browserslist-db@1.1.3(browserslist@4.25.0):\n    dependencies:\n      browserslist: 4.25.0\n      escalade: 3.2.0\n      picocolors: 1.1.1\n\n  use-callback-ref@1.3.3(@types/react@19.0.0)(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  use-sidecar@1.1.3(@types/react@19.0.0)(react@19.0.0):\n    dependencies:\n      detect-node-es: 1.1.0\n      react: 19.0.0\n      tslib: 2.8.1\n    optionalDependencies:\n      '@types/react': 19.0.0\n\n  use-sync-external-store@1.5.0(react@19.0.0):\n    dependencies:\n      react: 19.0.0\n\n  util-deprecate@1.0.2: {}\n\n  vaul@0.9.6(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0):\n    dependencies:\n      '@radix-ui/react-dialog': 1.1.14(@types/react-dom@19.0.0)(@types/react@19.0.0)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)\n      react: 19.0.0\n      react-dom: 19.0.0(react@19.0.0)\n    transitivePeerDependencies:\n      - '@types/react'\n      - '@types/react-dom'\n\n  victory-vendor@36.9.2:\n    dependencies:\n      '@types/d3-array': 3.2.1\n      '@types/d3-ease': 3.0.2\n      '@types/d3-interpolate': 3.0.4\n      '@types/d3-scale': 4.0.9\n      '@types/d3-shape': 3.1.7\n      '@types/d3-time': 3.0.4\n      '@types/d3-timer': 3.0.2\n      d3-array: 3.2.4\n      d3-ease: 3.0.1\n      d3-interpolate: 3.0.1\n      d3-scale: 4.0.2\n      d3-shape: 3.2.0\n      d3-time: 3.1.0\n      d3-timer: 3.0.1\n\n  webidl-conversions@3.0.1: {}\n\n  whatwg-url@5.0.0:\n    dependencies:\n      tr46: 0.0.3\n      webidl-conversions: 3.0.1\n\n  which@2.0.2:\n    dependencies:\n      isexe: 2.0.0\n\n  wrap-ansi@7.0.0:\n    dependencies:\n      ansi-styles: 4.3.0\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n\n  wrap-ansi@8.1.0:\n    dependencies:\n      ansi-styles: 6.2.1\n      string-width: 5.1.2\n      strip-ansi: 7.1.0\n\n  ws@8.18.2: {}\n\n  yaml@2.8.0: {}\n\n  zod@3.24.1: {}\n","size_bytes":160154},"components/FoodList.tsx":{"content":"\"use client\"\n\nimport { useEffect, useState, useCallback, useMemo } from \"react\"\nimport { supabase } from \"@/lib/supabase\"\nimport { apiService, invalidateApiCache } from \"@/lib/api\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { MapPin, Clock, User, ImageIcon, Package, Loader2 } from \"lucide-react\"\nimport Image from \"next/image\"\n\ninterface FoodItem {\n  id: string\n  title: string\n  description: string | null\n  category: string\n  quantity: string\n  expiry_date: string | null\n  pickup_location: string\n  image_url: string | null\n  status: string\n  created_at: string\n  user_id: string\n  owner_name?: string | null\n}\n\ninterface FoodListProps {\n  onClaimFood: (foodItem: FoodItem) => void\n}\n\nexport default function FoodList({ onClaimFood }: FoodListProps) {\n  const [foodItems, setFoodItems] = useState<FoodItem[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [filter, setFilter] = useState(\"all\")\n  const [requestingItems, setRequestingItems] = useState<Set<string>>(new Set())\n\n  useEffect(() => {\n    fetchFoodItems()\n  }, [])\n\n  const fetchFoodItems = async () => {\n    try {\n      setError(null)\n      console.log(\"Fetching food items...\")\n\n      // Fetch food items first\n      const { data: foodData, error: foodError } = await supabase\n        .from(\"food_items\")\n        .select(\"*\")\n        .eq(\"status\", \"available\")\n        .order(\"created_at\", { ascending: false })\n\n      if (foodError) {\n        console.error(\"Error fetching food items:\", foodError)\n        setError(`Error fetching food items: ${foodError.message}`)\n        setLoading(false)\n        return\n      }\n\n      console.log(\"Successfully fetched food items:\", foodData?.length || 0)\n\n      if (!foodData || foodData.length === 0) {\n        setFoodItems([])\n        setLoading(false)\n        return\n      }\n\n      // Get all unique user IDs\n      const userIds = [...new Set(foodData.map((item) => item.user_id))]\n      console.log(\"Fetching profiles for user IDs:\", userIds)\n\n      // Fetch all profiles for these users\n      const { data: profilesData, error: profilesError } = await supabase\n        .from(\"profiles\")\n        .select(\"id, full_name\")\n        .in(\"id\", userIds)\n\n      if (profilesError) {\n        console.warn(\"Error fetching profiles:\", profilesError)\n        // Continue without profile data\n      }\n\n      console.log(\"Successfully fetched profiles:\", profilesData?.length || 0)\n\n      // Create a map of user_id to profile data\n      const profilesMap = new Map()\n      if (profilesData) {\n        profilesData.forEach((profile) => {\n          profilesMap.set(profile.id, profile)\n        })\n      }\n\n      // Combine food items with profile data\n      const foodItemsWithProfiles = foodData.map((item) => ({\n        ...item,\n        owner_name: profilesMap.get(item.user_id)?.full_name || null,\n      }))\n\n      setFoodItems(foodItemsWithProfiles)\n    } catch (error: any) {\n      console.error(\"Unexpected error fetching food items:\", error)\n      setError(`Unexpected error: ${error.message}`)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const filteredItems =\n    filter === \"all\" ? foodItems : foodItems.filter((item) => item.category.toLowerCase() === filter)\n\n  const categories = [\"all\", \"fruits\", \"vegetables\", \"grains\", \"dairy\", \"meat\", \"prepared\", \"other\"]\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"w-16 h-16 border-4 border-emerald-200 border-t-emerald-600 rounded-full animate-spin mx-auto\"></div>\n          <div className=\"text-lg font-semibold text-gray-700\">Loading available food...</div>\n          <div className=\"text-sm text-gray-500\">Please wait while we fetch the latest items</div>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col justify-center items-center h-64 space-y-6\">\n        <div className=\"w-20 h-20 bg-red-100 rounded-full flex items-center justify-center\">\n          <div className=\"w-12 h-12 bg-red-500 rounded-full flex items-center justify-center\">\n            <span className=\"text-white text-2xl font-bold\">!</span>\n          </div>\n        </div>\n        <div className=\"text-center space-y-2\">\n          <div className=\"text-red-600 text-xl font-bold\">Error loading food items</div>\n          <div className=\"text-red-500 text-sm max-w-md\">{error}</div>\n        </div>\n        <Button \n          onClick={fetchFoodItems} \n          className=\"bg-white hover:bg-gray-50 text-gray-700 border-gray-300 hover:border-emerald-300 hover:text-emerald-700 shadow-md hover:shadow-lg transform hover:scale-105 transition-all duration-300\"\n        >\n          Try Again\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-wrap gap-3\">\n        {categories.map((category) => (\n          <Button\n            key={category}\n            onClick={() => setFilter(category)}\n            className={`text-sm font-semibold transition-all duration-300 ${\n              filter === category \n                ? \"bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white shadow-lg hover:shadow-xl transform hover:scale-105\" \n                : \"bg-white hover:bg-gray-50 text-gray-700 border-gray-300 hover:border-emerald-300 hover:text-emerald-700 shadow-md hover:shadow-lg transform hover:scale-105\"\n            }`}\n          >\n            {category === \"all\" ? \"All Categories\" : category.charAt(0).toUpperCase() + category.slice(1)}\n          </Button>\n        ))}\n      </div>\n\n      {filteredItems.length === 0 ? (\n        <div className=\"text-center py-16\">\n          <div className=\"w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n            <div className=\"w-16 h-16 bg-gray-300 rounded-full flex items-center justify-center\">\n              <span className=\"text-gray-500 text-3xl\">🍽️</span>\n            </div>\n          </div>\n          <div className=\"space-y-3\">\n            <div className=\"text-gray-700 text-xl font-bold\">No food items available at the moment</div>\n            <div className=\"text-gray-500 text-base\">Check back later or be the first to share!</div>\n            <div className=\"text-gray-400 text-sm\">Your generosity can make a difference in someone's day</div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6\">\n          {filteredItems.map((item) => (\n            <Card \n              key={item.id} \n              className=\"group overflow-hidden hover:shadow-2xl hover:scale-105 transition-all duration-500 cursor-pointer border-0 bg-gradient-to-br from-white via-gray-50/50 to-blue-50/30 w-full max-w-[320px] mx-auto shadow-lg hover:shadow-2xl\"\n            >\n              {/* Enhanced Gradient Overlay */}\n              <div className=\"absolute inset-0 bg-gradient-to-br from-emerald-500/5 via-blue-500/5 to-purple-500/5 opacity-0 group-hover:opacity-100 transition-all duration-500 pointer-events-none z-10\"></div>\n              \n              {/* Enhanced Corner Accent with Animation */}\n              <div className=\"absolute top-0 right-0 w-0 h-0 border-l-[25px] border-l-transparent border-t-[25px] border-t-emerald-400 opacity-0 group-hover:opacity-100 transition-all duration-500 transform rotate-12 scale-110\"></div>\n              \n              {/* Enhanced Image Container with Better Gradients */}\n              <div className=\"relative h-44 w-full overflow-hidden rounded-t-xl bg-gradient-to-br from-gray-100 via-gray-50 to-white shadow-inner\">\n                {item.image_url && (\n                  <Image \n                    src={item.image_url || \"/placeholder.svg\"} \n                    alt={item.title} \n                    fill \n                    className=\"object-cover object-center group-hover:scale-110 transition-transform duration-700 ease-out\" \n                    sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n                  />\n                )}\n                {!item.image_url && (\n                  <div className=\"flex items-center justify-center h-full text-gray-400 bg-gradient-to-br from-gray-100 to-gray-200\">\n                    <div className=\"text-center\">\n                      <ImageIcon className=\"h-10 w-10 mx-auto mb-2 text-gray-300\" />\n                      <span className=\"text-sm font-medium\">No image</span>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Enhanced Status Indicator with Pulse Animation */}\n                <div className=\"absolute top-3 left-3\">\n                  <div className=\"w-4 h-4 rounded-full border-3 border-white shadow-lg bg-emerald-500 animate-pulse\"></div>\n                </div>\n                \n                {/* Enhanced Category Badge with Glassmorphism */}\n                <div className=\"absolute top-3 right-3\">\n                  <div className=\"bg-white/95 backdrop-blur-md text-emerald-700 text-xs px-3 py-1.5 rounded-full font-semibold shadow-lg border border-white/20\">\n                    {item.category.charAt(0).toUpperCase() + item.category.slice(1)}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Enhanced Card Header with Better Typography */}\n              <CardHeader className=\"p-4 pb-3 bg-gradient-to-r from-white to-gray-50/50\">\n                <div className=\"flex justify-between items-start gap-3\">\n                  <div className=\"flex-1 relative group\">\n                    <CardTitle className=\"text-base font-bold line-clamp-2 leading-tight text-gray-800 group-hover:line-clamp-none transition-all duration-300\">\n                      {item.title}\n                    </CardTitle>\n                    <div className=\"absolute hidden group-hover:block bg-gray-900 text-white text-sm p-3 rounded-xl shadow-2xl z-20 mt-2 whitespace-normal max-w-xs backdrop-blur-sm\">\n                      {item.title}\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Enhanced Description with Better Hover Effect */}\n                {item.description && (\n                  <div className=\"relative group/desc\">\n                    <CardDescription className=\"line-clamp-2 text-sm leading-relaxed text-gray-600 group-hover/desc:line-clamp-none transition-all duration-300\">\n                      {item.description}\n                    </CardDescription>\n                    <div className=\"absolute hidden group-hover/desc:block bg-gray-900 text-white text-sm p-3 rounded-xl shadow-2xl z-20 mt-2 whitespace-normal max-w-xs backdrop-blur-sm\">\n                      {item.description}\n                    </div>\n                  </div>\n                )}\n              </CardHeader>\n              \n              {/* Enhanced Card Content with Better Spacing and Icons */}\n              <CardContent className=\"p-4 pt-0 space-y-3 bg-gradient-to-b from-gray-50/30 to-white\">\n                <div className=\"flex items-center gap-2 text-sm text-gray-600 relative group\">\n                  <MapPin className=\"h-4 w-4 shrink-0 text-blue-500\" />\n                  <span className=\"truncate group-hover:overflow-visible font-medium\">{item.pickup_location}</span>\n                  <div className=\"absolute hidden group-hover:block bg-gray-900 text-white text-sm p-3 rounded-xl shadow-2xl z-20 mt-2 whitespace-nowrap backdrop-blur-sm\">\n                    {item.pickup_location}\n                  </div>\n                </div>\n\n                <div className=\"flex items-center gap-2 text-sm text-gray-600 bg-gray-50 px-3 py-2 rounded-lg border border-gray-200\">\n                  <User className=\"h-4 w-4 text-emerald-500\" />\n                  <span className=\"font-medium\">By <span className=\"font-semibold text-gray-700\">{item.owner_name || \"Anonymous\"}</span></span>\n                </div>\n\n                <div className=\"flex justify-between items-center text-sm\">\n                  <div className=\"flex items-center gap-2\">\n                    <Package className=\"h-4 w-4 text-emerald-500\" />\n                    <span className=\"font-semibold text-gray-700\">{item.quantity}</span>\n                  </div>\n                  {item.expiry_date && (\n                    <div className=\"flex items-center gap-2 text-orange-600 bg-orange-50 px-3 py-2 rounded-lg border border-orange-200\">\n                      <Clock className=\"h-4 w-4\" />\n                      <span className=\"font-medium\">{new Date(item.expiry_date).toLocaleDateString()}</span>\n                    </div>\n                  )}\n                </div>\n\n                {/* Enhanced Action Button */}\n                <Button \n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setRequestingItems(prev => new Set(prev).add(item.id));\n                    onClaimFood(item);\n                    \n                    // Remove loading state after a delay\n                    setTimeout(() => {\n                      setRequestingItems(prev => {\n                        const newSet = new Set(prev);\n                        newSet.delete(item.id);\n                        return newSet;\n                      });\n                    }, 2000);\n                  }} \n                  className=\"w-full bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white text-sm py-2.5 h-auto disabled:opacity-50 transform hover:scale-105 transition-all duration-300 shadow-lg hover:shadow-xl font-semibold rounded-lg\"\n                  disabled={requestingItems.has(item.id)}\n                >\n                  {requestingItems.has(item.id) ? \"Requesting...\" : \"Request\"}\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}","size_bytes":14194}},"version":1}